[{"/Users/ict/Documents/GitHub/certus-master/src/index.js":"1","/Users/ict/Documents/GitHub/certus-master/src/reportWebVitals.js":"2","/Users/ict/Documents/GitHub/certus-master/src/app/store/configureStore.js":"3","/Users/ict/Documents/GitHub/certus-master/src/app/layout/App.js":"4","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesActions.js":"5","/Users/ict/Documents/GitHub/certus-master/src/app/store/rootReducer.js":"6","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesConstants.js":"7","/Users/ict/Documents/GitHub/certus-master/src/app/async/asyncReducer.js":"8","/Users/ict/Documents/GitHub/certus-master/src/app/common/loadJs/loadJs.js":"9","/Users/ict/Documents/GitHub/certus-master/src/app/util/util.js":"10","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/Employees.jsx":"11","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Header.jsx":"12","/Users/ict/Documents/GitHub/certus-master/src/features/auth/Login.jsx":"13","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Footer.jsx":"14","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Sidebar.jsx":"15","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/homePage/HomePage.jsx":"16","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/SubHeader.jsx":"17","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/OrderPage.jsx":"18","/Users/ict/Documents/GitHub/certus-master/src/app/modal/ModalManager.jsx":"19","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/LabPage.jsx":"20","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/ExpensePage.jsx":"21","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/DocPage.jsx":"22","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/CounterpartyPage.jsx":"23","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/DocumentTypePage.jsx":"24","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/DutyPage.jsx":"25","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/DepartmentPage.jsx":"26","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/TrainingPage.jsx":"27","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/SignOfLegalActPage.jsx":"28","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/OrderSourcePage.jsx":"29","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/ServiceTypePage.jsx":"30","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/ExpenseGroupPage.jsx":"31","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/ReferencePage.jsx":"32","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/ExpenseTypePage.jsx":"33","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/SkillPage.jsx":"34","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/ProductServicePage.jsx":"35","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/PersonalPage.jsx":"36","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/ControlSystemPage.jsx":"37","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemReducer.js":"38","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceReducer.js":"39","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseReducer.js":"40","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalReducer.js":"41","/Users/ict/Documents/GitHub/certus-master/src/features/auth/authReducer.js":"42","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderReducer.js":"43","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesReducer.js":"44","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labReducer.js":"45","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docReducer.js":"46","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeReducer.js":"47","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeReducer.js":"48","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentReducer.js":"49","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceReducer.js":"50","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyReducer.js":"51","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActsReducer.js":"52","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceReducer.js":"53","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupReducer.js":"54","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyReducer.js":"55","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillReducer.js":"56","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingReducer.js":"57","/Users/ict/Documents/GitHub/certus-master/src/app/modal/modalReducer.js":"58","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeReducer.js":"59","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentActions.js":"60","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyActions.js":"61","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceActions.js":"62","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docActions.js":"63","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeActions.js":"64","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceActions.js":"65","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeActions.js":"66","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeActions.js":"67","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupActions.js":"68","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemActions.js":"69","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalActions.js":"70","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingActions.js":"71","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceActions.js":"72","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillActions.js":"73","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActActions.js":"74","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceConstants.js":"75","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseConstants.js":"76","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docConstants.js":"77","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labConstants.js":"78","/Users/ict/Documents/GitHub/certus-master/src/features/auth/authConstants.js":"79","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalConstants.js":"80","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeConstants.js":"81","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderConstants.js":"82","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceConstants.js":"83","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActConstants.js":"84","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentConstants.js":"85","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceConstants.js":"86","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeConstants.js":"87","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupConstants.js":"88","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemConstants.js":"89","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillConstants.js":"90","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyConstants.js":"91","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyConstants.js":"92","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingConstants.js":"93","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeConstants.js":"94","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyActions.js":"95","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labActions.js":"96","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseActions.js":"97","/Users/ict/Documents/GitHub/certus-master/src/features/auth/authActions.js":"98","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderActions.js":"99","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/ServiceTypePageModal.jsx":"100","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/TrainingPageModal.jsx":"101","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/SignOfLegalActPageModal.jsx":"102","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/SkillPageModal.jsx":"103","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/ReferencePageModal.jsx":"104","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/OrderSourcePageModal.jsx":"105","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/ExpenseTypePageModal.jsx":"106","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/ExpenseGroupPageModal.jsx":"107","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/DocumentTypePageModal.jsx":"108","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/CounterpartyPageModal.jsx":"109","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/DepartmentPageModal.jsx":"110","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/DutyPageModal.jsx":"111","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/SelectEmployeeModal.jsx":"112","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/OrderPageModal.jsx":"113","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/LabPageModal.jsx":"114","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/ProductServicePageModal.jsx":"115","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/ExpensePageModal.jsx":"116","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/ControlSystemPageModal.jsx":"117","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/EmployeesModal.jsx":"118","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/PersonalPageModal.jsx":"119","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/DocPageModal.jsx":"120","/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MyTextInput.jsx":"121","/Users/ict/Documents/GitHub/certus-master/src/app/modal/ModalWrapper.jsx":"122","/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MySearchableSelect.jsx":"123","/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MyTextArea.jsx":"124","/Users/ict/Documents/GitHub/certus-master/src/app/api/mockApi.js":"125","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDepartments.js":"126","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataCounterparty.js":"127","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleData.js":"128","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataCrm.js":"129","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDocs.js":"130","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDuties.js":"131","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpense.js":"132","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpenseGroups.js":"133","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDocumentTypes.js":"134","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataPersonal.js":"135","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataTraining.js":"136","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataSkill.js":"137","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataSignOfLegalAct.js":"138","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataProductService.js":"139","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataReference.js":"140","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataServiceTypes.js":"141","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataOrder.js":"142","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataLab.js":"143","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataOrderSource.js":"144","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpenseTypes.js":"145","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataControlSystem.js":"146","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/CrmPage.jsx":"147","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmReducer.js":"148","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmActions.js":"149","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmConstants.js":"150","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/CrmPageModal.jsx":"151","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/oparationReducer.js":"152","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/OperationPageModal.jsx":"153","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/OperationPage.jsx":"154","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/operationActions.js":"155","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/operationConstants.js":"156"},{"size":1200,"mtime":1627898731730,"results":"157","hashOfConfig":"158"},{"size":362,"mtime":1622812150000,"results":"159","hashOfConfig":"158"},{"size":340,"mtime":1622812150000,"results":"160","hashOfConfig":"158"},{"size":6670,"mtime":1622838726249,"results":"161","hashOfConfig":"158"},{"size":2781,"mtime":1627762230735,"results":"162","hashOfConfig":"158"},{"size":3082,"mtime":1622838556164,"results":"163","hashOfConfig":"158"},{"size":206,"mtime":1627761596848,"results":"164","hashOfConfig":"158"},{"size":1113,"mtime":1622812150000,"results":"165","hashOfConfig":"158"},{"size":332,"mtime":1622812150000,"results":"166","hashOfConfig":"158"},{"size":86,"mtime":1622812150000,"results":"167","hashOfConfig":"158"},{"size":14658,"mtime":1627770597033,"results":"168","hashOfConfig":"158"},{"size":17419,"mtime":1627897979505,"results":"169","hashOfConfig":"158"},{"size":8764,"mtime":1627392061758,"results":"170","hashOfConfig":"158"},{"size":1006,"mtime":1627776023216,"results":"171","hashOfConfig":"158"},{"size":17889,"mtime":1625828871497,"results":"172","hashOfConfig":"158"},{"size":3160,"mtime":1627898975812,"results":"173","hashOfConfig":"158"},{"size":4001,"mtime":1622812150000,"results":"174","hashOfConfig":"158"},{"size":8871,"mtime":1628163887867,"results":"175","hashOfConfig":"158"},{"size":3182,"mtime":1622839039789,"results":"176","hashOfConfig":"158"},{"size":7806,"mtime":1627774687891,"results":"177","hashOfConfig":"158"},{"size":8718,"mtime":1627810480172,"results":"178","hashOfConfig":"158"},{"size":7811,"mtime":1627739876437,"results":"179","hashOfConfig":"158"},{"size":7645,"mtime":1627568793690,"results":"180","hashOfConfig":"158"},{"size":7394,"mtime":1627555352817,"results":"181","hashOfConfig":"158"},{"size":7252,"mtime":1627567300426,"results":"182","hashOfConfig":"158"},{"size":7376,"mtime":1627566118667,"results":"183","hashOfConfig":"158"},{"size":7695,"mtime":1627646176243,"results":"184","hashOfConfig":"158"},{"size":7585,"mtime":1627633014354,"results":"185","hashOfConfig":"158"},{"size":7354,"mtime":1627592719567,"results":"186","hashOfConfig":"158"},{"size":7349,"mtime":1627575918279,"results":"187","hashOfConfig":"158"},{"size":7419,"mtime":1627571629068,"results":"188","hashOfConfig":"158"},{"size":7289,"mtime":1627631401885,"results":"189","hashOfConfig":"158"},{"size":7555,"mtime":1627572561122,"results":"190","hashOfConfig":"158"},{"size":7250,"mtime":1627635555768,"results":"191","hashOfConfig":"158"},{"size":10342,"mtime":1628597983583,"results":"192","hashOfConfig":"158"},{"size":8237,"mtime":1622836214478,"results":"193","hashOfConfig":"158"},{"size":9113,"mtime":1622840474792,"results":"194","hashOfConfig":"158"},{"size":983,"mtime":1622837808677,"results":"195","hashOfConfig":"158"},{"size":1046,"mtime":1628597836707,"results":"196","hashOfConfig":"158"},{"size":955,"mtime":1627806591296,"results":"197","hashOfConfig":"158"},{"size":865,"mtime":1622812150000,"results":"198","hashOfConfig":"158"},{"size":1516,"mtime":1627472208994,"results":"199","hashOfConfig":"158"},{"size":1251,"mtime":1628150683677,"results":"200","hashOfConfig":"158"},{"size":993,"mtime":1622812150000,"results":"201","hashOfConfig":"158"},{"size":859,"mtime":1627773848450,"results":"202","hashOfConfig":"158"},{"size":765,"mtime":1627739745430,"results":"203","hashOfConfig":"158"},{"size":931,"mtime":1625828993049,"results":"204","hashOfConfig":"158"},{"size":987,"mtime":1627555191481,"results":"205","hashOfConfig":"158"},{"size":942,"mtime":1627565853027,"results":"206","hashOfConfig":"158"},{"size":920,"mtime":1627631449250,"results":"207","hashOfConfig":"158"},{"size":817,"mtime":1627567447817,"results":"208","hashOfConfig":"158"},{"size":1054,"mtime":1627633191611,"results":"209","hashOfConfig":"158"},{"size":1059,"mtime":1627593245797,"results":"210","hashOfConfig":"158"},{"size":994,"mtime":1627571704233,"results":"211","hashOfConfig":"158"},{"size":995,"mtime":1627568617551,"results":"212","hashOfConfig":"158"},{"size":833,"mtime":1627635051655,"results":"213","hashOfConfig":"158"},{"size":937,"mtime":1627639157761,"results":"214","hashOfConfig":"158"},{"size":631,"mtime":1622812150000,"results":"215","hashOfConfig":"158"},{"size":972,"mtime":1627577399226,"results":"216","hashOfConfig":"158"},{"size":2705,"mtime":1627565602772,"results":"217","hashOfConfig":"158"},{"size":2387,"mtime":1627568020835,"results":"218","hashOfConfig":"158"},{"size":2482,"mtime":1627731805238,"results":"219","hashOfConfig":"158"},{"size":2323,"mtime":1627738435367,"results":"220","hashOfConfig":"158"},{"size":2655,"mtime":1627577269210,"results":"221","hashOfConfig":"158"},{"size":2575,"mtime":1627594099462,"results":"222","hashOfConfig":"158"},{"size":2579,"mtime":1627573129683,"results":"223","hashOfConfig":"158"},{"size":2615,"mtime":1627577249183,"results":"224","hashOfConfig":"158"},{"size":2623,"mtime":1627572167280,"results":"225","hashOfConfig":"158"},{"size":2077,"mtime":1622838106966,"results":"226","hashOfConfig":"158"},{"size":1933,"mtime":1622812150000,"results":"227","hashOfConfig":"158"},{"size":2500,"mtime":1627645908760,"results":"228","hashOfConfig":"158"},{"size":2986,"mtime":1628603533556,"results":"229","hashOfConfig":"158"},{"size":2367,"mtime":1627637928972,"results":"230","hashOfConfig":"158"},{"size":2736,"mtime":1627633639459,"results":"231","hashOfConfig":"158"},{"size":254,"mtime":1622812150000,"results":"232","hashOfConfig":"158"},{"size":190,"mtime":1622812150000,"results":"233","hashOfConfig":"158"},{"size":158,"mtime":1622812150000,"results":"234","hashOfConfig":"158"},{"size":158,"mtime":1622812150000,"results":"235","hashOfConfig":"158"},{"size":88,"mtime":1622812150000,"results":"236","hashOfConfig":"158"},{"size":198,"mtime":1622812150000,"results":"237","hashOfConfig":"158"},{"size":230,"mtime":1625828993048,"results":"238","hashOfConfig":"158"},{"size":227,"mtime":1622812150000,"results":"239","hashOfConfig":"158"},{"size":210,"mtime":1622812150000,"results":"240","hashOfConfig":"158"},{"size":270,"mtime":1622812150000,"results":"241","hashOfConfig":"158"},{"size":214,"mtime":1622812150000,"results":"242","hashOfConfig":"158"},{"size":234,"mtime":1622812150000,"results":"243","hashOfConfig":"158"},{"size":230,"mtime":1622812150000,"results":"244","hashOfConfig":"158"},{"size":238,"mtime":1622812150000,"results":"245","hashOfConfig":"158"},{"size":246,"mtime":1622837695008,"results":"246","hashOfConfig":"158"},{"size":174,"mtime":1622812150000,"results":"247","hashOfConfig":"158"},{"size":166,"mtime":1622812150000,"results":"248","hashOfConfig":"158"},{"size":230,"mtime":1622812150000,"results":"249","hashOfConfig":"158"},{"size":198,"mtime":1622812150000,"results":"250","hashOfConfig":"158"},{"size":230,"mtime":1622812150000,"results":"251","hashOfConfig":"158"},{"size":2589,"mtime":1627569342055,"results":"252","hashOfConfig":"158"},{"size":2582,"mtime":1627774644083,"results":"253","hashOfConfig":"158"},{"size":2693,"mtime":1627810669517,"results":"254","hashOfConfig":"158"},{"size":821,"mtime":1627472770117,"results":"255","hashOfConfig":"158"},{"size":2947,"mtime":1628149961500,"results":"256","hashOfConfig":"158"},{"size":3742,"mtime":1627576097699,"results":"257","hashOfConfig":"158"},{"size":5240,"mtime":1627649083682,"results":"258","hashOfConfig":"158"},{"size":3885,"mtime":1627633046103,"results":"259","hashOfConfig":"158"},{"size":4299,"mtime":1627635016263,"results":"260","hashOfConfig":"158"},{"size":3792,"mtime":1627631942598,"results":"261","hashOfConfig":"158"},{"size":3811,"mtime":1627592791003,"results":"262","hashOfConfig":"158"},{"size":4860,"mtime":1627771217828,"results":"263","hashOfConfig":"158"},{"size":3792,"mtime":1627571683306,"results":"264","hashOfConfig":"158"},{"size":3844,"mtime":1627563596399,"results":"265","hashOfConfig":"158"},{"size":4951,"mtime":1627568885754,"results":"266","hashOfConfig":"158"},{"size":3765,"mtime":1627563583763,"results":"267","hashOfConfig":"158"},{"size":3711,"mtime":1627567694236,"results":"268","hashOfConfig":"158"},{"size":3875,"mtime":1628075336378,"results":"269","hashOfConfig":"158"},{"size":8682,"mtime":1628149516090,"results":"270","hashOfConfig":"158"},{"size":6816,"mtime":1627774839564,"results":"271","hashOfConfig":"158"},{"size":32190,"mtime":1628718777324,"results":"272","hashOfConfig":"158"},{"size":10981,"mtime":1627810532926,"results":"273","hashOfConfig":"158"},{"size":25687,"mtime":1622840121146,"results":"274","hashOfConfig":"158"},{"size":13744,"mtime":1627770916174,"results":"275","hashOfConfig":"158"},{"size":10585,"mtime":1622836463704,"results":"276","hashOfConfig":"158"},{"size":6100,"mtime":1627771614284,"results":"277","hashOfConfig":"158"},{"size":446,"mtime":1622812150000,"results":"278","hashOfConfig":"158"},{"size":2304,"mtime":1622812150000,"results":"279","hashOfConfig":"158"},{"size":1493,"mtime":1628606885383,"results":"280","hashOfConfig":"158"},{"size":409,"mtime":1622812150000,"results":"281","hashOfConfig":"158"},{"size":4407,"mtime":1625828667335,"results":"282","hashOfConfig":"158"},{"size":226,"mtime":1625828667337,"results":"283","hashOfConfig":"158"},{"size":581,"mtime":1625828667336,"results":"284","hashOfConfig":"158"},{"size":1774,"mtime":1625828667335,"results":"285","hashOfConfig":"158"},{"size":2493,"mtime":1625828667336,"results":"286","hashOfConfig":"158"},{"size":492,"mtime":1625828667337,"results":"287","hashOfConfig":"158"},{"size":227,"mtime":1625828667338,"results":"288","hashOfConfig":"158"},{"size":856,"mtime":1625828667339,"results":"289","hashOfConfig":"158"},{"size":248,"mtime":1625828667339,"results":"290","hashOfConfig":"158"},{"size":228,"mtime":1625828667338,"results":"291","hashOfConfig":"158"},{"size":1325,"mtime":1625828667342,"results":"292","hashOfConfig":"158"},{"size":553,"mtime":1625828667345,"results":"293","hashOfConfig":"158"},{"size":387,"mtime":1625828667344,"results":"294","hashOfConfig":"158"},{"size":255,"mtime":1625828667344,"results":"295","hashOfConfig":"158"},{"size":3331,"mtime":1625828667342,"results":"296","hashOfConfig":"158"},{"size":257,"mtime":1625828667343,"results":"297","hashOfConfig":"158"},{"size":254,"mtime":1625828751473,"results":"298","hashOfConfig":"158"},{"size":1451,"mtime":1625828667341,"results":"299","hashOfConfig":"158"},{"size":641,"mtime":1625828667341,"results":"300","hashOfConfig":"158"},{"size":234,"mtime":1625828667341,"results":"301","hashOfConfig":"158"},{"size":243,"mtime":1625828667340,"results":"302","hashOfConfig":"158"},{"size":3370,"mtime":1625828667336,"results":"303","hashOfConfig":"158"},{"size":7883,"mtime":1627823859900,"results":"304","hashOfConfig":"158"},{"size":796,"mtime":1627814841502,"results":"305","hashOfConfig":"158"},{"size":2297,"mtime":1627894484450,"results":"306","hashOfConfig":"158"},{"size":158,"mtime":1625829733005,"results":"307","hashOfConfig":"158"},{"size":39629,"mtime":1627895609134,"results":"308","hashOfConfig":"158"},{"size":965,"mtime":1628159887442,"results":"309","hashOfConfig":"158"},{"size":24323,"mtime":1628581923103,"results":"310","hashOfConfig":"158"},{"size":8773,"mtime":1628607139775,"results":"311","hashOfConfig":"158"},{"size":2542,"mtime":1628512572962,"results":"312","hashOfConfig":"158"},{"size":206,"mtime":1625829843569,"results":"313","hashOfConfig":"158"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"317"},"9beyy0",{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"317"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"317"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"317"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"317"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"317"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"349","usedDeprecatedRules":"317"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"317"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"317"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"317"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"317"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"317"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"317"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"317"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"317"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"317"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"317"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"317"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"317"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"317"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"317"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"317"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"317"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"317"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"317"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"317"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"317"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"317"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"317"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"317"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"317"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"317"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"317"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"317"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"317"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"317"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"317"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"317"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"317"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"317"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"317"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"317"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"317"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"317"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"317"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"317"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"317"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"317"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"317"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"317"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"317"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"317"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"317"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"317"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"317"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"317"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"317"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"317"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"317"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"317"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"317"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"317"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"317"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"317"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"317"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"317"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"317"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"317"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"613","messages":"614","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"317"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"317"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"317"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"317"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"317"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634","usedDeprecatedRules":"317"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"317"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"317"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"317"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"317"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"317"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"317"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"317"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"317"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707","usedDeprecatedRules":"317"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},"/Users/ict/Documents/GitHub/certus-master/src/index.js",["710"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./app/layout/App\";\nimport configureStore from \"./app/store/configureStore\";\nimport { loadEmployees } from \"./features/dashboard/employees/employeesActions\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://api.certusbase.com/api/v1/\";\n\nconst store = configureStore();\n// store.dispatch(loadEmployees())\n\nconst rootEl = document.getElementById(\"root\");\n\nfunction render() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>,\n    rootEl\n  );\n}\nif (module.hot) {\n  module.hot.accept(\"./app/layout/App\", function () {\n    setTimeout(render);\n  });\n}\nrender();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["711","712"],"/Users/ict/Documents/GitHub/certus-master/src/reportWebVitals.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/store/configureStore.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/layout/App.js",["713","714"],"// import \"./App.css\";\nimport { Route } from \"react-router\";\nimport Login from \"../../features/auth/Login\";\nimport Header from \"../../features/dashboard/commonPage/Header\";\nimport Sidebar from \"../../features/dashboard/commonPage/Sidebar\";\nimport SubHeader from \"../../features/dashboard/commonPage/SubHeader\";\nimport HomePage from \"../../features/dashboard/homePage/HomePage\";\nimport Employees from \"../../features/dashboard/employees/Employees\";\nimport Footer from \"../../features/dashboard/commonPage/Footer\";\nimport { useSelector } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport ModalManager from \"../modal/ModalManager\";\nimport OrderPage from \"../../features/dashboard/orderPage/OrderPage\";\nimport LabPage from \"../../features/dashboard/labPage/LabPage\";\nimport ExpensePage from \"../../features/dashboard/expensePage/ExpensePage\";\nimport DocumetTypePage from \"../../features/dashboard/settings/documentType/DocumentTypePage\";\nimport DepartmentPage from \"../../features/dashboard/settings/department/DepartmentPage\";\nimport DutyPage from \"../../features/dashboard/settings/duty/DutyPage\";\nimport DocPage from \"../../features/dashboard/docPage/DocPage\";\nimport CounterpartyPage from \"../../features/dashboard/settings/counterparty/CounterpartyPage\";\nimport ExpenseGroupPage from \"../../features/dashboard/settings/expenseGroup/ExpenseGroupPage\";\nimport ExpenseTypePage from \"../../features/dashboard/settings/expenseType/ExpenseTypePage\";\nimport ServiceTypePage from \"../../features/dashboard/settings/serviceType/ServiceTypePage\";\nimport OrderSourcePage from \"../../features/dashboard/settings/orderSource/OrderSourcePage\";\nimport ReferencePage from \"../../features/dashboard/settings/reference/ReferencePage\";\nimport useScript from \"../common/loadJs/loadJs\";\nimport CrmPage from \"../../features/dashboard/crmPage/CrmPage\";\nimport OperationPage from \"../../features/dashboard/operationPage/OperationPage\";\nimport ProductServicePage from \"../../features/dashboard/certifications/productServicePage/ProductServicePage\";\nimport SignOfLegalActPage from \"../../features/dashboard/settings/signOfLegalAct/SignOfLegalActPage\";\nimport SkillPage from \"../../features/dashboard/settings/skill/SkillPage\";\nimport TrainingPage from \"../../features/dashboard/settings/training/TrainingPage\";\nimport PersonalPage from \"../../features/dashboard/certifications/personalPage/PersonalPage\";\nimport React from \"react\";\nimport ControlSystemPage from \"../../features/dashboard/certifications/controlSystem/ControlSystemPage\";\nfunction App() {\n  // const { initialized } = useSelector((state) => state.async);\n  // useScript(\"../../../public/assets/js/app.js\")\n  // useScript(\"../../../public/assets/js/custom.js\")\n  // if(!initialized) return (\n  //   <div id=\"load_screen\"> <div class=\"loader\"> <div class=\"loader-content\">\n  //       <div class=\"spinner-grow align-self-center\"></div>\n  //   </div></div></div>\n  //  )\n\n  return (\n    <React.Fragment>\n      <ToastContainer position=\"bottom-right\" />\n      <ModalManager />\n\n      <Route exact path=\"/\" component={Login} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <React.Fragment>\n            <Header />\n            <SubHeader />\n            {/* BEGIN MAIN CONTAINER */}\n            <div className=\"main-container\" id=\"container\">\n              <div className=\"overlay\"></div>\n              <div className=\"search-overlay\"></div>\n              {/* BEGIN SIDEBAR */}\n              <Sidebar />\n              {/* END SIDEBAR */}\n\n              {/* BEGIN PAGE CONTENT */}\n              <div id=\"content\" className=\"main-content\">\n                <Route exact path=\"/dashboard\" component={HomePage} />\n                <Route exact path=\"/crm\" component={CrmPage} />\n                <Route exact path=\"/employees\" component={Employees} />\n                <Route exact path=\"/orders\" component={OrderPage} />\n                <Route exact path=\"/operation\" component={OperationPage} />\n                <Route exact path=\"/labs\" component={LabPage} />\n                <Route exact path=\"/documents\" component={DocPage} />\n                <Route exact path=\"/expense\" component={ExpensePage} />\n                <Route\n                  exact\n                  path=\"/settings/documentTypes\"\n                  component={DocumetTypePage}\n                />\n                <Route\n                  exact\n                  path=\"/settings/departments\"\n                  component={DepartmentPage}\n                />\n                <Route exact path=\"/settings/duties\" component={DutyPage} />\n                <Route\n                  exact\n                  path=\"/settings/counterparties\"\n                  component={CounterpartyPage}\n                />\n                <Route\n                  exact\n                  path=\"/settings/expenseGroups\"\n                  component={ExpenseGroupPage}\n                />\n                <Route\n                  exact\n                  path=\"/settings/expenseTypes\"\n                  component={ExpenseTypePage}\n                />\n                <Route\n                  exact\n                  path=\"/settings/serviceTypes\"\n                  component={ServiceTypePage}\n                />\n                <Route\n                  exact\n                  path=\"/settings/orderSources\"\n                  component={OrderSourcePage}\n                />\n                <Route\n                  exact\n                  path=\"/settings/references\"\n                  component={ReferencePage}\n                />\n                <Route\n                  exact\n                  path=\"/settings/signOfLegalAct\"\n                  component={SignOfLegalActPage}\n                />\n                <Route exact path=\"/settings/Skills\" component={SkillPage} />\n                <Route\n                  exact\n                  path=\"/settings/Trainings\"\n                  component={TrainingPage}\n                />\n                <Route\n                  exact\n                  path=\"/certificates/productService\"\n                  component={ProductServicePage}\n                />\n                <Route\n                  exact\n                  path=\"/certificates/personal\"\n                  component={PersonalPage}\n                />\n                <Route\n                  exact\n                  path=\"/certificates/controlSystem\"\n                  component={ControlSystemPage}\n                />\n                <Footer />\n              </div>\n\n              {/* END PAGE CONTENT */}\n            </div>\n            {/* END MAIN CONTAINER */}\n          </React.Fragment>\n        )}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesActions.js",["715","716","717"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleData } from \"../../../app/api/mockApi\";\nimport {\n    APP_LOADED,\n    asyncActionError,\n    asyncActionFinish,\n    asyncActionStart,\n  } from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\n// import { delay } from \"../../../app/common/util/util\";\n\n\nimport { CREATE_EMPLOYEES, DELETE_EMPLOYEES, FETCH_EMPLOYEES, UPDATE_EMPLOYEES } from \"./employeesConstants\";\nconst url = \"employee\"\n\nexport function loadEmployees(data){\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n    \n        const employee = await axios.get(`/${url}`, {\n          params: { ...data },\n        });\n        console.log(employee);\n        if (employee.status === 200) {\n          dispatch({\n            type: FETCH_EMPLOYEES,\n            payload: employee.data.data,\n            totalCount: employee.data.message,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}\n\n\nexport function listenToEmployees(employees){\n    return {\n        type:FETCH_EMPLOYEES,\n        payload:employees\n    }\n}\n\n\nexport function createEmployees(employee){\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n        const data = await axios.post(`${url}/create`, employee, {\n          withCredentials: true,\n        });\n        if (data.status === 201) {\n          toast.success(\"Uğurla əlavə edildi\");\n          dispatch({ type: CREATE_EMPLOYEES, payload: data.data.data });\n          dispatch(asyncActionFinish());\n        } else {\n          toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n        }\n      };\n}\n\n\nexport function updateEmployees(employees){\n    return async function (dispatch) {\n        dispatch(asyncActionStart);\n    \n        const employeesUpdated = await axios.put(\n          `/${url}/update`,\n          employees\n        );\n        if (employeesUpdated.status === 200) {\n          toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n          dispatch({\n            type: UPDATE_EMPLOYEES,\n            payload: employeesUpdated.data.data,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          asyncActionError();\n        }\n      };\n}\n\nexport function deleteEmployees(employeesId){\n    return async function (dispatch) {\n        const employeeDeleted = await axios.delete(\n          `/${url}/delete?id=${employeesId}`\n        );\n        if (employeeDeleted.status === 200) {\n          dispatch({ type: DELETE_EMPLOYEES, payload: employeesId });\n          // dispatch(asyncActionFinish())\n          toast.info(\"Uğurla silindi\");\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}","/Users/ict/Documents/GitHub/certus-master/src/app/store/rootReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/async/asyncReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/common/loadJs/loadJs.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/util/util.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/Employees.jsx",["718","719","720","721","722"],"import React, { useEffect } from \"react\";\nimport $ from \"jquery\";\nimport \"./contacts.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteEmployees, loadEmployees } from \"./employeesActions\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadDuties } from \"../settings/duty/dutyActions\";\nimport { loadDepartments } from \"../settings/department/departmentActions\";\n\nimport { Redirect } from \"react-router\";\nexport default function Employees() {\n  const dispatch = useDispatch();\n  const { employees } = useSelector((state) => state.employees);\n  const { loading } = useSelector((state) => state.async);\n  const { authenticated } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(loadEmployees());\n    $(\".view-grid\").on(\"click\", function (event) {\n      event.preventDefault();\n      /* Act on the event */\n\n      $(this).parents(\".switch\").find(\".view-list\").removeClass(\"active-view\");\n      $(this).addClass(\"active-view\");\n\n      $(this).parents(\".searchable-container\").removeClass(\"list\");\n      $(this).parents(\".searchable-container\").addClass(\"grid\");\n\n      $(this)\n        .parents(\".searchable-container\")\n        .find(\".searchable-items\")\n        .removeClass(\"list\");\n      $(this)\n        .parents(\".searchable-container\")\n        .find(\".searchable-items\")\n        .addClass(\"grid\");\n    });\n\n    $(\".view-list\").on(\"click\", function (event) {\n      event.preventDefault();\n      /* Act on the event */\n      $(this).parents(\".switch\").find(\".view-grid\").removeClass(\"active-view\");\n      $(this).addClass(\"active-view\");\n\n      $(this).parents(\".searchable-container\").removeClass(\"grid\");\n      $(this).parents(\".searchable-container\").addClass(\"list\");\n\n      $(this)\n        .parents(\".searchable-container\")\n        .find(\".searchable-items\")\n        .removeClass(\"grid\");\n      $(this)\n        .parents(\".searchable-container\")\n        .find(\".searchable-items\")\n        .addClass(\"list\");\n    });\n    return function cleanup() {\n      // dispatch(loadEmployees());\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {/* BEGIN HOMEPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-spacing layout-top-spacing\" id=\"cancel-row\">\n          <div className=\"col-lg-12\">\n            <div className=\"widget-content searchable-container list\">\n              <div className=\"row\">\n                <div className=\"col-xl-4 col-lg-5 col-md-5 col-sm-7 filtered-list-search layout-spacing align-self-center\">\n                  <form className=\"form-inline my-2 my-lg-0\">\n                    <div className=\"d-flex justify-content-sm-end justify-content-center\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-search\"\n                      >\n                        <circle cx={11} cy={11} r={8} />\n                        <line x1={21} y1={21} x2=\"16.65\" y2=\"16.65\" />\n                      </svg>\n                      <input\n                        type=\"text\"\n                        className=\"form-control product-search\"\n                        id=\"input-search\"\n                        placeholder=\"Axtar...\"\n                      />\n                    </div>\n                  </form>\n                </div>\n                <div className=\"col-xl-8 col-lg-7 col-md-7 col-sm-5 text-sm-right text-center layout-spacing align-self-center\">\n                  <div className=\"d-flex justify-content-sm-end justify-content-center\">\n                    <svg\n                      onClick={() => {\n                        dispatch(\n                          openModal({\n                            modalType: \"EmployeesModal\",\n                            modalProps: null,\n                          })\n                        );\n                        dispatch(loadDuties());\n                        dispatch(loadDepartments());\n                      }}\n                      type=\"button\"\n                      className=\"btn btn-rounded btn-primary mb-2 mr-2\"\n                      data-toggle=\"modal\"\n                      data-target=\"#exampleModal\"\n                      id=\"btn-add-contact\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-user-plus\"\n                    >\n                      <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                      <circle cx=\"8.5\" cy={7} r={4} />\n                      <line x1={20} y1={8} x2={20} y2={14} />\n                      <line x1={23} y1={11} x2={17} y2={11} />\n                    </svg>\n                    <div className=\"switch align-self-center\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-list view-list active-view mr-3\"\n                      >\n                        <line x1={8} y1={6} x2={21} y2={6} />\n                        <line x1={8} y1={12} x2={21} y2={12} />\n                        <line x1={8} y1={18} x2={21} y2={18} />\n                        <line x1={3} y1={6} x2={3} y2={6} />\n                        <line x1={3} y1={12} x2={3} y2={12} />\n                        <line x1={3} y1={18} x2={3} y2={18} />\n                      </svg>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-grid view-grid\"\n                      >\n                        <rect x={3} y={3} width={7} height={7} />\n                        <rect x={14} y={3} width={7} height={7} />\n                        <rect x={14} y={14} width={7} height={7} />\n                        <rect x={3} y={14} width={7} height={7} />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"searchable-items list\">\n                <div className=\"items items-header-section\">\n                  <div className=\"item-content\">\n                    <div>\n                      <div className=\"n-chk align-self-center text-center\">\n                        <label className=\"new-control new-checkbox checkbox-primary\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"new-control-input\"\n                            id=\"contact-check-all\"\n                          />\n                          <span className=\"new-control-indicator\" />\n                        </label>\n                      </div>\n                      <h4>Ad Vəzifə</h4>\n                    </div>\n                    <div className=\"user-email\">\n                      <h4>Email</h4>\n                    </div>\n\n                    <div className=\"user-phone\">\n                      <h4 style={{ marginLeft: 3 }}>Telefon</h4>\n                    </div>\n                    <div className=\"user-location\">\n                      <h4 style={{ marginLeft: 0 }}>Dövriyyə</h4>\n                    </div>\n                    <div className=\"action-btn\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-trash-2  delete-multiple\"\n                      >\n                        <polyline points=\"3 6 5 6 21 6\" />\n                        <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n                        <line x1={10} y1={11} x2={10} y2={17} />\n                        <line x1={14} y1={11} x2={14} y2={17} />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n                {loading && (\n                  <div className=\"loader\">\n                    {\" \"}\n                    <div className=\"loader-content text-center mt-5\">\n                      <div className=\"spinner-grow text-center align-self-center\"></div>\n                    </div>\n                  </div>\n                )}\n                {employees.map((employee) => (\n                  <div className=\"items\" key={employee.id}>\n                    <div className=\"item-content\">\n                      <div className=\"user-profile\">\n                        <div className=\"n-chk align-self-center text-center\">\n                          <label className=\"new-control new-checkbox checkbox-primary\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"new-control-input contact-chkbox\"\n                            />\n                            <span className=\"new-control-indicator\" />\n                          </label>\n                        </div>\n                        <img src=\"assets/img/90x90.jpg\" alt=\"avatar\" />\n                        <div className=\"user-meta-info\">\n                          <p\n                            className=\"user-name\"\n                            data-name={employee.name}\n                          >\n                            {employee.name + \" \" + employee.surname}\n                          </p>\n                          <p\n                            className=\"user-work\"\n                            data-occupation={employee.position_id.name}\n                          >\n                            {employee.position_id.name}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"user-email\">\n                        <p className=\"info-title\">Email: </p>\n                        <p\n                          className=\"usr-email-addr\"\n                          data-email={employee.mail}\n                        >\n                          {employee.mail}\n                        </p>\n                      </div>\n                      <div className=\"user-phone\">\n                        <p className=\"info-title\">Telefon: </p>\n                        <p className=\"usr-ph-no\" data-phone=\"+1 (070) 123-4567\">\n                          {employee.phone}\n                        </p>\n                      </div>\n                      <div className=\"user-location\">\n                        <p className=\"info-title\">Dövriyyə: </p>\n                        <p\n                          className=\"usr-location\"\n                          data-location={employee.turnover}\n                        >\n                          {employee.turnover}\n                        </p>\n                      </div>\n\n                      <div className=\"action-btn\">\n                        <svg\n                          onClick={() => {\n                            dispatch(\n                              openModal({\n                                modalType: \"EmployeesModal\",\n                                modalProps: { employee },\n                              })\n                            );\n                            dispatch(loadDuties());\n                            dispatch(loadDepartments());\n                          }}\n                          type=\"button\"\n                          className=\"btn btn-rounded btn-primary mb-2 mr-2\"\n                          data-toggle=\"modal\"\n                          data-target=\"#exampleModal\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-edit-2 edit\"\n                        >\n                          <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n                        </svg>\n                        <svg\n                          onClick={() => {\n                            dispatch(deleteEmployees(employee.id));\n                          }}\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-user-minus delete\"\n                        >\n                          <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                          <circle cx=\"8.5\" cy={7} r={4} />\n                          <line x1={23} y1={11} x2={17} y2={11} />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* END HOMEPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Header.jsx",["723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n// import useScript from \"../../../app/common/loadJs/loadJs\";\nimport { signOutUser } from \"../../auth/authActions\";\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  // useScript(\"../../../../public/assets/js/app.js\");\n  const auth = useSelector((state) => state.auth);\n  // useEffect(() => {\n  //   if (auth.authenticated === false) {\n  //     return <Redirect to=\"/\" />;\n\n  //   }\n  // }, []);\n  // if (auth.authenticated === false) {\n  //   return <Redirect to=\"/\" />;\n  // }\n  if (auth.authenticated === false) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className=\"header-container fixed-top\">\n      <header className=\"header navbar navbar-expand-sm\">\n        <ul className=\"navbar-item theme-brand flex-row  text-center\">\n          <li className=\"nav-item theme-logo\">\n            <a href=\"index.html\">\n              <img\n                src=\"https://zairov1905.github.io/certus-deploy/assets/img/apple-touch-icon.png\"\n                className=\"navbar-logo\"\n                alt=\"logo\"\n              />\n            </a>\n          </li>\n          <li className=\"nav-item theme-text\">\n            <a href=\"index.html\" className=\"nav-link\">\n              {\" \"}\n              CERTUS{\" \"}\n            </a>\n          </li>\n        </ul>\n        <ul className=\"navbar-item flex-row ml-md-0 ml-auto\">\n          <li className=\"nav-item align-self-center search-animated\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-search toggle-search\"\n            >\n              <circle cx={11} cy={11} r={8} />\n              <line x1={21} y1={21} x2=\"16.65\" y2=\"16.65\" />\n            </svg>\n            <form\n              className=\"form-inline search-full form-inline search\"\n              role=\"search\"\n            >\n              <div className=\"search-bar\">\n                <input\n                  type=\"text\"\n                  className=\"form-control search-form-control  ml-lg-auto\"\n                  placeholder=\"Axtar\"\n                />\n              </div>\n            </form>\n          </li>\n        </ul>\n        <ul className=\"navbar-item flex-row ml-md-auto\">\n          <li className=\"nav-item dropdown language-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"language-dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://zairov1905.github.io/certus-deploy/assets/img/ca.png\" className=\"flag-width\" alt=\"flag\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"language-dropdown\"\n            >\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/de.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;German</span>\n              </a>\n              <a className=\"dropdown-item d-flex\" href=\"#\">\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/jp.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;Japanese</span>\n              </a>\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/fr.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;French</span>\n              </a>\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/ca.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;English</span>\n              </a>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown message-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"messageDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-mail\"\n              >\n                <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\n                <polyline points=\"22,6 12,13 2,6\" />\n              </svg>\n            </a>\n            <div\n              className=\"dropdown-menu p-0 position-absolute\"\n              aria-labelledby=\"messageDropdown\"\n            >\n              <div>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Kara Young</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Daisy Anderson</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Oscar Garner</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n              </div>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown notification-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"notificationDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-bell\"\n              >\n                <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\" />\n                <path d=\"M13.73 21a2 2 0 0 1-3.46 0\" />\n              </svg>\n              <span className=\"badge badge-success\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"notificationDropdown\"\n            >\n              <div className=\"notification-scroll\">\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-heart\"\n                    >\n                      <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Shaun Park</span> likes your\n                        photo.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-share-2\"\n                    >\n                      <circle cx={18} cy={5} r={3} />\n                      <circle cx={6} cy={12} r={3} />\n                      <circle cx={18} cy={19} r={3} />\n                      <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\" />\n                      <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\" />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Kelly Young</span> shared\n                        your post\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-tag\"\n                    >\n                      <path d=\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\" />\n                      <line x1={7} y1={7} x2={7} y2={7} />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Kelly Young</span> mentioned\n                        you in comment.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown user-profile-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle user\"\n              id=\"userProfileDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\" alt=\"avatar\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"userProfileDropdown\"\n            >\n              <div>\n                <div className=\"dropdown-item\">\n                  <a href=\"user_profile.html\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-user\"\n                    >\n                      <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                      <circle cx={12} cy={7} r={4} />\n                    </svg>{\" \"}\n                    {auth.currentUser ? auth.currentUser.username : \"\"}\n                  </a>\n                </div>\n                <div className=\"dropdown-item\">\n                  <a href=\"apps_mailbox.html\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-inbox\"\n                    >\n                      <polyline points=\"22 12 16 12 14 15 10 15 8 12 2 12\" />\n                      <path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\" />\n                    </svg>{\" \"}\n                    Inbox\n                  </a>\n                </div>\n                <div className=\"dropdown-item\">\n                  <a href=\"auth_lockscreen.html\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-lock\"\n                    >\n                      <rect x={3} y={11} width={18} height={11} rx={2} ry={2} />\n                      <path d=\"M7 11V7a5 5 0 0 1 10 0v4\" />\n                    </svg>{\" \"}\n                    Lock Screen\n                  </a>\n                </div>\n                <div className=\"dropdown-item\">\n                  <Link to=\"#\" onClick={() => dispatch(signOutUser())}>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-log-out\"\n                    >\n                      <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\n                      <polyline points=\"16 17 21 12 16 7\" />\n                      <line x1={21} y1={12} x2={9} y2={12} />\n                    </svg>{\" \"}\n                    Sign Out\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/auth/Login.jsx",["740","741","742","743"],"import { Formik, Form } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport * as Yup from \"yup\";\n// #1b55e2\nimport \"./form-1.css\";\nimport \"./switches.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signInUser } from \"./authActions\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { Redirect, useHistory } from \"react-router\";\nimport Sidebar from \"../dashboard/commonPage/Sidebar\";\nexport default function Login() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { authenticated } = useSelector((state) => state.auth);\n  useEffect(() => {\n    var togglePassword = document.getElementById(\"toggle-password\");\n\n    if (togglePassword) {\n      togglePassword.addEventListener(\"click\", function () {\n        var x = document.getElementById(\"password\");\n        if (x.type === \"password\") {\n          x.type = \"text\";\n        } else {\n          x.type = \"password\";\n        }\n      });\n    }\n  }, []);\n\n  // if (authenticated) {\n  //   return <Redirect to=\"/dashboard\" />;\n  //   // return history.push(\"/dashboard\");\n  // }\n  return (\n    <React.Fragment>\n      <div className=\"form-container\">\n        <div className=\"form-form\">\n          <div className=\"form-form-wrap\">\n            <div className=\"form-container\">\n              <div className=\"form-content\">\n                <h1>\n                  <span className=\"brand-name\">Certus</span> Hesabat Sistemi{\" \"}\n                  <a href=\"index.html\"></a>\n                </h1>\n                <Formik\n                  initialValues={{ username: \"\", password: \"\" }}\n                  validationSchema={Yup.object({\n                    username: Yup.string().required(\n                      \"Bu sahə mütləq doldurulmalıdır.\"\n                    ),\n                    password: Yup.string().required(\n                      \"Bu sahə mütləq doldurulmalıdır.\"\n                    ),\n                  })}\n                  onSubmit={(values, { setSubmitting, setErrors }) => {\n                    // console.log('ugurludur')\n                    dispatch(\n                      signInUser(history, {\n                        email: values.username,\n                        password: values.password,\n                      })\n                    );\n                    setSubmitting(false);\n                  }}\n                >\n                  {({ isSubmitting, isValid, dirty, errors }) => (\n                    <Form className=\"text-left\">\n                      <div className=\"form\">\n                        <div\n                          id=\"username-field\"\n                          className=\"field-wrapper input\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"feather feather-user\"\n                          >\n                            <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                            <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                          </svg>\n                          <MyTextInput\n                            id=\"username\"\n                            name=\"username\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"İstifadəçi adı\"\n                          />\n                        </div>\n\n                        <div\n                          id=\"password-field\"\n                          className=\"field-wrapper input mb-2\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"feather feather-lock\"\n                          >\n                            <rect\n                              x=\"3\"\n                              y=\"11\"\n                              width=\"18\"\n                              height=\"11\"\n                              rx=\"2\"\n                              ry=\"2\"\n                            ></rect>\n                            <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\n                          </svg>\n                          <MyTextInput\n                            id=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Şifrə\"\n                          />\n                        </div>\n                        <div className=\"d-sm-flex justify-content-between\">\n                          <div className=\"field-wrapper toggle-pass\">\n                            <p className=\"d-inline-block\">Parolu Göstər</p>\n                            <label\n                              style={{\n                                position: \"relative\",\n                                display: \"inline-block\",\n                                width: \"35px\",\n                                height: \"18px\",\n                              }}\n                              className=\"switch s-primary\"\n                            >\n                              <input\n                                type=\"checkbox\"\n                                id=\"toggle-password\"\n                                className=\"d-none\"\n                              />\n                              <span\n                                style={{\n                                  position: \"absolute\",\n                                  cursor: \"pointer\",\n                                  top: 0,\n                                  left: 0,\n                                  right: 0,\n                                  bottom: 0,\n                                  backgroundColor: \"#ebedf2\",\n                                  transition: \".4s\",\n                                }}\n                                className=\"slider round\"\n                              ></span>\n                            </label>\n                          </div>\n                          <div className=\"field-wrapper\">\n                            <button\n                              // loading={isSubmitting}\n                              disabled={!isValid || !dirty || isSubmitting}\n                              type=\"submit\"\n                              className=\"btn btn-primary\"\n                              value=\"\"\n                            >\n                              Daxil Ol\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </Form>\n                  )}\n                </Formik>\n\n                {/* <p className=\"terms-conditions\">© 2019 All Rights Reserved. <a href=\"index.html\">CORK</a> is a product of Designreset. <a href=\"javascript:void(0);\">Cookie Preferences</a>, <a href=\"javascript:void(0);\">Privacy</a>, and <a href=\"javascript:void(0);\">Terms</a>.</p> */}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-image\">\n          <div className=\"l-image\"></div>\n        </div>\n      </div>\n      <div\n        style={{ display: \"none\" }}\n        className=\"sidebar-wrapper sidebar-theme\"\n      >\n        <nav id=\"sidebar\">\n          <div className=\"shadow-bottom\" />\n          <ul\n            className=\"list-unstyled menu-categories ps ps--active-y\"\n            id=\"accordionExample\"\n          >\n            <div className=\"ps__rail-x\" style={{ left: 0, bottom: 0 }}>\n              <div\n                className=\"ps__thumb-x\"\n                tabIndex={0}\n                style={{ left: 0, width: 0 }}\n              />\n            </div>\n            <div\n              className=\"ps__rail-y\"\n              style={{ top: 0, height: 560, right: \"-4px\" }}\n            >\n              <div\n                className=\"ps__thumb-y\"\n                tabIndex={0}\n                style={{ top: 0, height: 300 }}\n              />\n            </div>\n          </ul>\n        </nav>\n      </div>\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Footer.jsx",["744"],"import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-wrapper\">\n      <div className=\"footer-section f-section-1\">\n        <p>\n          Copyright © 2021{\" \"}\n          <a target=\"_blank\" href=\"https://designreset.com\">\n            Certus\n          </a>\n        </p>\n      </div>\n      <div className=\"footer-section f-section-2\">\n        <p>\n          Certus Hesabat Sistemi{\" \"}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-heart\"\n          >\n            <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n          </svg>\n        </p>\n      </div>\n    </div>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Sidebar.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/homePage/HomePage.jsx",["745","746","747","748","749"],"import React, { useEffect } from \"react\";\n// import './dash_1.css';\nimport Chart from \"react-apexcharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadEmployees } from \"../employees/employeesActions\";\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadEmployees());\n  }, []);\n  const { employees } = useSelector((state) => state.employees);\n\n  const series = [...employees.map((employee) => employee.performance)];\n  const chartOptions = {\n    labels: [...employees.map((employee) => employee.firstname)],\n    legend: { position: \"bottom\" },\n    \n  };\n  const basicBar = {\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      // fill: {\n      //   type: 'gradient',\n      //   gradient: {\n      //     shade: 'white',\n      //     type: \"vertical\",\n      //     shadeIntensity: 0.5,\n      //     gradientToColors: undefined, // optional, if not defined - uses the shades of same color in series\n      //     inverseColors: true,\n      //     opacityFrom: 1,\n      //     opacityTo: 1,\n      //     stops: [0, 50, 100],\n      //     colorStops: []\n      //   }\n      // }, \n      colors:['#F44336', '#E91E63', '#9C27B0','#F44336', '#E91E63', '#9C27B0','#F44336', '#E91E63', '#9C27B0','#F44336', '#E91E63', '#9C27B0'],\n      xaxis: {\n        categories: [\n          \"Yanvar\",\n          \"Fevral\",\n          \"Mart\",\n          \"Aprel\",\n          \"May\",\n          \"Iyun\",\n          \"Iyul\",\n          \"Avqust\",\n          \"Sentyabr\",\n          \"Oktyabr\",\n          \"Noyabr\",\n          \"Dekabr\"\n        ],\n      },\n    },\n    series: [\n      {\n        name: \"series-1\",\n        data: [30, 40, 45, 50, 49, 60, 70, 91, 70,72,80],\n      },\n    ],\n  };\n\n  return (\n    <React.Fragment>\n      {/* BEGIN HOMEPAGE CONTAINER */}\n\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-8 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing\">\n            <div className=\"widget\">\n              <div className=\"widget-heading\">\n                <h5>Xərc</h5>\n              </div>\n              <div className=\"widget-content widget-content-area\">\n                {/* <Chart\n                  options={basicBar.options}\n                  series={basicBar.series}\n                  type=\"bar\"\n                  width=\"100%\"\n                  height=\"302\"\n                /> */}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing\">\n            <div className=\"widget\">\n              <div className=\"widget-heading\">\n                <h5>İşçilər-Performans</h5>\n              </div>\n              <div className=\"widget-content widget-content-area\">\n                {/* <Chart\n                  options={chartOptions}\n                  series={series}\n                  type=\"pie\"\n                  width=\"100%\"\n                  height=\"400\"\n\n                /> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END HOMEPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/SubHeader.jsx",["750","751","752","753","754","755","756","757","758"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SubHeader() {\n  return (\n    <div className=\"sub-header-container\">\n      <header className=\"header navbar navbar-expand-sm\">\n        <a\n          href=\"#\"\n          onClick={e => e.preventDefault()}\n          className=\"sidebarCollapse\"\n          data-placement=\"bottom\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-menu\"\n          >\n            <line x1={3} y1={12} x2={21} y2={12} />\n            <line x1={3} y1={6} x2={21} y2={6} />\n            <line x1={3} y1={18} x2={21} y2={18} />\n          </svg>\n        </a>\n        <ul className=\"navbar-nav flex-row\">\n          <li>\n            <div className=\"page-header\">\n              <nav className=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                  <li className=\"breadcrumb-item\">\n                    <a  onClick={e => e.preventDefault()}>Ana səhifə</a>\n                  </li>\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    <span></span>\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav flex-row ml-auto \">\n          <li className=\"nav-item more-dropdown\">\n            <div className=\"dropdown  custom-dropdown-icon\">\n              <a\n                className=\"dropdown-toggle btn\"\n                href=\"#\"\n                role=\"button\"\n                id=\"customDropdown\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <span>Settings</span>{\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-chevron-down\"\n                >\n                  <polyline points=\"6 9 12 15 18 9\" />\n                </svg>\n              </a>\n              <div\n                className=\"dropdown-menu dropdown-menu-right\"\n                aria-labelledby=\"customDropdown\"\n              >\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Settings\"\n                  href=\"#\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Settings\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Mail\"\n                  href=\"#\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Mail\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Print\"\n                  href=\"#\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Print\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Download\"\n                  href=\"#\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Download\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Share\"\n                  href=\"#\"\n                  onClick={e => e.preventDefault()}\n                >\n                  Share\n                </a>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/OrderPage.jsx",["759","760","761"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadCrm } from \"../crmPage/crmActions\";\nimport { loadEmployees } from \"../employees/employeesActions\";\nimport { loadOrderSource } from \"../settings/orderSource/orderSourceActions\";\nimport { loadReference } from \"../settings/reference/referenceActions\";\nimport { loadServiceType } from \"../settings/serviceType/serviceTypeActions\";\n\nimport { deleteOrder, loadOrder } from \"./orderActions\";\nexport default function OrderPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadOrder());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { orders, totalCount } = useSelector((state) => state.orders);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = orders;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadReference({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadReference({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"OrderPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadServiceType());\n        dispatch(loadReference());\n        dispatch(loadOrderSource());\n        dispatch(loadCrm());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Sifariş nömrəsi\",\n      selector: \"number\",\n      sortable: true,\n    },\n    {\n      name: \"Xidmət növü\",\n      cell: (order) => <p>{order.service_type_id.name}</p>,\n      sortable: true,\n    },\n    {\n      name: \"Müştəri\",\n      cell: (order) => <p>{order.customer_id.customer_name}</p>,\n      sortable: true,\n    },\n\n    {\n      name: \"Sifariş tarixi\",\n      selector: \"date\",\n      sortable: true,\n    },\n    {\n      name: \"Referans\",\n      cell: (order) => <p>{order.reference_id.name}</p>,\n      sortable: true,\n    },\n    {\n      name: \"Sifariş təyinatı\",\n      selector: \"description\",\n      sortable: true,\n    },\n\n    {\n      name: \"İcra vəziyyəti\",\n\n      cell: (order) => (\n        <button\n          data-toggle=\"modal\"\n          data-target=\"#exampleModal\"\n          onClick={() => {\n            dispatch(\n              openModal({\n                modalType: \"SelectEmployeeModal\",\n                modalProps: { order },\n              })\n            );\n            dispatch(loadEmployees());\n          }}\n          className=\"btn btn-sm btn-danger btn-rounded\"\n        >\n          <i className=\"flaticon-cancel-12\" /> İcraçı təyin et\n        </button>\n      ),\n    },\n    {\n      name: \"\",\n      cell: (order) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"OrderPageModal\",\n                  modalProps: { order },\n                })\n              );\n              dispatch(loadServiceType());\n              dispatch(loadReference());\n              dispatch(loadOrderSource());\n              dispatch(loadCrm());\n            }}\n            data-name=\"edit\"\n            id={order.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${order.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={order.id}\n            onClick={() => {\n              dispatch(deleteOrder(order.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${order.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Sifarişlər\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/app/modal/ModalManager.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/LabPage.jsx",["762","763","764"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadDocs } from \"../docPage/docActions\";\n\nimport { deleteLab, loadLab } from \"./labActions\";\nexport default function LabsPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadLab());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { labs, totalCount } = useSelector((state) => state.labs);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = labs;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadLab({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadLab({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"LabPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Lab nömrəsi\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Lab adı\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"Müqavilə nömrəsi\",\n      sortable: true,\n\n      cell: (lab) => <p>{lab.document_id.document_number}</p>,\n    },\n\n    {\n      name: \"Atestat nömrəsi\",\n      selector: \"certificate_number\",\n      sortable: true,\n    },\n    {\n      name: \"Dövriyyə\",\n      selector: \"turnover\",\n      sortable: true,\n    },\n    {\n      name: \"Əməliyyatlar\",\n      selector: \"operations\",\n      sortable: true,\n    },\n    {\n      name: \"Lab not\",\n      selector: \"note\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (lab) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"LabPageModal\",\n                  modalProps: { lab },\n                })\n              );\n              dispatch(loadDocs());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={lab.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${lab.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={lab.id}\n            onClick={() => {\n              dispatch(deleteLab(lab.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${lab.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Laboratoriyalar\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/ExpensePage.jsx",["765","766","767"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadDocs } from \"../docPage/docActions\";\nimport { loadCounterparty } from \"../settings/counterparty/counterpartyActions\";\nimport { loadExpenseGroup } from \"../settings/expenseGroup/expenseGroupActions\";\nimport { loadExpenseType } from \"../settings/expenseType/expenseTypeActions\";\n\nimport { deleteExpense, loadExpense } from \"./expenseActions\";\nexport default function ExpensePage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadExpense());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { expenses,totalCount } = useSelector((state) => state.expenses);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = expenses;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadExpense({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadExpense({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ExpensePageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadCounterparty());\n        dispatch(loadExpenseGroup());\n        dispatch(loadExpenseType());\n        dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Gəlir-Xərc qrupu\",\n      sortable: true,\n      cell:expense=>(\n        <p>{expense.income_expense_group_id.name}</p>\n      )\n    },\n    {\n      name: \"Gəlir-Xərc növü\",\n      selector: \"expense_type_id\",\n      sortable: true,\n      cell:expense=>(\n        <p>{expense.expense_type_id.name}</p>\n      )\n    },\n    {\n      name: \"Tarix\",\n      selector: \"date\",\n      sortable: true,\n    },\n    {\n      name: \"Kontragent\",\n      sortable: true,\n      cell:expense=>(\n        <p>{expense.contractor_id.name}</p>\n      )\n      \n    },\n    {\n      name: \"Müqavilə\",\n      selector: \"document_id\",\n      cell:expense=>(\n        <p>{expense.document_id.document_number}</p>\n      ),\n      sortable: true,\n    },\n    {\n      name: \"Əməliyyat növü\",\n      selector: \"expenseInvoice\",\n      sortable: true,\n      cell:expense => (\n        expense.operation_id === 0  ? <span className=\"badge badge-danger\">{expense.faktura}</span> : <span className=\"badge badge-success\">{expense.faktura}</span>\n      )\n    },\n    {\n      name: \"\",\n      cell: (expense) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ExpensePageModal\",\n                  modalProps: { expense },\n                })\n              );\n              dispatch(loadCounterparty());\n              dispatch(loadExpenseGroup());\n              dispatch(loadExpenseType());\n              dispatch(loadDocs());\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={expense.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expense.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={expense.id}\n            onClick={() => {\n              dispatch(deleteExpense(expense.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expense.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Gəlir-Xərc\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/DocPage.jsx",["768","769","770"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadDocumentTypes } from \"../settings/documentType/documentTypeActions\";\nimport { loadDocs, deleteDoc } from \"./docActions\";\n\nexport default function DocPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDocs());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { docs, totalCount } = useSelector((state) => state.docs);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = docs;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadDocs({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadDocs({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"DocPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadDocumentTypes());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Sənəd nömrəsi\",\n      selector: \"document_number\",\n      sortable: true,\n    },\n    {\n      name: \"Sənəd Növü\",\n      // selector: \"document_type\",\n      sortable: true,\n      cell: (doc) => (\n        <p>{doc.document_type_id.name}</p>\n      )\n    },\n    {\n      name: \"Sənəd Təyinatı \",\n      cell: (doc) => {\n        if (doc.document_for === 1) {\n          return \"Satış\";\n        } else if (doc.document_for === 0) {\n          return \"Alış\";\n        }\n      },\n    },\n    {\n      name: \"Sənəd Predmeti\",\n      selector: \"about\",\n      sortable: true,\n    },\n    {\n      name: \"Tarix\",\n      selector: \"date\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (doc) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"DocPageModal\",\n                  modalProps: { doc },\n                })\n              );\n              dispatch(loadDocumentTypes());\n            }}\n            data-name=\"edit\"\n            id={doc.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${doc.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={doc.id}\n            onClick={() => {\n              dispatch(deleteDoc(doc.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${doc.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Sənədlər\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/CounterpartyPage.jsx",["771","772","773"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadCounterparty } from \"./counterpartyActions\";\nimport { deleteCounterparty } from \"./counterpartyActions\";\n\nexport default function CounterpartyPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCounterparty())\n  //   // return () => {\n  //   //   // dispatch(loadOrder())\n  //   // }\n  },[])\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const {counterparties,totalCount} = useSelector(state => state.counterparties);\n  const data = counterparties;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadCounterparty({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadCounterparty({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"CounterpartyPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Ad\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"Haqqında\",\n      selector: \"about\",\n      sortable: true,\n    },\n    {\n      name: \"Nömrə\",\n      selector: \"contact\",\n      sortable: true,\n    },\n    // {\n    //   name: \"Kateqoriya\",\n    //   selector: \"counterpartyCategory\",\n    //   sortable: true,\n    // },\n    {\n      name: \"\",\n      cell: (counterparty) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() =>\n              {\n                dispatch(\n                \n                  openModal({\n                    modalType: \"CounterpartyPageModal\",\n                    modalProps: { counterparty },\n                  })\n                )\n                // dispatch(loadEmployees());\n\n              }\n\n            }\n            data-name=\"edit\"\n            id={counterparty.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${counterparty.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={counterparty.id}\n            onClick={() => {\n              dispatch(deleteCounterparty(counterparty.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${counterparty.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Kontragentlər\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/DocumentTypePage.jsx",["774","775"],"import React, { useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteDocumentType, loadDocumentTypes } from \"./documentTypeActions\";\n\nexport default function DocumetTypePage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDocumentTypes())\n  //   // return () => {\n  //   //   // dispatch(loadOrder())\n  //   // }\n  },[])\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const {documentTypes, totalCount} = useSelector(state => state.documentTypes);\n  const data = documentTypes;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadDocumentTypes({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadDocumentTypes({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"DocumentTypePageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Sənəd növü\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (documentType) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() =>\n              {\n                dispatch(\n                \n                  openModal({\n                    modalType: \"DocumentTypePageModal\",\n                    modalProps: { documentType },\n                  })\n                )\n                // dispatch(loadEmployees());\n\n              }\n\n            }\n            data-name=\"edit\"\n            id={documentType.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${documentType.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={documentType.id}\n            onClick={() => {\n              dispatch(deleteDocumentType(documentType.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${documentType.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Sənəd növləri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/DutyPage.jsx",["776","777","778"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteDuty, loadDuties } from \"./dutyActions\";\n\nexport default function DutyPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDuties())\n  //   // return () => {\n  //   //   // dispatch(loadOrder())\n  //   // }\n  },[])\n\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const {duties,totalCount} = useSelector(state => state.duties);\n  const data = duties;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadDuties({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadDuties({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"DutyPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Vəzifəsi\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (duty) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() =>\n              {\n                dispatch(\n                \n                  openModal({\n                    modalType: \"DutyPageModal\",\n                    modalProps: { duty },\n                  })\n                )\n                // dispatch(loadEmployees());\n\n              }\n\n            }\n            data-name=\"edit\"\n            id={duty.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${duty.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={duty.id}\n            onClick={() => {\n              dispatch(deleteDuty(duty.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${duty.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Vəzifələr\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/DepartmentPage.jsx",["779","780","781"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteDepartment, loadDepartments } from \"./departmentActions\";\n\nexport default function DepartmentPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDepartments())\n  //   // return () => {\n  //   //   // dispatch(loadOrder())\n  //   // }\n  },[])\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const {departments,totalCount} = useSelector(state => state.departments);\n  const data = departments;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadDepartments({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadDepartments({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"DepartmentPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Sturuktur bölmə\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (department) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() =>\n              {\n                dispatch(\n                \n                  openModal({\n                    modalType: \"DepartmentPageModal\",\n                    modalProps: { department },\n                  })\n                )\n                // dispatch(loadEmployees());\n\n              }\n\n            }\n            data-name=\"edit\"\n            id={department.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${department.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={department.id}\n            onClick={() => {\n              dispatch(deleteDepartment(department.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${department.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Struktur Bölmələr\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/TrainingPage.jsx",["782","783","784"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadSkill } from \"../skill/skillActions\";\nimport { loadTraining } from \"./trainingActions\";\nimport { deleteTraining } from \"./trainingActions\";\n\nexport default function TrainingPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadTraining());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { trainings, totalCount } = useSelector((state) => state.trainings);\n  const data = trainings;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadTraining({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadTraining({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"TrainingPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadSkill());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Ad\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"Haqqında\",\n      selector: \"about\",\n      sortable: true,\n    },\n    {\n      name: \"Səriştələr\",\n      // selector: \"trainingSkills\",\n      sortable: true,\n      cell: (training) =>  training.skill_id && training.skill_id.map((skill) => `${skill.name} `),\n    },\n    // {\n    //   name: \"Kateqoriya\",\n    //   selector: \"trainingCategory\",\n    //   sortable: true,\n    // },\n    {\n      name: \"\",\n      cell: (training) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"TrainingPageModal\",\n                  modalProps: { training },\n                })\n              );\n              dispatch(loadSkill());\n            }}\n            data-name=\"edit\"\n            id={training.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${training.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={training.id}\n            onClick={() => {\n              dispatch(deleteTraining(training.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${training.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Təlimlər\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/SignOfLegalActPage.jsx",["785","786","787","788"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteSignOfLegalAct } from \"./signOfLegalActActions\";\nimport { loadSignOfLegalAct } from \"./signOfLegalActActions\";\n\nexport default function SignOfLegalActPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadSignOfLegalAct())\n  //   // return () => {\n  //   //   // dispatch(loadOrder())\n  //   // }\n  },[])\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const {signOfLegalActs,totalCount} = useSelector(state => state.signOfLegalActs);\n  const data = signOfLegalActs;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadSignOfLegalAct({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadSignOfLegalAct({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"SignOfLegalActPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Hüquqi normativ texniki aktın işarəsi\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (signOfLegalAct) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() =>\n              {\n                dispatch(\n                \n                  openModal({\n                    modalType: \"SignOfLegalActPageModal\",\n                    modalProps: { signOfLegalAct },\n                  })\n                )\n                // dispatch(loadEmployees());\n\n              }\n\n            }\n            data-name=\"edit\"\n            id={signOfLegalAct.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${signOfLegalAct.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={signOfLegalAct.id}\n            onClick={() => {\n              dispatch(deleteSignOfLegalAct(signOfLegalAct.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${signOfLegalAct.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Hüquqi normativ texniki aktın işarələri\"\n                title=\"Xidmət Növləri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/OrderSourcePage.jsx",["789","790","791"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteOrderSource, loadOrderSource } from \"./orderSourceActions\";\n\nexport default function OrderSourcePage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadOrderSource());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { orderSources, totalCount } = useSelector(\n    (state) => state.orderSources\n  );\n  const data = orderSources;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadOrderSource({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadOrderSource({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"OrderSourcePageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Sifariş mənbəyi\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (orderSource) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"OrderSourcePageModal\",\n                  modalProps: { orderSource },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={orderSource.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${orderSource.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={orderSource.id}\n            onClick={() => {\n              dispatch(deleteOrderSource(orderSource.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${orderSource.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Sifariş mənbəyi\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/ServiceTypePage.jsx",["792","793","794"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteServiceType, loadServiceType } from \"./serviceTypeActions\";\n\nexport default function ServiceTypePage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadServiceType());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { serviceTypes, totalCount } = useSelector(\n    (state) => state.serviceTypes\n  );\n  const data = serviceTypes;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadServiceType({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadServiceType({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ServiceTypePageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Xidmət Növü\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (serviceType) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ServiceTypePageModal\",\n                  modalProps: { serviceType },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={serviceType.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${serviceType.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={serviceType.id}\n            onClick={() => {\n              dispatch(deleteServiceType(serviceType.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${serviceType.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Xidmət Növləri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/ExpenseGroupPage.jsx",["795","796","797"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteExpenseGroup, loadExpenseGroup } from \"./expenseGroupActions\";\n\n\nexport default function ExpenseGroupPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadExpenseGroup())\n  //   // return () => {\n  //   //   // dispatch(loadOrder())\n  //   // }\n  },[])\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const {expenseGroups, totalCount} = useSelector(state => state.expenseGroups);\n  const data = expenseGroups;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadExpenseGroup({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadExpenseGroup({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ExpenseGroupPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Gəlir-Xərc qrupu\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (expenseGroup) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() =>\n              {\n                dispatch(\n                \n                  openModal({\n                    modalType: \"ExpenseGroupPageModal\",\n                    modalProps: { expenseGroup },\n                  })\n                )\n                // dispatch(loadEmployees());\n\n              }\n\n            }\n            data-name=\"edit\"\n            id={expenseGroup.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expenseGroup.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={expenseGroup.id}\n            onClick={() => {\n              dispatch(deleteExpenseGroup(expenseGroup.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expenseGroup.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Gəlir-Xərc qrupları\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/ReferencePage.jsx",["798","799","800"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteReference, loadReference } from \"./referenceActions\";\n\nexport default function ReferencePage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadReference());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { references, totalCount } = useSelector((state) => state.references);\n  const data = references;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadReference({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadReference({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ReferencePageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Referans\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (reference) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ReferencePageModal\",\n                  modalProps: { reference },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={reference.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${reference.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={reference.id}\n            onClick={() => {\n              dispatch(deleteReference(reference.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${reference.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Referanslar\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/ExpenseTypePage.jsx",["801","802","803","804"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadExpenseGroup } from \"../expenseGroup/expenseGroupActions\";\nimport { deleteExpenseType, loadExpenseType } from \"./expenseTypeActions\";\n\nexport default function ExpenseTypePage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadExpenseType());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { expenseTypes, totalCount } = useSelector(\n    (state) => state.expenseTypes\n  );\n  const data = expenseTypes;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadExpenseType({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadExpenseType({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ExpenseTypePageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadExpenseGroup());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Gəlir-Xərc növü\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (expenseType) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ExpenseTypePageModal\",\n                  modalProps: { expenseType },\n                })\n              );\n              dispatch(loadExpenseGroup());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={expenseType.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expenseType.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={expenseType.id}\n            onClick={() => {\n              dispatch(deleteExpenseType(expenseType.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expenseType.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Gəlir-Xərc növləri\"\n                title=\"Sənəd növləri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/SkillPage.jsx",["805","806","807"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadSkill } from \"./skillActions\";\nimport { deleteSkill } from \"./skillActions\";\n\nexport default function SkillPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadSkill());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { skills, totalCount } = useSelector((state) => state.skills);\n  const data = skills;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadSkill({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadSkill({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"SkillPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Ad\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"Haqqında\",\n      selector: \"about\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (skill) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"SkillPageModal\",\n                  modalProps: { skill },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={skill.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${skill.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={skill.id}\n            onClick={() => {\n              dispatch(deleteSkill(skill.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${skill.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Səriştələr\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/ProductServicePage.jsx",["808","809","810"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\n\n\nimport { deleteProductService, loadProductService } from \"./productServiceActions\";\n\nexport default function ProductServicePage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadProductService());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { productServices,totalCount } = useSelector((state) => state.productServices);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = productServices;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadProductService({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadProductService({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ProductServicePageModal\",\n            modalProps: null,\n          })\n        );\n        // dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"SN kodu\",\n      selector: \"snCode\",\n      sortable: true,\n    },\n    {\n      name: \"Reyestr nömrəsi\",\n      selector: \"registrationNumber\",\n      sortable: true,\n    },\n\n    {\n      name: \"Blank nömrəsi\",\n      selector: \"blankNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Akkreditasiya sahəsində sıra nömrəsi\",\n      selector: \"accreditationNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikatın verilmə tarixi\",\n      selector: \"certificateIssueDate\",\n      sortable:true\n    },\n    {\n      name: \"Sertifikatın qüvvədən düşdüyü tarix\",\n      selector: \"certificateExpirationDate\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikat təqdim edilən təsərrüfat subyektinin adı\",\n      selector: \"businessEntityName\",\n      sortable: true,\n    },\n    {\n      name: \"Hüquqi statusu\",\n      selector: \"legalStatus\",\n      sortable: true,\n    },\n    {\n      name: \"VÖEN\",\n      selector: \"VOEN\",\n      sortable: true,\n    },\n    {\n      name: \"Təsərrüfat subyektinin rəhbərinin telefon nömrəsi\",\n      selector: \"economicEntityPhoneNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikat təqdim edilən təsərrüfat subyektinin hüquqi ünvanı\",\n      selector: \"legalAddressOfTheBusinessEntity\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikat təqdim edilən təsərrüfat subyektinin faktiki ünvanı\",\n      selector: \"actualAddressOfTheBusiness\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsulun(xidmətin) adı\",\n      selector: \"nameOfTheProduct\",\n      sortable: true,\n    },\n    {\n      name: \"Miqdarı\",\n      selector: \"quantity\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsulun ərzaq və ya qeyri ərzaq qrupuna aid olması barədə qeyd\",\n      selector: \"productNote\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsulun kodu\",\n      selector: \"productCode\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsulun istehsal olunduğu ölkə\",\n      selector: \"countryOfOrigin\",\n      sortable: true,\n    },\n    {\n      name: \"Hüquqi normativ texniki aktın işarəsi\",\n      selector: \"signOfLegalAct\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikatı tanınan ölkənin adı\",\n      selector: \"certificateIsRecognized\",\n      sortable: true,\n    },\n    {\n      name: \"Tanınma prosesində məhsulun sınağının aparılması haqqında qeyd\",\n      selector: \"recognitionProcessNote\",\n      sortable: true,\n    },\n    {\n      name: \"Akkreditasiya olunmuş sınaq laboratoriyasının adı\",\n      selector: \"accreditedLaboratoryName\",\n      sortable: true,\n    },\n    {\n      name: \"Akkreditasiya olunmuş laboratoriyanın attestat nömrəsi\",\n      selector: \"accreditedLaboratoryNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Aparılmış sınaqların miqdarı\",\n      selector: \"testQuantity\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsul partiyasının tarixi\",\n      selector: \"productBatchHistory\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (productService) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ProductServicePageModal\",\n                  modalProps: { productService },\n                })\n              );\n              // dispatch(loadDocs());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={productService.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${productService.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={productService.id}\n            onClick={() => {\n              dispatch(deleteProductService(productService.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${productService.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Məhsul/Xidmət sertifikatları\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/PersonalPage.jsx",["811","812","813"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadTraining } from \"../../settings/training/trainingActions\";\n\n\nimport { deletePersonal, loadPersonal } from \"./personalActions\";\nexport default function PersonalPage() {\n  useEffect(() => {\n    dispatch(loadPersonal());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const dispatch = useDispatch();\n  const { personals } = useSelector((state) => state.personals);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = personals;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"PersonalPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadTraining());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"SN kodu\",\n      selector: \"snCode\",\n      sortable: true,\n    },\n    {\n      name: \"Reyestr nömrəsi\",\n      selector: \"registrationNumber\",\n      sortable: true,\n    },\n\n    {\n      name: \"Blank nömrəsi\",\n      selector: \"blankNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Akkreditasiya sahəsində sıra nömrəsi\",\n      selector: \"accreditationNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikatın verilmə tarixi\",\n      selector: \"certificateIssueDate\",\n      sortable:true\n    },\n    {\n      name: \"Sertifikatın qüvvədən düşdüyü tarix\",\n      selector: \"certificateExpirationDate\",\n      sortable: true,\n    },\n    {\n      name: \"İştirakçı adı\",\n      selector: \"participantName\",\n      sortable: true,\n    },\n    {\n      name: \"Təlimçinin adı\",\n      selector: \"instructorName\",\n      sortable: true,\n    },\n    {\n      name: \"Təlimin adı\",\n      selector: \"training\",\n      sortable: true,\n    },\n    {\n      name: \"Səriştələr\",\n      selector: \"skill\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsulun kodu\",\n      selector: \"productCode\",\n      sortable: true,\n    },\n    {\n      name: \"Normativ sənədin işarəsi\",\n      selector: \"signOfDocument\",\n      sortable: true,\n    },\n    {\n      name: \"Qeyd\",\n      selector: \"note\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (personal) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"PersonalPageModal\",\n                  modalProps: { personal },\n                })\n              );\n              dispatch(loadTraining());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={personal.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${personal.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={personal.id}\n            onClick={() => {\n              dispatch(deletePersonal(personal.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${personal.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Personal sertifikatları\"\n                columns={columns}\n                data={data}\n                // customStyles={customStyles}\n                // progressPending={loading}\n                pagination\n                // paginationServer\n                highlightOnHover\n                Clicked\n                actions={actions}\n                // loading={loading}\n                // dense\n                // paginationTotalRows={totalRows}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/ControlSystemPage.jsx",["814","815","816"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\n\n\nimport { deleteControlSystem, loadControlSystem } from \"./controlSystemActions\";\nexport default function ControlSystemPage() {\n  useEffect(() => {\n    dispatch(loadControlSystem());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const dispatch = useDispatch();\n  const { controlSystems } = useSelector((state) => state.controlSystems);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = controlSystems;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ControlSystemPageModal\",\n            modalProps: null,\n          })\n        );\n        // dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"SN kodu\",\n      selector: \"snCode\",\n      sortable: true,\n    },\n    {\n      name: \"Reyestr nömrəsi\",\n      selector: \"registrationNumber\",\n      sortable: true,\n    },\n\n    {\n      name: \"Blank nömrəsi\",\n      selector: \"blankNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Akkreditasiya sahəsində sıra nömrəsi\",\n      selector: \"accreditationNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikatın verilmə tarixi\",\n      selector: \"certificateIssueDate\",\n      sortable:true\n    },\n    {\n      name: \"Sertifikatın qüvvədən düşdüyü tarix\",\n      selector: \"certificateExpirationDate\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikat təqdim edilən təsərrüfat subyektinin adı\",\n      selector: \"businessEntityName\",\n      sortable: true,\n    },\n    {\n      name: \"Hüquqi statusu\",\n      selector: \"legalStatus\",\n      sortable: true,\n    },\n    {\n      name: \"VÖEN\",\n      selector: \"VOEN\",\n      sortable: true,\n    },\n    {\n      name: \"Təsərrüfat subyektinin rəhbərinin telefon nömrəsi\",\n      selector: \"economicEntityPhoneNumber\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikat təqdim edilən təsərrüfat subyektinin hüquqi ünvanı\",\n      selector: \"legalAddressOfTheBusinessEntity\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikat təqdim edilən təsərrüfat subyektinin faktiki ünvanı\",\n      selector: \"actualAddressOfTheBusiness\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsulun(xidmətin) adı\",\n      selector: \"nameOfTheProduct\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsulun kodu\",\n      selector: \"productCode\",\n      sortable: true,\n    },\n    {\n      name: \"Hüquqi normativ texniki aktın işarəsi\",\n      selector: \"signOfLegalAct\",\n      sortable: true,\n    },\n    {\n      name: \"Tanınma prosesində auditin aparılması haqqında qeyd\",\n      selector: \"recognitionProcessNote\",\n      sortable: true,\n    },\n    {\n      name: \"Aparılmış sınaqların miqdarı\",\n      selector: \"testQuantity\",\n      sortable: true,\n    },\n    {\n      name: \"Məhsul partiyasının tarixi\",\n      selector: \"productBatchHistory\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (controlSystem) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ControlSystemPageModal\",\n                  modalProps: { controlSystem },\n                })\n              );\n              // dispatch(loadDocs());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={controlSystem.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${controlSystem.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={controlSystem.id}\n            onClick={() => {\n              dispatch(deleteControlSystem(controlSystem.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${controlSystem.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"İdarəetmə sertifikatları\"\n                columns={columns}\n                data={data}\n                // customStyles={customStyles}\n                // progressPending={loading}\n                pagination\n                // paginationServer\n                highlightOnHover\n                Clicked\n                actions={actions}\n                // loading={loading}\n                // dense\n                // paginationTotalRows={totalRows}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseReducer.js",["817"],"import { sampleDataExpense } from \"../../../app/api/sampleDataExpense\";\nimport {\n  CREATE_EXPENSE,\n  DELETE_EXPENSE,\n  FETCH_EXPENSE,\n  UPDATE_EXPENSE,\n} from \"./expenseConstants\";\n\nconst initialState = {\n  expenses: []\n};\n\nexport default function expenseReducer(state = initialState, { type, payload,totalCount}) {\n  switch (type) {\n    case CREATE_EXPENSE:\n      return {\n        ...state,\n        expenses: [...state.expenses, payload],\n      };\n    case UPDATE_EXPENSE:\n      return {\n        ...state,\n        expenses: [\n          ...state.expenses.filter((expense) => expense.id !== payload.id),\n          payload,\n        ],\n      };\n\n    case DELETE_EXPENSE:\n      return {\n        ...state,\n        expenses: [...state.expenses.filter((expense) => expense.id !== payload)],\n      };\n    case FETCH_EXPENSE:\n      return {\n        ...state,\n        expenses: payload,\n        totalCount:totalCount\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/auth/authReducer.js",["818"],"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { SIGN_IN_USER, SIGN_OUT_USER } from \"./authConstants\";\n\nconst initialState = {\n  authenticated: false,\n  currentUser: {},\n};\nconst getAuthState = () => {\n  const auth = localStorage.getItem(\"currentUser\");\n  try {\n    const authObj = JSON.parse(auth);\n    const jwToken = authObj.currentUser.token;\n    const decodedToken = jwtDecode(jwToken, {\n      complete: true,\n    });\n    const expiresAt = decodedToken.exp;\n    var now = new Date();\n    let expiryDate = expiresAt * 1000 - now.getTime();\n\n    if (new Date(expiresAt * 1000) > new Date()) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${jwToken}`;\n      return authObj;\n    }\n\n    return initialState;\n  } catch (error) {\n    return initialState;\n  }\n};\nlet currentUser = getAuthState();\n\nexport default function authReducer(state = currentUser, { type, payload }) {\n  switch (type) {\n    case SIGN_IN_USER:\n      var currentUser = {\n        ...state,\n        authenticated: true,\n        currentUser: {\n          ...payload,\n        },\n      };\n\n      axios.defaults.headers.common[\n        \"Authorization\"\n      ] = `Bearer ${payload.token}`;\n      localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n      return currentUser;\n    case SIGN_OUT_USER:\n      localStorage.removeItem(\"currentUser\");\n\n      currentUser = {\n        authenticated: false,\n        currentUser: null,\n      };\n      return currentUser;\n\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderReducer.js",["819"],"import { sampleDataOrder } from \"../../../app/api/sampleDataOrder\";\nimport {\n  CREATE_ORDER,\n  DELETE_ORDER,\n  FETCH_ORDER,\n  SEND_TO_OPERATION,\n  UPDATE_ORDER,\n} from \"./orderConstants\";\n\nconst initialState = {\n  orders: [],\n};\n\nexport default function orderReducer(\n  state = initialState,\n  { type, payload, totalCount }\n) {\n  switch (type) {\n    case CREATE_ORDER:\n      return {\n        ...state,\n        orders: [...state.orders, payload],\n      };\n    case UPDATE_ORDER:\n      return {\n        ...state,\n        orders: [\n          ...state.orders.filter((order) => order.id !== payload.id),\n          payload,\n        ],\n      };\n\n    case DELETE_ORDER:\n      return {\n        ...state,\n        orders: [...state.orders.filter((order) => order.id !== payload)],\n      };\n    case FETCH_ORDER:\n      // console.log(payload.filter(order=> order.executiveStatus == 0))\n      return {\n        ...state,\n        orders: payload.filter((order) => order.employee_id === null),\n        totalCount: totalCount,\n      };\n    case SEND_TO_OPERATION:\n      return {\n        ...state,\n        orders: [\n          ...state.orders.filter(\n            (order) => order.id !== payload.id\n          ),\n        ],\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesReducer.js",["820"],"import { sampleData } from \"../../../app/api/sampleData\";\nimport {\n  CREATE_EMPLOYEES,\n  DELETE_EMPLOYEES,\n  FETCH_EMPLOYEES,\n  UPDATE_EMPLOYEES,\n} from \"./employeesConstants\";\n\nconst initialState = {\n  employees: [],\n};\n\nexport default function employeesReducer(\n  state = initialState,\n  { type, payload }\n) {\n  switch (type) {\n    case CREATE_EMPLOYEES:\n      return {\n        ...state,\n        employees: [...state.employees, payload],\n      };\n\n    case UPDATE_EMPLOYEES:\n      return {\n        ...state,\n        employees: [\n          ...state.employees.filter((employee) => employee.id !== payload.id),\n          payload,\n        ],\n      };\n    case DELETE_EMPLOYEES:\n      // console.log('silindi')\n      return {\n        ...state,\n        employees: [\n          ...state.employees.filter((employee) => employee.id !== payload),\n        ],\n      };\n    case FETCH_EMPLOYEES:\n      return {\n        ...state,\n        employees: payload,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labReducer.js",["821"],"import { sampleDataLab } from \"../../../app/api/sampleDataLab\";\nimport {\n  CREATE_LAB,\n  DELETE_LAB,\n  FETCH_LAB,\n  UPDATE_LAB,\n} from \"./labConstants\";\n\nconst initialState = {\n  labs: []\n};\n\nexport default function labReducer(state = initialState, { type, payload,totalCount}) {\n  switch (type) {\n    case CREATE_LAB:\n      return {\n        ...state,\n        labs: [...state.labs, payload],\n      };\n    case UPDATE_LAB:\n      return {\n        ...state,\n        labs: [\n          ...state.labs.filter((lab) => lab.id !== payload.id),\n          payload,\n        ],\n      };\n\n    case DELETE_LAB:\n      return {\n        ...state,\n        labs: [...state.labs.filter((lab) => lab.id !== payload)],\n      };\n    case FETCH_LAB:\n      return {\n        ...state,\n        labs: payload,\n        totalCount:totalCount\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActsReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/modal/modalReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentActions.js",["822","823","824"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataDepartments } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_DEPARTMENT,\n  DELETE_DEPARTMENT,\n  FETCH_DEPARTMENT,\n  UPDATE_DEPARTMENT,\n} from \"./departmentConstants\";\n\nexport function loadDepartments(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const departments = await axios.get(\"/structural_section\", {\n      params: { ...data },\n    });\n    if (departments.status === 200) {\n      dispatch({\n        type: FETCH_DEPARTMENT,\n        payload: departments.data.data,\n        totalCount: departments.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToDepartment(departments) {\n  return {\n    type: FETCH_DEPARTMENT,\n    payload: departments,\n  };\n}\n\nexport function createDepartment(departments) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(\"structural_section/create\", departments, {\n      withCredentials: true,\n    });\n\n    if (data.status === 201) {\n      console.log(data.data.data );\n\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_DEPARTMENT, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateDepartment(department) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const departmentUptaded = await axios.put(\n      \"/structural_section/update\",\n      department\n    );\n    console.log(departmentUptaded)\n    if (departmentUptaded.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_DEPARTMENT,\n        payload: departmentUptaded.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteDepartment(departmentId) {\n    return async function (dispatch) {\n        const documentDeleted = await axios.delete(\n          `/structural_section/delete?id=${departmentId}`\n        );\n        console.log(documentDeleted);\n        if (documentDeleted.status === 200) {\n    \n          dispatch({ type: DELETE_DEPARTMENT, payload: departmentId });\n          // dispatch(asyncActionFinish())\n          toast.info(\"Uğurla silindi\");\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyActions.js",["825","826","827"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fethcSampleDataDuties } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_DUTY,\n  DELETE_DUTY,\n  FETCH_DUTY,\n  UPDATE_DUTY,\n} from \"./dutyConstants\";\n\nexport function loadDuties(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const duties = await axios.get(\"/position\", {\n      params: { ...data },\n    });\n    if (duties.status === 200) {\n      dispatch({\n        type: FETCH_DUTY,\n        payload: duties.data.data,\n        totalCount: duties.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToDuty(duties) {\n  return {\n    type: FETCH_DUTY,\n    payload: duties,\n  };\n}\n\nexport function createDuty(duty) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(\"position/create\", duty, {\n      withCredentials: true,\n    });\n\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_DUTY, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateDuty(duty) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const documentDuty = await axios.put(\"/position/update\", duty);\n    if (documentDuty.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_DUTY,\n        payload: documentDuty.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteDuty(dutyId) {\n    return async function (dispatch) {\n        const documentDeleted = await axios.delete(\n          `/position/delete?id=${dutyId}`\n        );\n        console.log(documentDeleted);\n        if (documentDeleted.status === 200) {\n          dispatch({ type: DELETE_DUTY, payload: dutyId });\n          // dispatch(asyncActionFinish())\n          toast.info(\"Uğurla silindi\");\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceActions.js",["828","829","830"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataReference } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_REFERENCE,\n  DELETE_REFERENCE,\n  FETCH_REFERENCE,\n  UPDATE_REFERENCE,\n} from \"./referenceConstants\";\nconst url = \"rreference\";\nexport function loadReference(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const references = await axios.get(`/${url}`, {\n      params: { ...data },\n    });\n    if (references.status === 200) {\n      dispatch({\n        type: FETCH_REFERENCE,\n        payload: references.data.data,\n        totalCount: references.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToReference(reference) {\n  return {\n    type: FETCH_REFERENCE,\n    payload: reference,\n  };\n}\n\nexport function createReference(reference) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(`${url}/create`, reference, {\n      withCredentials: true,\n    });\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_REFERENCE, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateReference(reference) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const referenceUpdated = await axios.put(\n      `/${url}/update`,\n      reference\n    );\n    if (referenceUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_REFERENCE,\n        payload: referenceUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteReference(referenceId) {\n  return async function (dispatch) {\n    const documentDeleted = await axios.delete(\n      `/${url}/delete?id=${referenceId}`\n    );\n    if (documentDeleted.status === 200) {\n      dispatch({ type: DELETE_REFERENCE, payload: referenceId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docActions.js",["831","832","833"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fethcSampleDataDocs } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport { CREATE_DOC, DELETE_DOC, FETCH_DOC, UPDATE_DOC } from \"./docConstants\";\nconst url = \"document\";\n\nexport function loadDocs(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const docs = await axios.get(`/${url}`, {\n      params: { ...data },\n    });\n    console.log(docs.data)\n    if (docs.status === 200) {\n      dispatch({\n        type: FETCH_DOC,\n        payload: docs.data.data,\n        totalCount: docs.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToDoc(docs) {\n  return {\n    type: FETCH_DOC,\n    payload: docs,\n  };\n}\n\nexport function createDoc(doc) {\n  return async function (dispatch) {\n    console.log(doc);\n    dispatch(asyncActionStart());\n    const data = await axios.post(`${url}/create`, doc, {\n      withCredentials: true,\n    });\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_DOC, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateDoc(doc) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const docUpdated = await axios.put(\n      `/${url}/update`,\n      doc\n    );\n    if (docUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_DOC,\n        payload: docUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteDoc(docId) {\n  return async function (dispatch) {\n    const documentDeleted = await axios.delete(\n      `/${url}/delete?id=${docId}`\n    );\n    if (documentDeleted.status === 200) {\n      dispatch({ type: DELETE_DOC, payload: docId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeActions.js",["834","835","836"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataDocumentTypes } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_DOCUMENTTYPE,\n  DELETE_DOCUMENTTYPE,\n  FETCH_DOCUMENTTYPE,\n  UPDATE_DOCUMENTTYPE,\n} from \"./documentTypeConstants\";\n\nexport function loadDocumentTypes(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const document_types = await axios.get(\"/document_type\", {\n      params: { ...data },\n    });\n    if (document_types.status === 200) {\n      dispatch({\n        type: FETCH_DOCUMENTTYPE,\n        payload: document_types.data.data,\n        totalCount: document_types.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToDocumentType(documentTypes) {\n  return {\n    type: FETCH_DOCUMENTTYPE,\n    payload: documentTypes,\n  };\n}\n\nexport function createDocumentType(documentType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(\"document_type/create\", documentType, {\n      withCredentials: true,\n    });\n\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_DOCUMENTTYPE, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateDocumentType(documentType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const documentUpdated = await axios.put(\n      \"/document_type/update\",\n      documentType\n    );\n    console.log(documentUpdated.data.data)\n    if (documentUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_DOCUMENTTYPE,\n        payload: documentUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteDocumentType(documentTypeId) {\n  return async function (dispatch) {\n    const documentDeleted = await axios.delete(\n      `/document_type/delete?id=${documentTypeId}`\n    );\n    console.log(documentDeleted);\n    if (documentDeleted.status === 200) {\n      dispatch({ type: DELETE_DOCUMENTTYPE, payload: documentTypeId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceActions.js",["837","838","839"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataOrderSource } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_ORDER_SOURCE,\n  DELETE_ORDER_SOURCE,\n  FETCH_ORDER_SOURCE,\n  UPDATE_ORDER_SOURCE,\n} from \"./orderSourceConstants\";\n\nexport function loadOrderSource(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const orderSources = await axios.get(\"/order_source\", {\n      params: { ...data },\n    });\n    if (orderSources.status === 200) {\n      dispatch({\n        type: FETCH_ORDER_SOURCE,\n        payload: orderSources.data.data,\n        totalCount: orderSources.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToOrderSource(orderSource) {\n  return {\n    type: FETCH_ORDER_SOURCE,\n    payload: orderSource,\n  };\n}\n\nexport function createOrderSource(orderSource) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(\"order_source/create\", orderSource, {\n      withCredentials: true,\n    });\n    \n\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_ORDER_SOURCE, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateOrderSource(orderSource) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const orderSourceUpdated = await axios.put(\n      \"/order_source/update\",\n      orderSource\n    );\n   \n    if (orderSourceUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_ORDER_SOURCE,\n        payload: orderSourceUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteOrderSource(orderSourceId) {\n  return async function (dispatch) {\n    const orderSourceDeleted = await axios.delete(\n      `/order_source/delete?id=${orderSourceId}`\n    );\n    \n    if (orderSourceDeleted.status === 200) {\n      dispatch({ type: DELETE_ORDER_SOURCE, payload: orderSourceId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeActions.js",["840","841","842"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataExpenseTypes } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_EXPENSE_TYPE,\n  DELETE_EXPENSE_TYPE,\n  FETCH_EXPENSE_TYPE,\n  UPDATE_EXPENSE_TYPE,\n} from \"./expenseTypeConstants\";\n\nexport function loadExpenseType(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const document_types = await axios.get(\"/expense_type\", {\n      params: { ...data },\n    });\n    if (document_types.status === 200) {\n      dispatch({\n        type: FETCH_EXPENSE_TYPE,\n        payload: document_types.data.data,\n        totalCount: document_types.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToExpenseType(expenseTypes) {\n  return {\n    type: FETCH_EXPENSE_TYPE,\n    payload: expenseTypes,\n  };\n}\n\nexport function createExpenseType(expenseType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(\"expense_type/create\", expenseType, {\n      withCredentials: true,\n    });\n\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_EXPENSE_TYPE, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateExpenseType(expenseType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const expenseTypeUpdated = await axios.put(\n      \"/expense_type/update\",\n      expenseType\n    );\n  \n    if (expenseTypeUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_EXPENSE_TYPE,\n        payload: expenseTypeUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteExpenseType(expenseTypeId) {\n  return async function (dispatch) {\n    const expenseTypeDeleted = await axios.delete(\n      `/expense_type/delete?id=${expenseTypeId}`\n    );\n   \n    if (expenseTypeDeleted.status === 200) {\n      dispatch({ type: DELETE_EXPENSE_TYPE, payload: expenseTypeId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeActions.js",["843","844","845"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataServiceTypes } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_SERVICE_TYPE,\n  DELETE_SERVICE_TYPE,\n  FETCH_SERVICE_TYPE,\n  UPDATE_SERVICE_TYPE,\n} from \"./serviceTypeConstants\";\n\nexport function loadServiceType(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const serviceTypes = await axios.get(\"/service_type\", {\n      params: { ...data },\n    });\n    if (serviceTypes.status === 200) {\n      dispatch({\n        type: FETCH_SERVICE_TYPE,\n        payload: serviceTypes.data.data,\n        totalCount: serviceTypes.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToServiceType(serviceTypes) {\n  return {\n    type: FETCH_SERVICE_TYPE,\n    payload: serviceTypes,\n  };\n}\n\nexport function createServiceType(serviceType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(\"service_type/create\", serviceType, {\n      withCredentials: true,\n    });\n\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_SERVICE_TYPE, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateServiceType(serviceType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const serviceTypeUpdated = await axios.put(\n      \"/service_type/update\",\n      serviceType\n    );\n    console.log(serviceTypeUpdated.data.data)\n    if (serviceTypeUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_SERVICE_TYPE,\n        payload: serviceTypeUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteServiceType(serviceTypeId) {\n  return async function (dispatch) {\n    const serviceTypeDeleted = await axios.delete(\n      `/service_type/delete?id=${serviceTypeId}`\n    );\n    \n    if (serviceTypeDeleted.status === 200) {\n      dispatch({ type: DELETE_SERVICE_TYPE, payload: serviceTypeId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupActions.js",["846","847","848"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataExpenseGroups } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\n\nimport {\n  CREATE_EXPENSE_GROUP,\n  DELETE_EXPENSE_GROUP,\n  FETCH_EXPENSE_GROUP,\n  UPDATE_EXPENSE_GROUP,\n} from \"./expenseGroupConstants\";\n\nexport function loadExpenseGroup(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const expenseGroups = await axios.get(\"/income_expense_group\", {\n      params: { ...data },\n    });\n    if (expenseGroups.status === 200) {\n      dispatch({\n        type: FETCH_EXPENSE_GROUP,\n        payload: expenseGroups.data.data,\n        totalCount: expenseGroups.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToExpenseGroup(expenseGroups) {\n  return {\n    type: FETCH_EXPENSE_GROUP,\n    payload: expenseGroups,\n  };\n}\n\nexport function createExpenseGroup(expenseGroup) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(\"income_expense_group/create\", expenseGroup, {\n      withCredentials: true,\n    });\n\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_EXPENSE_GROUP, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateExpenseGroup(expenseGroup) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const expenseGroupUptaded = await axios.put(\n      \"/income_expense_group/update\",\n      expenseGroup\n    );\n    if (expenseGroupUptaded.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_EXPENSE_GROUP,\n        payload: expenseGroupUptaded.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteExpenseGroup(expenseGroupId) {\n  return async function (dispatch) {\n    const documentDeleted = await axios.delete(\n      `/income_expense_group/delete?id=${expenseGroupId}`\n    );\n    if (documentDeleted.status === 200) {\n      dispatch({ type: DELETE_EXPENSE_GROUP, payload: expenseGroupId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemActions.js",["849"],"import { toast } from \"react-toastify\";\nimport { fetchSampleDataControlSystem } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport { CREATE_CONTROL_SYSTEM, DELETE_CONTROL_SYSTEM, FETCH_CONTROL_SYSTEM, UPDATE_CONTROL_SYSTEM } from \"./controlSystemConstants\";\n\nexport function loadControlSystem() {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    try {\n      const controlSystems = await fetchSampleDataControlSystem();\n      dispatch({ type: FETCH_CONTROL_SYSTEM, payload: controlSystems });\n      dispatch(asyncActionFinish());\n    } catch (error) {\n      dispatch(asyncActionError(error));\n    }\n  };\n}\nexport function listenToControlSystem(controlSystems){\n    return {\n        type:FETCH_CONTROL_SYSTEM,\n        payload:controlSystems\n    }\n}\n\nexport function createControlSystem(controlSystem){\n    return async function(dispatch){\n        dispatch(asyncActionStart());\n        try {\n            await delay(1000);\n            dispatch({type:CREATE_CONTROL_SYSTEM,payload:controlSystem});\n            dispatch(asyncActionFinish());\n\n        } catch (error) {\n            asyncActionError(error)\n        }\n    }\n}\n\nexport function updateControlSystem(controlSystem){\n    return async function(dispatch){\n        dispatch(asyncActionStart)\n        try {\n            await delay(1000);\n            dispatch({type:UPDATE_CONTROL_SYSTEM,payload:controlSystem});\n            dispatch(asyncActionFinish());\n        } catch (error) {\n            asyncActionError(error);\n        }\n    }\n}\n\nexport function deleteControlSystem(controlSystemId){\n    return async function(dispatch){\n        try {\n            await delay(1000)\n            dispatch({type:DELETE_CONTROL_SYSTEM, payload:controlSystemId});\n            // dispatch(asyncActionFinish())\n            toast.success(\"Uğurla silindi\")\n        } catch (error) {\n            dispatch(asyncActionError(error))\n        }\n    }\n}","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalActions.js",["850"],"import { toast } from \"react-toastify\";\nimport { fetchSampleDataPersonal } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport { CREATE_PERSONAL, DELETE_PERSONAL, FETCH_PERSONAL, UPDATE_PERSONAL } from \"./personalConstants\";\n\nexport function loadPersonal() {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    try {\n      const personals = await fetchSampleDataPersonal();\n      dispatch({ type: FETCH_PERSONAL, payload: personals });\n      dispatch(asyncActionFinish());\n    } catch (error) {\n      dispatch(asyncActionError(error));\n    }\n  };\n}\nexport function listenToPersonal(personals){\n    return {\n        type:FETCH_PERSONAL,\n        payload:personals\n    }\n}\n\nexport function createPersonal(personal){\n    return async function(dispatch){\n        dispatch(asyncActionStart());\n        try {\n            await delay(1000);\n            dispatch({type:CREATE_PERSONAL,payload:personal});\n            dispatch(asyncActionFinish());\n\n        } catch (error) {\n            asyncActionError(error)\n        }\n    }\n}\n\nexport function updatePersonal(personal){\n    return async function(dispatch){\n        dispatch(asyncActionStart)\n        try {\n            await delay(1000);\n            dispatch({type:UPDATE_PERSONAL,payload:personal});\n            dispatch(asyncActionFinish());\n        } catch (error) {\n            asyncActionError(error);\n        }\n    }\n}\n\nexport function deletePersonal(personalId){\n    return async function(dispatch){\n        try {\n            await delay(1000)\n            dispatch({type:DELETE_PERSONAL, payload:personalId});\n            // dispatch(asyncActionFinish())\n            toast.success(\"Uğurla silindi\")\n        } catch (error) {\n            dispatch(asyncActionError(error))\n        }\n    }\n}","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingActions.js",["851","852","853"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataTraining } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_TRAINING,\n  DELETE_TRAINING,\n  FETCH_TRAINING,\n  UPDATE_TRAINING,\n} from \"./trainingConstants\";\nconst url = \"training\";\nexport function loadTraining(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const trainings = await axios.get(`/${url}`, {\n      params: { ...data },\n    });\n    console.log(trainings);\n    if (trainings.status === 200) {\n      dispatch({\n        type: FETCH_TRAINING,\n        payload: trainings.data.data,\n        totalCount: trainings.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToTraining(trainings) {\n  return {\n    type: FETCH_TRAINING,\n    payload: trainings,\n  };\n}\n\nexport function createTraining(training) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(`${url}/create`, training, {\n      withCredentials: true,\n    });\n    console.log(data)\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_TRAINING, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateTraining(training) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const trainingUpdated = await axios.put(\n      `/${url}/update`,\n      training\n    );\n    if (trainingUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_TRAINING,\n        payload: trainingUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteTraining(trainingId) {\n  return async function (dispatch) {\n    const documentDeleted = await axios.delete(\n      `/${url}/delete?id=${trainingId}`\n    );\n    if (documentDeleted.status === 200) {\n      dispatch({ type: DELETE_TRAINING, payload: trainingId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceActions.js",["854","855","856"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataProductService } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport { CREATE_PRODUCT_SERVICE, DELETE_PRODUCT_SERVICE, FETCH_PRODUCT_SERVICE, UPDATE_PRODUCT_SERVICE } from \"./productServiceConstants\";\nconst url = \"product_certificate\";\n\nexport function loadProductService(data) {\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n    \n        const productService = await axios.get(`/${url}`, {\n          params: { ...data },\n        });\n\n        console.log(productService)\n        if (productService.status === 200) {\n          dispatch({\n            type: FETCH_PRODUCT_SERVICE,\n            payload: productService.data.data,\n            totalCount: productService.data.message,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}\nexport function listenToProductService(productServices){\n    return {\n        type:FETCH_PRODUCT_SERVICE,\n        payload:productServices\n    }\n}\n\nexport function createProductService(productService){\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n        console.log(productService);\n\n        const data = await axios.post(`${url}/create`, productService, {\n          withCredentials: true,\n        });\n\n        \n        if (data.status === 201) {\n          toast.success(\"Uğurla əlavə edildi\");\n          dispatch({ type: CREATE_PRODUCT_SERVICE, payload: data.data.data });\n          dispatch(asyncActionFinish());\n        } else {\n          toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n        }\n      };\n}\n\nexport function updateProductService(productService){\n    return async function (dispatch) {\n        dispatch(asyncActionStart);\n    \n        const productServiceUpdated = await axios.put(\n          `/${url}/update`,\n          productService\n        );\n        if (productServiceUpdated.status === 200) {\n          toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n          dispatch({\n            type: UPDATE_PRODUCT_SERVICE,\n            payload: productServiceUpdated.data.data,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          asyncActionError();\n        }\n      };\n}\n\nexport function deleteProductService(productServiceId){\n    return async function (dispatch) {\n        const productServiceDeleted = await axios.delete(\n          `/${url}/delete?id=${productServiceId}`\n        );\n        if (productServiceDeleted.status === 200) {\n          dispatch({ type: DELETE_PRODUCT_SERVICE, payload: productServiceId });\n          // dispatch(asyncActionFinish())\n          toast.info(\"Uğurla silindi\");\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n    }","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillActions.js",["857","858","859"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataSkill } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_SKILL,\n  DELETE_SKILL,\n  FETCH_SKILL,\n  UPDATE_SKILL,\n} from \"./skillConstants\";\nconst url = \"skill\";\n\nexport function loadSkill(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const references = await axios.get(`/${url}`, {\n      params: { ...data },\n    });\n    if (references.status === 200) {\n      dispatch({\n        type: FETCH_SKILL,\n        payload: references.data.data,\n        totalCount: references.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToSkill(skills) {\n  return {\n    type: FETCH_SKILL,\n    payload: skills,\n  };\n}\n\nexport function createSkill(skill) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(`${url}/create`, skill, {\n      withCredentials: true,\n    });\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_SKILL, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateSkill(skill) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const skillUpdated = await axios.put(\n      `/${url}/update`,\n      skill\n    );\n    if (skillUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_SKILL,\n        payload: skillUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteSkill(skillId) {\n  return async function (dispatch) {\n    const documentDeleted = await axios.delete(\n      `/${url}/delete?id=${skillId}`\n    );\n    if (documentDeleted.status === 200) {\n      dispatch({ type: DELETE_SKILL, payload: skillId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActActions.js",["860","861","862","863"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataSignOfLegalAct } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport { DELETE_SERVICE_TYPE } from \"../serviceType/serviceTypeConstants\";\nimport {\n  CREATE_SIGN_OF_LEGAL_ACT,\n  DELETE_SIGN_OF_LEGAL_ACT,\n  FETCH_SIGN_OF_LEGAL_ACT,\n  UPDATE_SIGN_OF_LEGAL_ACT,\n} from \"./signOfLegalActConstants\";\nconst url = \"legal_act\";\n\nexport function loadSignOfLegalAct(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const references = await axios.get(`/${url}`, {\n      params: { ...data },\n    });\n    if (references.status === 200) {\n      dispatch({\n        type: FETCH_SIGN_OF_LEGAL_ACT,\n        payload: references.data.data,\n        totalCount: references.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToSignOfLegalAct(counterparties) {\n  return {\n    type: FETCH_SIGN_OF_LEGAL_ACT,\n    payload: counterparties,\n  };\n}\n\nexport function createSignOfLegalAct(signOfLegalAct) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(`${url}/create`, signOfLegalAct, {\n      withCredentials: true,\n    });\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_SIGN_OF_LEGAL_ACT, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateSignOfLegalAct(signOfLegalAct) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const signOfLegalActUpdated = await axios.put(\n      `/${url}/update`,\n      signOfLegalAct\n    );\n    if (signOfLegalActUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_SIGN_OF_LEGAL_ACT,\n        payload: signOfLegalActUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteSignOfLegalAct(signOfLegalActId) {\n  return async function (dispatch) {\n    const signOfLegalActDeleted = await axios.delete(\n      `/${url}/delete?id=${signOfLegalActId}`\n    );\n    if (signOfLegalActDeleted.status === 200) {\n      dispatch({ type: DELETE_SIGN_OF_LEGAL_ACT, payload: signOfLegalActId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/auth/authConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyActions.js",["864","865","866"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataCounterParty } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_COUNTERPARTY,\n  DELETE_COUNTERPARTY,\n  FETCH_COUNTERPARTY,\n  UPDATE_COUNTERPARTY,\n} from \"./counterpartyConstants\";\n\nexport function loadCounterparty(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const counterparties = await axios.get(\"/contractor\", {\n      params: { ...data },\n    });\n    if (counterparties.status === 200) {\n      dispatch({\n        type: FETCH_COUNTERPARTY,\n        payload: counterparties.data.data,\n        totalCount: counterparties.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToCounterparty(counterparties) {\n  return {\n    type: FETCH_COUNTERPARTY,\n    payload: counterparties,\n  };\n}\n\nexport function createCounterparty(counterparty) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(\"contractor/create\", counterparty, {\n      withCredentials: true,\n    });\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_COUNTERPARTY, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateCounterparty(counterparty) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const counterpartyUptaded = await axios.put(\n      \"/contractor/update\",\n      counterparty\n    );\n    \n    if (counterpartyUptaded.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_COUNTERPARTY,\n        payload: counterpartyUptaded.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteCounterparty(counterpartyId) {\n  return async function (dispatch) {\n    const counterpartyDeleted = await axios.delete(\n      `/contractor/delete?id=${counterpartyId}`\n    );\n    if (counterpartyDeleted.status === 200) {\n      dispatch({ type: DELETE_COUNTERPARTY, payload: counterpartyId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labActions.js",["867","868","869","870"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataLab } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport { DELETE_DOC } from \"../docPage/docConstants\";\nimport { CREATE_LAB, DELETE_LAB, FETCH_LAB, UPDATE_LAB } from \"./labConstants\";\n\nconst url = \"lab\";\nexport function loadLab(data) {\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n    \n        const labs = await axios.get(`/${url}`, {\n          params: { ...data },\n        });\n        console.log(labs)\n        if (labs.status === 200) {\n          dispatch({\n            type: FETCH_LAB,\n            payload: labs.data.data,\n            totalCount: labs.data.message,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}\nexport function listenToLab(labs){\n    return {\n        type:FETCH_LAB,\n        payload:labs\n    }\n}\n\nexport function createLab(lab){\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n        const data = await axios.post(`${url}/create`, lab, {\n          withCredentials: true,\n        });\n        if (data.status === 201) {\n          toast.success(\"Uğurla əlavə edildi\");\n          dispatch({ type: CREATE_LAB, payload: data.data.data });\n          dispatch(asyncActionFinish());\n        } else {\n          toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n        }\n      };\n}\n\nexport function updateLab(lab){\n    return async function (dispatch) {\n        dispatch(asyncActionStart);\n    \n        const labUpdated = await axios.put(\n          `/${url}/update`,\n          lab\n        );\n        if (labUpdated.status === 200) {\n          toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n          dispatch({\n            type: UPDATE_LAB,\n            payload: labUpdated.data.data,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          asyncActionError();\n        }\n      };\n}\n\nexport function deleteLab(labId){\n    return async function (dispatch) {\n        const documentDeleted = await axios.delete(\n          `/${url}/delete?id=${labId}`\n        );\n        if (documentDeleted.status === 200) {\n          dispatch({ type: DELETE_LAB, payload: labId });\n          // dispatch(asyncActionFinish())\n          toast.info(\"Uğurla silindi\");\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseActions.js",["871","872","873"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataExpense } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport { CREATE_EXPENSE, DELETE_EXPENSE, FETCH_EXPENSE, UPDATE_EXPENSE } from \"./expenseConstants\";\nconst url = 'expense';\n\nexport function loadExpense(data) {\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n    \n        const expenses = await axios.get(`/${url}`, {\n          params: { ...data },\n        });\n        console.log(expenses);\n        if (expenses.status === 200) {\n          dispatch({\n            type: FETCH_EXPENSE,\n            payload: expenses.data.data,\n            totalCount: expenses.data.message,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}\nexport function listenToExpense(expenses){\n    return {\n        type:FETCH_EXPENSE,\n        payload:expenses\n    }\n}\n\nexport function createExpense(expense){\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n        const data = await axios.post(`${url}/create`, expense, {\n          withCredentials: true,\n        });\n        console.log(expense);\n        if (data.status === 201) {\n          toast.success(\"Uğurla əlavə edildi\");\n          dispatch({ type: CREATE_EXPENSE, payload: data.data.data });\n          dispatch(asyncActionFinish());\n        } else {\n          toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n        }\n      };\n}\n\nexport function updateExpense(expense){\n    return async function (dispatch) {\n        dispatch(asyncActionStart);\n    \n        const expenseUpdated = await axios.put(\n          `/${url}/update`,\n          expense\n        );\n        if (expenseUpdated.status === 200) {\n          toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n          dispatch({\n            type: UPDATE_EXPENSE,\n            payload: expenseUpdated.data.data,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          asyncActionError();\n        }\n      };\n}\n\nexport function deleteExpense(expenseId){\n    return async function (dispatch) {\n        const expenseDeleted = await axios.delete(\n          `/${url}/delete?id=${expenseId}`\n        );\n        if (expenseDeleted.status === 200) {\n          dispatch({ type: DELETE_EXPENSE, payload: expenseId });\n          // dispatch(asyncActionFinish())\n          toast.info(\"Uğurla silindi\");\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}","/Users/ict/Documents/GitHub/certus-master/src/features/auth/authActions.js",["874"],"import axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { asyncActionError, asyncActionFinish, asyncActionStart } from \"../../app/async/asyncReducer\";\nimport { SIGN_IN_USER, SIGN_OUT_USER } from \"./authConstants\";\n\nexport function signInUser(history,user) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    const data = await axios.post(\"login\", user, {\n      withCredentials: true,\n    });\n    if (data.status === 200) {\n      console.log(data.data.data);\n      dispatch({ type: SIGN_IN_USER, payload: data.data.data });\n      dispatch(asyncActionFinish());\n      history.push(\"/dashboard\");\n    } else {\n      dispatch(asyncActionError(data.data.Message));\n    }\n  };\n\n}\n\nexport function signOutUser(paylaod) {\n  return {\n    type: SIGN_OUT_USER,\n    paylaod: paylaod,\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderActions.js",["875","876","877"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataOrder } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport {\n  CREATE_ORDER,\n  DELETE_ORDER,\n  FETCH_ORDER,\n  SEND_TO_OPERATION,\n  UPDATE_ORDER,\n} from \"./orderConstants\";\nconst url = \"order\";\nexport function loadOrder(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const orders = await axios.get(`/${url}`, {\n      params: { ...data },\n    });\n    console.log(orders);\n    if (orders.status === 200) {\n      dispatch({\n        type: FETCH_ORDER,\n        payload: orders.data.data,\n        totalCount: orders.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToOrder(orders) {\n  return {\n    type: FETCH_ORDER,\n    payload: orders,\n  };\n}\n\nexport function createOrder(order) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    const data = await axios.post(`${url}/create`, order, {\n      withCredentials: true,\n    });\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_ORDER, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateOrder(order) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    console.log(order);\n    const orderUpdated = await axios.put(`/${url}/update`, order);\n    if (orderUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_ORDER,\n        payload: orderUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteOrder(orderId) {\n  return async function (dispatch) {\n    const documentDeleted = await axios.delete(`/${url}/delete?id=${orderId}`);\n    if (documentDeleted.status === 200) {\n      dispatch({ type: DELETE_ORDER, payload: orderId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n\nexport function sendToOperation(data) {\n    return async function (dispatch) {\n        dispatch(asyncActionStart);\n        const sendToOperation = await axios.put(`/${url}/add_employee`, data);\n        if (sendToOperation.status === 200) {\n          toast.success(\"İcraçı təyin edildi və əməliyyatlar bölməsinə göndərildi\");\n          dispatch({\n            type: SEND_TO_OPERATION,\n            payload: sendToOperation.data.data,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          asyncActionError();\n        }\n      };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/ServiceTypePageModal.jsx",["878"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createServiceType, updateServiceType } from \"./serviceTypeActions\";\n\nexport default function ServiceTypePageModal({ serviceType }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = serviceType\n    ? serviceType\n    : {\n        id: \"\",\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={serviceType ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            serviceType\n              ? await dispatch(updateServiceType(values))\n              : await dispatch(createServiceType({ ...values}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Xidmət növü\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/TrainingPageModal.jsx",["879","880","881"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createTraining, updateTraining } from \"./trainingActions\";\nimport MySearchableSelect from \"../../../../app/common/form/MySearchableSelect\";\n\nexport default function TrainingPageModal({ training }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const { skills } = useSelector((state) => state.skills);\n  const skillOptions = \n    skills &&\n    skills.map((skill) => {\n      return  {\n        label: skill.name,\n        value: skill.id,\n      };\n    });\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = training\n    ? training\n    : {\n        id: \"\",\n        name: \"\",\n        about: \"\",\n        skill_id: [],\n        // trainingCategory: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    about: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // trainingSkills: Yup.required(\"Mütləq doldurulmalıdır.\"),\n    // trainingCategory: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={training ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            training\n              ? await dispatch(updateTraining(values))\n              : await dispatch(createTraining({ ...values}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors, values }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Təlim adı\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"about\"\n                  name=\"about\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Təlim haqqında\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                {/* {console.log(values)} */}\n                <MySearchableSelect\n                  id=\"skill_id\"\n                  name=\"skill_id\"\n                  options={skillOptions}\n                  defaultValue={\n                    training &&\n                    skillOptions.filter(\n                      (skillOption) =>\n                      skillOption.skill_id.id == skillOption.value\n                    )\n                  }\n                  isMulti\n                  placeholder=\"Təlimin səriştələri\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/SignOfLegalActPageModal.jsx",["882","883"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport {\n  createSignOfLegalAct,\n  updateSignOfLegalAct,\n} from \"./signOfLegalActActions\";\n\nexport default function SignOfLegalActPageModal({ signOfLegalAct }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = signOfLegalAct\n    ? signOfLegalAct\n    : {\n        id: \"\",\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={signOfLegalAct ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            signOfLegalAct\n              ? await dispatch(updateSignOfLegalAct(values))\n              : await dispatch(createSignOfLegalAct({ ...values, id: cuid() }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Hüquqi normativ texniki aktın işarəsi\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/SkillPageModal.jsx",["884","885"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createSkill, updateSkill } from \"./skillActions\";\n\nexport default function SkillPageModal({ skill }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = skill ? skill : {\n    id: \"\",\n    name: \"\",\n    about: \"\",\n    // skillNumber: \"\",\n    // skillCategory: \"\",\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    about: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // skillNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // skillCategory: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={skill ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            skill\n              ? await dispatch(updateSkill(values))\n              : await dispatch(createSkill({ ...values, id: cuid() }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Səriştənin adı\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"about\"\n                  name=\"about\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Səriştə haqqında\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/ReferencePageModal.jsx",["886","887"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createReference, updateReference } from \"./referenceActions\";\n\nexport default function ReferencePageModal({ reference }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = reference\n    ? reference\n    : {\n        id: \"\",\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={reference ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            reference\n              ? await dispatch(updateReference(values))\n              : await dispatch(createReference({ ...values, id: cuid() }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Referans\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/OrderSourcePageModal.jsx",["888","889","890"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createOrderSource, updateOrderSource } from \"./orderSourceActions\";\n\nexport default function OrderSourcePageModal({ orderSource }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = orderSource\n    ? orderSource\n    : {\n        id: \"\",\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={orderSource ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            orderSource\n              ? await dispatch(updateOrderSource(values))\n              : await dispatch(createOrderSource({ ...values}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sifariş mənbəyi\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/ExpenseTypePageModal.jsx",["891"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createExpenseType, updateExpenseType } from \"./expenseTypeActions\";\nimport MySearchableSelect from \"../../../../app/common/form/MySearchableSelect\";\n\nexport default function ExpenseTypePageModal({ expenseType }) {\n  const dispatch = useDispatch();\n  const { expenseGroups } = useSelector((state) => state.expenseGroups);\n  let expenseGroupOptions =\n    expenseGroups &&\n    expenseGroups.map((expenseGroup) => {\n      return {\n        label: expenseGroup.name,\n        value: expenseGroup.id,\n      };\n    });\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = expenseType\n    ? expenseType\n    : {\n        id: \"\",\n        name: \"\",\n        group_id: \"\",\n      };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    group_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={expenseType ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            expenseType\n              ? await dispatch(updateExpenseType(values))\n              : await dispatch(createExpenseType({ ...values, id: cuid() }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              {\" \"}\n              <div className=\"col-md-12\">\n                <MySearchableSelect\n                  defaultValue={\n                    expenseType && {\n                      label: expenseType.group_id.name,\n                      value: expenseType.group_id.id,\n                    }\n                  }\n                  id=\"group_id\"\n                  name=\"group_id\"\n                  type=\"text\"\n                  options={expenseGroupOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Gəlir-Xərc qrupu\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Gəlir-Xərc növü\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/ExpenseGroupPageModal.jsx",["892","893","894"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createExpenseGroup, updateExpenseGroup } from \"./expenseGroupActions\";\n\nexport default function ExpenseGroupPageModal({ expenseGroup }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = expenseGroup ?expenseGroup: {\n    id: \"\",\n    name: \"\",\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={expenseGroup ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            expenseGroup\n              ? await dispatch(updateExpenseGroup(values))\n              : await dispatch(createExpenseGroup({ ...values}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Gəlir-Xərc qrupu adı\"\n                />\n              </div>    \n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/DocumentTypePageModal.jsx",["895","896","897"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createDocumentType, updateDocumentType } from \"./documentTypeActions\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\n\nexport default function DocumentTypePageModal({ documentType }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = documentType\n    ? documentType\n    : {\n        id: \"\",\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={documentType ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            documentType\n              ? await dispatch(updateDocumentType({id:values.id,name:values.name}))\n              : await dispatch(createDocumentType({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sənəd növü\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/CounterpartyPageModal.jsx",["898","899"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createCounterparty, updateCounterparty } from \"./counterpartyActions\";\n\nexport default function CounterpartyPageModal({ counterparty }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = counterparty ? counterparty: {\n    id: \"\",\n    name: \"\",\n    about: \"\",\n    contact: \"\",\n    // counterpartyCategory: \"\",\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    about: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    contact: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={counterparty ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            counterparty\n              ? await dispatch(updateCounterparty(values))\n              : await dispatch(createCounterparty({ ...values, id: cuid() }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Kontragent adı\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"about\"\n                  name=\"about\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Kontragent haqqında\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"contact\"\n                  name=\"contact\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Kontragent əlaqə nömrəsi\"\n                />\n              </div>\n              {/* <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"counterpartyNumber\"\n                  name=\"counterpartyNumber\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Kontragent əlaqə nömrəsi\"\n                />\n              </div> */}\n              \n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/DepartmentPageModal.jsx",["900","901","902"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createDepartment, updateDepartment } from \"./departmentActions\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\n\nexport default function DepartmentPageModal({ department }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = department ? department: {\n    id: \"\",\n    name: \"\",\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={department ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            department\n              ? await dispatch(updateDepartment(values))\n              : await dispatch(createDepartment({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sturuktur bölməsi\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/DutyPageModal.jsx",["903","904"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createDuty, updateDuty } from \"./dutyActions\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\n\nexport default function DutyPageModal({ duty }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = duty ? duty: {\n    id: \"\",\n    name: \"\",\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={duty ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            duty\n              ? await dispatch(updateDuty(values))\n              : await dispatch(createDuty({ ...values, id: cuid() }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sturuktur bölməsi\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/SelectEmployeeModal.jsx",["905","906"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport { createOrder, sendToOperation, updateOrder } from \"./orderActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\n\nexport default function SelectEmployeeModal({order}) {\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const { employees } = useSelector((state) => state.employees);\n\n  let employeeOptions = [];\n  employeeOptions =\n    employees &&\n    employees.map((employee) => {\n      return {\n        value: employee.id,\n        label: `${employee.name} ${employee.surname}`,\n      };\n    });\n  const initialValues = {\n    employee_id: \"\",\n    /////\n  };\n  const validationSchema = Yup.object({\n    employee_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-md\" header={\"İcraçı təyin et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            await dispatch(sendToOperation({ ...values,id:order.id}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MySearchableSelect\n                  name=\"employee_id\"\n                  id=\"employee_id\"\n                  type=\"text\"\n                  options={employeeOptions}\n                  placeholder=\"İcraçı seç\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              İcra et\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/OrderPageModal.jsx",["907","908"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createOrder, updateOrder } from \"./orderActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\n\nexport default function OrderPageModal({ order }) {\n  const { serviceTypes } = useSelector((state) => state.serviceTypes);\n  const { orderSources } = useSelector((state) => state.orderSources);\n  const { references } = useSelector((state) => state.references);\n  const { crms } = useSelector((state) => state.crms);\n  let serviceTypeOptions = [];\n  let orderSourceOptions = [];\n  let referenceOptions = [];\n  let customerOptions = [];\n\n  serviceTypeOptions =\n    serviceTypes &&\n    serviceTypes.map((serviceType) => {\n      return {\n        value: `${serviceType.id}`,\n        label: `${serviceType.name}`,\n      };\n    });\n\n  orderSourceOptions =\n    orderSources &&\n    orderSources.map((orderSource) => {\n      return {\n        value: `${orderSource.id}`,\n        label: `${orderSource.name}`,\n      };\n    });\n  referenceOptions =\n    references &&\n    references.map((reference) => {\n      return {\n        value: `${reference.id}`,\n        label: `${reference.name}`,\n      };\n    });\n  customerOptions =\n    crms &&\n    crms.map((crm) => {\n      return {\n        value: `${crm.id}`,\n        label: `${crm.customer_name}`,\n      };\n    });\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = order\n    ? order\n    : {\n        number: \"\",\n        service_type_id: \"\",\n        customer_id: \"\",\n        order_source_id: \"\",\n        reference_id: \"\",\n        date: \"\",\n        description: \"\",\n\n        /////\n      };\n  const validationSchema = Yup.object({\n    number: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    service_type_id: Yup.number().required(),\n    customer_id: Yup.number(),\n    order_source_id: Yup.number(),\n    reference_id: Yup.number(),\n    date: Yup.string(),\n    // description: \"\",\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={order ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            order\n              ? await dispatch(\n                  updateOrder({\n                    ...values,\n                  }),\n                  console.log(values.service_type_id.id)\n                )\n              : await dispatch(createOrder(values));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n        \n      >\n        {({ isSubmitting, isValid, dirty, errors, values }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"number\"\n                  name=\"number\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sifariş Nömrəsi\"\n                />\n                {/* {console.log(values.service_type_id)} */}\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  id=\"service_type_id\"\n                  name=\"service_type_id\"\n                  type=\"text\"\n                  defaultValue={\n                    order &&\n                    {\n                      label: order.service_type_id.name,\n                      value: parseInt(order.service_type_id.id),\n                    }\n                  }\n                  \n                  options={serviceTypeOptions}\n                  // getOptionLabel={ x => x.label}\n                  // getOptionValue={ x => x.value}\n                  // className=\"form-control\"\n                  placeholder=\"Xidmət Növü\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  defaultValue={\n                    order && {\n                      label: order.customer_id.customer_name,\n                      value: parseInt(order.customer_id.id),\n                    }\n                  }\n                  id=\"customer_id\"\n                  name=\"customer_id\"\n                  options={customerOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Müştəri\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  defaultValue={\n                    order && {\n                      label: order.order_source_id.name,\n                      value: parseInt(order.order_source_id.id),\n                    }\n                  }\n                  id=\"order_source_id\"\n                  name=\"order_source_id\"\n                  type=\"text\"\n                  options={orderSourceOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Sifariş Mənbəyi\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  defaultValue={\n                    order && {\n                      label: order.reference_id.name,\n                      value: parseInt(order.reference_id.id),\n                    }\n                  }\n                  name=\"reference_id\"\n                  id=\"reference_id\"\n                  type=\"text\"\n                  options={referenceOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Referans\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"date\"\n                  id=\"date\"\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Sifariş tarixi\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextArea\n                  name=\"description\"\n                  id=\"description\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sifariş Təyinatı\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/LabPageModal.jsx",["909","910"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport { createLab, updateLab } from \"./labActions\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\n\nexport default function LabPageModal({ lab }) {\n  //   const { employees } = useSelector((state) => state.employees);\n  //   let employeeOptions = [];\n\n  //   employeeOptions = employees.map((employee) => {\n  //     return {\n  //       value: `${employee.firstname} ${employee.lastname}`,\n  //       label: `${employee.firstname} ${employee.lastname}`,\n  //     };\n  //   });\n  //   let orderSituation = [\n  //     {value:\"İcra edilir\",label:\"İcra edilir\"},\n  //     {value:\"Gözləmədə\",label:\"Gözləmədə\"},\n\n  //   ]\n  const dispatch = useDispatch();\n  const { docs } = useSelector((state) => state.docs);\n  let docsOptions =\n    docs &&\n    docs.map((doc) => {\n      return {\n        label: doc.document_number,\n        value: doc.id,\n      };\n    });\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = lab\n    ? lab\n    : {\n        name: \"\",\n        document_id: \"\",\n        certificate_number: \"\",\n        turnover: \"\",\n        operations: \"\",\n        note: \"\",\n      };\n  const validationSchema = Yup.object({\n    // id:\"\",\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    document_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    certificate_number: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    turnover: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    operations: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    note: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={lab ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            lab\n              ? await dispatch(updateLab(values))\n              : await dispatch(\n                  createLab({\n                    ...values,\n                  })\n                );\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Laboratoriya adı\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  id=\"document_id\"\n                  name=\"document_id\"\n                  // type=\"text\"\n                  defaultValue={\n                    lab && {\n                      label: lab.document_id.document_number,\n                      value: lab.document_id.id,\n                    }\n                  }\n                  options={docsOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Müqavilə Nömrəsi\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"certificate_number\"\n                  name=\"certificate_number\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Atestat Nömrəsi\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"turnover\"\n                  name=\"turnover\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Dövriyyə\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"operations\"\n                  name=\"operations\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Əməliyyatlar\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"note\"\n                  name=\"note\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Qeyd\"\n                />\n              </div>\n            </div>\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/ProductServicePageModal.jsx",["911","912","913"],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/ExpensePageModal.jsx",["914","915"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createExpense, updateExpense } from \"./expenseActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\n\nexport default function ExpensePageModal({ expense }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const { expenseGroups } = useSelector((state) => state.expenseGroups);\n  const { expenseTypes } = useSelector((state) => state.expenseTypes);\n  const { counterparties } = useSelector((state) => state.counterparties);\n  const { docs } = useSelector((state) => state.docs);\n  // OPTIONS XERC qruplari\n  const expenseGroupsOptions =\n    expenseGroups &&\n    expenseGroups.map((expenseGroup) => {\n      return {\n        label: expenseGroup.name,\n        value: expenseGroup.id,\n      };\n    });\n  // Options xerc novleri\n  const expenseTypesOptions =\n    expenseTypes &&\n    expenseTypes.map((expenseType) => {\n      return {\n        label: expenseType.name,\n        value: expenseType.id,\n      };\n    });\n  //Options Kontragent\n  const counterpartiesOptions =\n    counterparties &&\n    counterparties.map((counterparty) => {\n      return {\n        label: counterparty.name,\n        value: counterparty.id,\n      };\n    });\n  //Options Sened\n  const docsOptions =\n    docs &&\n    docs.map((doc) => {\n      return {\n        label: doc.document_number,\n        value: doc.id,\n      };\n    });\n\n  // options əməliyyat növü\n\n  const operationTypeOptions = [\n    { label: \"Gəlir\", value: 1 },\n    { label: \"Xərc\", value: 0 },\n  ];\n\n  // options ödəniş\n  const paymentOptions = [\n    { label: \"Rəsmi\", value: 0 },\n    { label: \"Qeyri rəsmi\", value: 1 },\n  ];\n\n  // options ödəniş tipi\n  const paymentTypeOptions = [\n    { label: \"Bank\", value: 1 },\n    { label: \"Kassa\", value: 2 },\n    { label: \"Nəğd\", value: 3 },\n  ];\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = expense\n    ? expense\n    : {\n        income_expense_group_id: \"\",\n        expense_type_id: \"\",\n        date: \"\",\n        contractor_id: \"\",\n        document_id: \"\",\n        // expenseInvoice: \"\",\n        operation_id: \"\",\n        payment_id: \"\",\n        payment_type_id: \"\",\n        faktura:\"\"\n      };\n  const validationSchema = Yup.object({\n    income_expense_group_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    expense_type_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    date: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    contractor_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    document_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // expenseInvoice: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    operation_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    payment_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    payment_type_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    faktura: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={expense ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            expense\n              ? await dispatch(updateExpense(values))\n              : await dispatch(createExpense({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <MySearchableSelect\n                  id=\"income_expense_group_id\"\n                  name=\"income_expense_group_id\"\n                  options={expenseGroupsOptions}\n                  defaultValue={\n                    expense && {\n                      label: expense.income_expense_group_id.name,\n                      value: expense.income_expense_group_id.id,\n                    }\n                  }\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Gəlir-Xərc qrupu\"\n                />\n              </div>\n              <div className=\"col-md-6\">\n                <MySearchableSelect\n                  id=\"expense_type_id\"\n                  name=\"expense_type_id\"\n                  options={expenseTypesOptions}\n                  defaultValue={\n                    expense && {\n                      label: expense.expense_type_id.name,\n                      value: expense.expense_type_id.id,\n                    }\n                  }\n                  type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Gəlir-Xərc Növü\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"date\"\n                  name=\"date\"\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Tarix\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"contractor_id\"\n                  id=\"contractor_id\"\n                  options={counterpartiesOptions}\n                  defaultValue={\n                    expense && {\n                      label: expense.contractor_id.name,\n                      value: expense.contractor_id.id,\n                    }\n                  }\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Kontragent\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"document_id\"\n                  id=\"document_id\"\n                  // type=\"text\"\n                  defaultValue={\n                    expense && {\n                      label: expense.document_id.document_number,\n                      value: expense.document_id.id,\n                    }\n                  }\n                  options={docsOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Müqavilə\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"operation_id\"\n                  id=\"operation_id\"\n                  // type=\"text\"\n                  options={operationTypeOptions}\n                  defaultValue={\n                    expense &&\n                    operationTypeOptions.filter(\n                      (operationTypeOption) =>\n                        expense.operation_id === operationTypeOption.value\n                    )\n                  }\n                  // className=\"form-control\"\n                  placeholder=\"Əməliyyat növü\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"payment_id\"\n                  id=\"payment_id\"\n                  // type=\"text\"\n                  options={paymentOptions}\n                  defaultValue={\n                    expense &&\n                    paymentOptions.filter(\n                      (paymentOption) =>\n                        expense.payment_id === paymentOption.value\n                    )\n                  }\n                  // className=\"form-control\"\n                  placeholder=\"Ödəniş\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"payment_type_id\"\n                  id=\"payment_type_id\"\n                  // type=\"text\"\n                  options={paymentTypeOptions}\n                  defaultValue={\n                    expense &&\n                    paymentTypeOptions.filter(\n                      (paymentTypeOption) =>\n                        expense.payment_type_id === paymentTypeOption.value\n                    )\n                  }\n                  // className=\"form-control\"\n                  placeholder=\"Ödəniş növü\"\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  name=\"faktura\"\n                  id=\"faktura\"\n                  // type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Hesab faktura\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/ControlSystemPageModal.jsx",["916","917","918","919"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport MySearchableSelect from \"../../../../app/common/form/MySearchableSelect\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport {\n  createControlSystem,\n  updateControlSystem,\n} from \"./controlSystemActions\";\nimport { loadSignOfLegalAct } from \"../../settings/signOfLegalAct/signOfLegalActActions\";\nimport { loadLab } from \"../../labPage/labActions\";\n\nexport default function ControlSystemPageModal({ controlSystem }) {\n  useEffect(() => {\n    dispatch(loadSignOfLegalAct());\n    dispatch(loadLab());\n  }, []);\n  const snCodeOptions = [\n    { value: \"1\", label: \"01\" },\n    { value: \"2\", label: \"02\" },\n    { value: \"3\", label: \"03\" },\n  ];\n\n  const productNoteOptions = [\n    { value: \"1\", label: \"Ərzaq\" },\n    { value: \"2\", label: \"Qeyri-ərzaq\" },\n    { value: \"3\", label: \"Şərab məhsulu\" },\n    { value: \"4\", label: \"Tikinti materialı\" },\n    { value: \"5\", label: \"Rabitə vasitəsi\" },\n    { value: \"6\", label: \"Ehtiyat hissəsi\" },\n    { value: \"6\", label: \"Digər\" },\n  ];\n\n  const allCountriesListOptions = [\n    { label: \"Albania\", value: \"AL\" },\n    { label: \"Åland Islands\", value: \"AX\" },\n    { label: \"Algeria\", value: \"DZ\" },\n    { label: \"American Samoa\", value: \"AS\" },\n    { label: \"Andorra\", value: \"AD\" },\n    { label: \"Angola\", value: \"AO\" },\n    { label: \"Anguilla\", value: \"AI\" },\n    { label: \"Antarctica\", value: \"AQ\" },\n    { label: \"Antigua and Barbuda\", value: \"AG\" },\n    { label: \"Argentina\", value: \"AR\" },\n    { label: \"Armenia\", value: \"AM\" },\n    { label: \"Aruba\", value: \"AW\" },\n    { label: \"Australia\", value: \"AU\" },\n    { label: \"Austria\", value: \"AT\" },\n    { label: \"Azerbaijan\", value: \"AZ\" },\n    { label: \"Bahamas (the)\", value: \"BS\" },\n    { label: \"Bahrain\", value: \"BH\" },\n    { label: \"Bangladesh\", value: \"BD\" },\n    { label: \"Barbados\", value: \"BB\" },\n    { label: \"Belarus\", value: \"BY\" },\n    { label: \"Belgium\", value: \"BE\" },\n    { label: \"Belize\", value: \"BZ\" },\n    { label: \"Benin\", value: \"BJ\" },\n    { label: \"Bermuda\", value: \"BM\" },\n    { label: \"Bhutan\", value: \"BT\" },\n    { label: \"Bolivia (Plurinational State of)\", value: \"BO\" },\n    { label: \"Bonaire, Sint Eustatius and Saba\", value: \"BQ\" },\n    { label: \"Bosnia and Herzegovina\", value: \"BA\" },\n    { label: \"Botswana\", value: \"BW\" },\n    { label: \"Bouvet Island\", value: \"BV\" },\n    { label: \"Brazil\", value: \"BR\" },\n    { label: \"British Indian Ocean Territory (the)\", value: \"IO\" },\n    { label: \"Brunei Darussalam\", value: \"BN\" },\n    { label: \"Bulgaria\", value: \"BG\" },\n    { label: \"Burkina Faso\", value: \"BF\" },\n    { label: \"Burundi\", value: \"BI\" },\n    { label: \"Cabo Verde\", value: \"CV\" },\n    { label: \"Cambodia\", value: \"KH\" },\n    { label: \"Cameroon\", value: \"CM\" },\n    { label: \"Canada\", value: \"CA\" },\n    { label: \"Cayman Islands (the)\", value: \"KY\" },\n    { label: \"Central African Republic (the)\", value: \"CF\" },\n    { label: \"Chad\", value: \"TD\" },\n    { label: \"Chile\", value: \"CL\" },\n    { label: \"China\", value: \"CN\" },\n    { label: \"Christmas Island\", value: \"CX\" },\n    { label: \"Cocos (Keeling) Islands (the)\", value: \"CC\" },\n    { label: \"Colombia\", value: \"CO\" },\n    { label: \"Comoros (the)\", value: \"KM\" },\n    { label: \"Congo (the Democratic Republic of the)\", value: \"CD\" },\n    { label: \"Congo (the)\", value: \"CG\" },\n    { label: \"Cook Islands (the)\", value: \"CK\" },\n    { label: \"Costa Rica\", value: \"CR\" },\n    { label: \"Croatia\", value: \"HR\" },\n    { label: \"Cuba\", value: \"CU\" },\n    { label: \"Curaçao\", value: \"CW\" },\n    { label: \"Cyprus\", value: \"CY\" },\n    { label: \"Czechia\", value: \"CZ\" },\n    { label: \"Côte d'Ivoire\", value: \"CI\" },\n    { label: \"Denmark\", value: \"DK\" },\n    { label: \"Djibouti\", value: \"DJ\" },\n    { label: \"Dominica\", value: \"DM\" },\n    { label: \"Dominican Republic (the)\", value: \"DO\" },\n    { label: \"Ecuador\", value: \"EC\" },\n    { label: \"Egypt\", value: \"EG\" },\n    { label: \"El Salvador\", value: \"SV\" },\n    { label: \"Equatorial Guinea\", value: \"GQ\" },\n    { label: \"Eritrea\", value: \"ER\" },\n    { label: \"Estonia\", value: \"EE\" },\n    { label: \"Eswatini\", value: \"SZ\" },\n    { label: \"Ethiopia\", value: \"ET\" },\n    { label: \"Falkland Islands (the) [Malvinas]\", value: \"FK\" },\n    { label: \"Faroe Islands (the)\", value: \"FO\" },\n    { label: \"Fiji\", value: \"FJ\" },\n    { label: \"Finland\", value: \"FI\" },\n    { label: \"France\", value: \"FR\" },\n    { label: \"French Guiana\", value: \"GF\" },\n    { label: \"French Polynesia\", value: \"PF\" },\n    { label: \"French Southern Territories (the)\", value: \"TF\" },\n    { label: \"Gabon\", value: \"GA\" },\n    { label: \"Gambia (the)\", value: \"GM\" },\n    { label: \"Georgia\", value: \"GE\" },\n    { label: \"Germany\", value: \"DE\" },\n    { label: \"Ghana\", value: \"GH\" },\n    { label: \"Gibraltar\", value: \"GI\" },\n    { label: \"Greece\", value: \"GR\" },\n    { label: \"Greenland\", value: \"GL\" },\n    { label: \"Grenada\", value: \"GD\" },\n    { label: \"Guadeloupe\", value: \"GP\" },\n    { label: \"Guam\", value: \"GU\" },\n    { label: \"Guatemala\", value: \"GT\" },\n    { label: \"Guernsey\", value: \"GG\" },\n    { label: \"Guinea\", value: \"GN\" },\n    { label: \"Guinea-Bissau\", value: \"GW\" },\n    { label: \"Guyana\", value: \"GY\" },\n    { label: \"Haiti\", value: \"HT\" },\n    { label: \"Heard Island and McDonald Islands\", value: \"HM\" },\n    { label: \"Holy See (the)\", value: \"VA\" },\n    { label: \"Honduras\", value: \"HN\" },\n    { label: \"Hong Kong\", value: \"HK\" },\n    { label: \"Hungary\", value: \"HU\" },\n    { label: \"Iceland\", value: \"IS\" },\n    { label: \"India\", value: \"IN\" },\n    { label: \"Indonesia\", value: \"ID\" },\n    { label: \"Iran (Islamic Republic of)\", value: \"IR\" },\n    { label: \"Iraq\", value: \"IQ\" },\n    { label: \"Ireland\", value: \"IE\" },\n    { label: \"Isle of Man\", value: \"IM\" },\n    { label: \"Israel\", value: \"IL\" },\n    { label: \"Italy\", value: \"IT\" },\n    { label: \"Jamaica\", value: \"JM\" },\n    { label: \"Japan\", value: \"JP\" },\n    { label: \"Jersey\", value: \"JE\" },\n    { label: \"Jordan\", value: \"JO\" },\n    { label: \"Kazakhstan\", value: \"KZ\" },\n    { label: \"Kenya\", value: \"KE\" },\n    { label: \"Kiribati\", value: \"KI\" },\n    { label: \"Korea (the Democratic People's Republic of)\", value: \"KP\" },\n    { label: \"Korea (the Republic of)\", value: \"KR\" },\n    { label: \"Kuwait\", value: \"KW\" },\n    { label: \"Kyrgyzstan\", value: \"KG\" },\n    { label: \"Lao People's Democratic Republic (the)\", value: \"LA\" },\n    { label: \"Latvia\", value: \"LV\" },\n    { label: \"Lebanon\", value: \"LB\" },\n    { label: \"Lesotho\", value: \"LS\" },\n    { label: \"Liberia\", value: \"LR\" },\n    { label: \"Libya\", value: \"LY\" },\n    { label: \"Liechtenstein\", value: \"LI\" },\n    { label: \"Lithuania\", value: \"LT\" },\n    { label: \"Luxembourg\", value: \"LU\" },\n    { label: \"Macao\", value: \"MO\" },\n    { label: \"Madagascar\", value: \"MG\" },\n    { label: \"Malawi\", value: \"MW\" },\n    { label: \"Malaysia\", value: \"MY\" },\n    { label: \"Maldives\", value: \"MV\" },\n    { label: \"Mali\", value: \"ML\" },\n    { label: \"Malta\", value: \"MT\" },\n    { label: \"Marshall Islands (the)\", value: \"MH\" },\n    { label: \"Martinique\", value: \"MQ\" },\n    { label: \"Mauritania\", value: \"MR\" },\n    { label: \"Mauritius\", value: \"MU\" },\n    { label: \"Mayotte\", value: \"YT\" },\n    { label: \"Mexico\", value: \"MX\" },\n    { label: \"Micronesia (Federated States of)\", value: \"FM\" },\n    { label: \"Moldova (the Republic of)\", value: \"MD\" },\n    { label: \"Monaco\", value: \"MC\" },\n    { label: \"Mongolia\", value: \"MN\" },\n    { label: \"Montenegro\", value: \"ME\" },\n    { label: \"Montserrat\", value: \"MS\" },\n    { label: \"Morocco\", value: \"MA\" },\n    { label: \"Mozambique\", value: \"MZ\" },\n    { label: \"Myanmar\", value: \"MM\" },\n    { label: \"Namibia\", value: \"NA\" },\n    { label: \"Nauru\", value: \"NR\" },\n    { label: \"Nepal\", value: \"NP\" },\n    { label: \"Netherlands (the)\", value: \"NL\" },\n    { label: \"New Caledonia\", value: \"NC\" },\n    { label: \"New Zealand\", value: \"NZ\" },\n    { label: \"Nicaragua\", value: \"NI\" },\n    { label: \"Niger (the)\", value: \"NE\" },\n    { label: \"Nigeria\", value: \"NG\" },\n    { label: \"Niue\", value: \"NU\" },\n    { label: \"Norfolk Island\", value: \"NF\" },\n    { label: \"Northern Mariana Islands (the)\", value: \"MP\" },\n    { label: \"Norway\", value: \"NO\" },\n    { label: \"Oman\", value: \"OM\" },\n    { label: \"Pakistan\", value: \"PK\" },\n    { label: \"Palau\", value: \"PW\" },\n    { label: \"Palestine, State of\", value: \"PS\" },\n    { label: \"Panama\", value: \"PA\" },\n    { label: \"Papua New Guinea\", value: \"PG\" },\n    { label: \"Paraguay\", value: \"PY\" },\n    { label: \"Peru\", value: \"PE\" },\n    { label: \"Philippines (the)\", value: \"PH\" },\n    { label: \"Pitcairn\", value: \"PN\" },\n    { label: \"Poland\", value: \"PL\" },\n    { label: \"Portugal\", value: \"PT\" },\n    { label: \"Puerto Rico\", value: \"PR\" },\n    { label: \"Qatar\", value: \"QA\" },\n    { label: \"Republic of North Macedonia\", value: \"MK\" },\n    { label: \"Romania\", value: \"RO\" },\n    { label: \"Russian Federation (the)\", value: \"RU\" },\n    { label: \"Rwanda\", value: \"RW\" },\n    { label: \"Réunion\", value: \"RE\" },\n    { label: \"Saint Barthélemy\", value: \"BL\" },\n    { label: \"Saint Helena, Ascension and Tristan da Cunha\", value: \"SH\" },\n    { label: \"Saint Kitts and Nevis\", value: \"KN\" },\n    { label: \"Saint Lucia\", value: \"LC\" },\n    { label: \"Saint Martin (French part)\", value: \"MF\" },\n    { label: \"Saint Pierre and Miquelon\", value: \"PM\" },\n    { label: \"Saint Vincent and the Grenadines\", value: \"VC\" },\n    { label: \"Samoa\", value: \"WS\" },\n    { label: \"San Marino\", value: \"SM\" },\n    { label: \"Sao Tome and Principe\", value: \"ST\" },\n    { label: \"Saudi Arabia\", value: \"SA\" },\n    { label: \"Senegal\", value: \"SN\" },\n    { label: \"Serbia\", value: \"RS\" },\n    { label: \"Seychelles\", value: \"SC\" },\n    { label: \"Sierra Leone\", value: \"SL\" },\n    { label: \"Singapore\", value: \"SG\" },\n    { label: \"Sint Maarten (Dutch part)\", value: \"SX\" },\n    { label: \"Slovakia\", value: \"SK\" },\n    { label: \"Slovenia\", value: \"SI\" },\n    { label: \"Solomon Islands\", value: \"SB\" },\n    { label: \"Somalia\", value: \"SO\" },\n    { label: \"South Africa\", value: \"ZA\" },\n    { label: \"South Georgia and the South Sandwich Islands\", value: \"GS\" },\n    { label: \"South Sudan\", value: \"SS\" },\n    { label: \"Spain\", value: \"ES\" },\n    { label: \"Sri Lanka\", value: \"LK\" },\n    { label: \"Sudan (the)\", value: \"SD\" },\n    { label: \"Surilabel\", value: \"SR\" },\n    { label: \"Svalbard and Jan Mayen\", value: \"SJ\" },\n    { label: \"Sweden\", value: \"SE\" },\n    { label: \"Switzerland\", value: \"CH\" },\n    { label: \"Syrian Arab Republic\", value: \"SY\" },\n    { label: \"Taiwan (Province of China)\", value: \"TW\" },\n    { label: \"Tajikistan\", value: \"TJ\" },\n    { label: \"Tanzania, United Republic of\", value: \"TZ\" },\n    { label: \"Thailand\", value: \"TH\" },\n    { label: \"Timor-Leste\", value: \"TL\" },\n    { label: \"Togo\", value: \"TG\" },\n    { label: \"Tokelau\", value: \"TK\" },\n    { label: \"Tonga\", value: \"TO\" },\n    { label: \"Trinidad and Tobago\", value: \"TT\" },\n    { label: \"Tunisia\", value: \"TN\" },\n    { label: \"Turkey\", value: \"TR\" },\n    { label: \"Turkmenistan\", value: \"TM\" },\n    { label: \"Turks and Caicos Islands (the)\", value: \"TC\" },\n    { label: \"Tuvalu\", value: \"TV\" },\n    { label: \"Uganda\", value: \"UG\" },\n    { label: \"Ukraine\", value: \"UA\" },\n    { label: \"United Arab Emirates (the)\", value: \"AE\" },\n    {\n      label: \"United Kingdom of Great Britain and Northern Ireland (the)\",\n      value: \"GB\",\n    },\n    { label: \"United States Minor Outlying Islands (the)\", value: \"UM\" },\n    { label: \"United States of America (the)\", value: \"US\" },\n    { label: \"Uruguay\", value: \"UY\" },\n    { label: \"Uzbekistan\", value: \"UZ\" },\n    { label: \"Vanuatu\", value: \"VU\" },\n    { label: \"Venezuela (Bolivarian Republic of)\", value: \"VE\" },\n    { label: \"Viet Nam\", value: \"VN\" },\n    { label: \"Virgin Islands (British)\", value: \"VG\" },\n    { label: \"Virgin Islands (U.S.)\", value: \"VI\" },\n    { label: \"Wallis and Futuna\", value: \"WF\" },\n    { label: \"Western Sahara\", value: \"EH\" },\n    { label: \"Yemen\", value: \"YE\" },\n    { label: \"Zambia\", value: \"ZM\" },\n    { label: \"Zimbabwe\", value: \"ZW\" },\n  ];\n  const recognitionProcessNoteOptions = [\n    { value: \"1\", label: \"Aparılıb\" },\n    { value: \"2\", label: \"Aparılmayıb\" },\n  ];\n  const dispatch = useDispatch();\n  // ++++++++++++++\n  const { signOfLegalActs } = useSelector((state) => state.signOfLegalActs);\n  const signOfLegalActOptions =\n    signOfLegalActs &&\n    signOfLegalActs.map((signOfLegalAct) => {\n      return {\n        label: signOfLegalAct.signOfLegalActName,\n        value: signOfLegalAct.id,\n      };\n    });\n  // ++++++++++++++\n  const { labs } = useSelector((state) => state.labs);\n  const accreditedLaboratoryNameOptions =\n    labs &&\n    labs.map((lab) => {\n      return {\n        label: lab.labName,\n        value: lab.id,\n      };\n    });\n  // ++++++++++++++\n\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = controlSystem\n    ? controlSystem\n    : {\n        id: \"\",\n        snCode: \"\",\n        registrationNumber: \"\",\n        blankNumber: \"\",\n        accreditationNumber: \"\",\n        certificateIssueDate: \"\",\n        certificateExpirationDate: \"\",\n        businessEntityName: \"\",\n        legalStatus: \"\",\n        VOEN: \"\",\n        economicEntityPhoneNumber: \"\",\n        legalAddressOfTheBusinessEntity: \"\",\n        actualAddressOfTheBusiness: \"\",\n        nameOfTheProduct: \"\",\n        productCode: \"\",\n        signOfLegalAct: \"\",\n        recognitionProcessNote: \"\",\n        testQuantity: \"\",\n        productBatchHistory: \"\",\n        note:\"\"\n      };\n  const validationSchema = Yup.object({\n    // id:\"\",\n\n    snCode: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    registrationNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    blankNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    accreditationNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    certificateIssueDate: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    certificateExpirationDate: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    businessEntityName: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    nameOfTheProduct: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    productCode: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    signOfLegalAct: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    certificateIsRecognized: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    recognitionProcessNote: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    testQuantity: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    productBatchHistory: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={controlSystem ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            controlSystem\n              ? await dispatch(updateControlSystem(values))\n              : await dispatch(\n                  createControlSystem({\n                    ...values,\n                    id: cuid(),\n                    labNumber: `Lab${cuid()}`,\n                  })\n                );\n            setSubmitting(false);\n            controlSystem\n              ? toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\")\n              : toast.success(\"Uğurla əlavə edildi\");\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row mb-4\">\n              <div className=\"col-md-12 mb-4\">\n                <MySearchableSelect\n                  id=\"snCode\"\n                  name=\"snCode\"\n                  type=\"text\"\n                  options={snCodeOptions}\n                  placeholder=\"SN kodu daxil edin\"\n                  label=\"SN kodu\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"registrationNumber\"\n                  name=\"registrationNumber\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Reyestr nömrəsi daxil edin\"\n                  label=\"Reyestr nömrəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"blankNumber\"\n                  name=\"blankNumber\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Blank nömrəsi daxil edin\"\n                  label=\"Blank nömrəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"accreditationNumber\"\n                  name=\"accreditationNumber\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Akkreditasiya sahəsində sıra nömrəsi daxil edin\"\n                  label=\"Akkreditasiya sahəsində sıra nömrəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"certificateIssueDate\"\n                  name=\"certificateIssueDate\"\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Sertifikatın verilmə tarixi daxil edin\"\n                  label=\"Sertifikatın verilmə tarixi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"certificateExpirationDate\"\n                  name=\"certificateExpirationDate\"\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Sertifikatın qüvvədən düşdüyü tarix daxil edin\"\n                  label=\"Sertifikatın qüvvədən düşdüyü tarix\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"businessEntityName\"\n                  name=\"businessEntityName\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sertifikat təqdim edilən təsərrüfat subyektinin adını daxil edin\"\n                  label=\"Sertifikat təqdim edilən təsərrüfat subyektinin adı\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"legalStatus\"\n                  name=\"legalStatus\"\n                  type=\"text\"\n                  readOnly\n                  className=\"form-control\"\n                  placeholder=\"Hüquqi statusunu daxil edin\"\n                  label=\"Hüquqi statusu\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"VOEN\"\n                  name=\"VOEN\"\n                  type=\"text\"\n                  readOnly\n                  className=\"form-control\"\n                  placeholder=\"VÖEN daxil edin\"\n                  label=\"VÖEN\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"economicEntityPhoneNumber\"\n                  name=\"economicEntityPhoneNumber\"\n                  type=\"text\"\n                  readOnly\n                  className=\"form-control\"\n                  placeholder=\"Təsərrüfat subyektinin rəhbərinin telefon nömrəsini daxil edin\"\n                  label=\"Təsərrüfat subyektinin rəhbərinin telefon nömrəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"legalAddressOfTheBusinessEntity\"\n                  name=\"legalAddressOfTheBusinessEntity\"\n                  type=\"text\"\n                  readOnly\n                  className=\"form-control\"\n                  placeholder=\"Sertifikat təqdim edilən təsərrüfat subyektinin hüquqi ünvanını daxil edin\"\n                  label=\"Sertifikat təqdim edilən təsərrüfat subyektinin hüquqi ünvanı\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"actualAddressOfTheBusiness\"\n                  name=\"actualAddressOfTheBusiness\"\n                  type=\"text\"\n                  readOnly\n                  className=\"form-control\"\n                  placeholder=\"Sertifikat təqdim edilən təsərrüfat subyektinin faktiki ünvanını daxil edin\"\n                  label=\"Sertifikat təqdim edilən təsərrüfat subyektinin faktiki ünvanı\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"nameOfTheProduct\"\n                  name=\"nameOfTheProduct\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Məhsulun(xidmətin) adını daxil edin\"\n                  label=\"Məhsulun(xidmətin) adı\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"productCode\"\n                  name=\"productCode\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Məhsulun kodunu daxil edin\"\n                  label=\"Məhsulun kodu\"\n                />\n              </div>\n\n              <div className=\"col-md-12 mb-4\">\n                <MySearchableSelect\n                  id=\"signOfLegalAct\"\n                  name=\"signOfLegalAct\"\n                  isMulti\n                  type=\"text\"\n                  options={signOfLegalActOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Hüquqi normativ texniki aktın işarəsini daxil edin\"\n                  label=\"Hüquqi normativ texniki aktın işarəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MySearchableSelect\n                  id=\"recognitionProcessNote\"\n                  name=\"recognitionProcessNote\"\n                  type=\"text\"\n                  options={recognitionProcessNoteOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Tanınma prosesində auditin aparılması haqqında qeydi daxil edin\"\n                  label=\"Tanınma prosesində auditin aparılması haqqında qeyd\"\n                />\n              </div>\n\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"testQuantity\"\n                  name=\"testQuantity\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Aparılmış sınaqların miqdarını edin\"\n                  label=\"Aparılmış sınaqların miqdarı\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"productBatchHistory\"\n                  name=\"productBatchHistory\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Məhsul partiyasının tarixini edin\"\n                  label=\"Məhsul partiyasının tarixi\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/EmployeesModal.jsx",["920","921","922"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createEmployees, updateEmployees } from \"./employeesActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport { loadDuties } from \"../settings/duty/dutyActions\";\nimport { loadDepartments } from \"../settings/department/departmentActions\";\n\nexport default function EmployeesModal({ employee }) {\n  const dispatch = useDispatch();\n\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n  useEffect(() => {\n    dispatch(loadDuties());\n    dispatch(loadDepartments());\n  }, []);\n  const { duties } = useSelector((state) => state.duties);\n  const { departments } = useSelector((state) => state.departments);\n  let dutyOptions =\n    duties &&\n    duties.map((duty) => {\n      return {\n        label: duty.name,\n        value: duty.id,\n      };\n    });\n\n  let departmentOptions =\n    departments &&\n    departments.map((department) => {\n      return {\n        label: department.name,\n        value: department.id,\n      };\n    });\n  const contractTypeOptions = [\n    { label: \"Əmək müqaviləsi\", value: 0 },\n    { label: \"Xidmət müqaviləsi\", value: 1 },\n  ];\n  const selectedContractType =\n    employee && employee.agreement_type === 1\n      ? { label: \"Xidmət müqaviləsi\", value: 1 }\n      : { label: \"Əmək müqaviləsi\", value: 0 };\n  const initialValues = employee\n    ? employee\n    : {\n        fin: \"\",\n        name: \"\",\n        surname: \"\",\n        dadname: \"\",\n        birthday: \"\",\n        address: \"\",\n        phone: \"\",\n\n        whatsapp: \"\",\n        telegram: \"\",\n        facebook: \"\",\n        linkedin: \"\",\n        twitter: \"\",\n        instagram: \"\",\n        mail: \"\",\n\n        position_id: \"\",\n        structural_section_id: \"\",\n        date: \"\",\n        turnover: \"\",\n        bonus: \"\",\n        customer_satisfaction: \"\",\n        performans: \"\",\n        agreement_type: \"\",\n      };\n\n  const validationSchema = Yup.object({\n    fin: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    surname: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    dadname: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    birthday: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    address: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    phone: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n    whatsapp: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    telegram: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    facebook: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    linkedin: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    twitter: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    instagram: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    mail: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n    position_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    structural_section_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    date: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    turnover: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    bonus: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    customer_satisfaction: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    performans: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    agreement_type: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n  return (\n    <ModalWrapper size=\"modal-lg\" header={employee ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            employee\n              ? await dispatch(updateEmployees(values))\n              : await dispatch(createEmployees({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"fim\"\n                  name=\"fin\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"FİN\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Ad\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"surname\"\n                  name=\"surname\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Soyad\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"dadname\"\n                  name=\"dadname\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Ata adı\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"birthday\"\n                  id=\"birthday\"\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Doğum tarixi\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"address\"\n                  id=\"address\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Ünvan\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"phone\"\n                  id=\"phone\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Telefon\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"whatsapp\"\n                  id=\"whatsapp\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Whatsapp\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"telegram\"\n                  id=\"telegram\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Telegram\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"facebook\"\n                  id=\"facebook\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Facebook\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"linkedin\"\n                  id=\"linkedin\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Linkedin\"\n                />\n              </div>{\" \"}\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"twitter\"\n                  id=\"twitter\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Twitter\"\n                />\n              </div>{\" \"}\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"instagram\"\n                  id=\"instagram\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Instagram\"\n                />\n              </div>{\" \"}\n              <div className=\"col-md-8\">\n                <MyTextInput\n                  name=\"mail\"\n                  id=\"mail\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Mail\"\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"position_id\"\n                  id=\"position_id\"\n                  options={dutyOptions}\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Vəzifəsi\"\n                  defaultValue={\n                    employee && {\n                      label: employee.position_id.name,\n                      value: employee.position_id.id,\n                    }\n                  }\n                />\n              </div>\n              <div className=\"col-md-8\">\n                <MySearchableSelect\n                  name=\"structural_section_id\"\n                  id=\"structural_section_id\"\n                  options={departmentOptions}\n                  defaultValue={\n                    employee && {\n                      label: employee.structural_section_id.name,\n                      value: employee.structural_section_id.id,\n                    }\n                  }\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Struktur bölməsi\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"date\"\n                  id=\"date\"\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"İşə qəbul tarixi\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"turnover\"\n                  id=\"turnover\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Dövriyyə\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"bonus\"\n                  id=\"bonus\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Bonus\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"customer_satisfaction\"\n                  id=\"customer_satisfaction\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Müştəri məmnuniyyəti\"\n                />\n              </div>{\" \"}\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"performans\"\n                  id=\"performans\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Performans\"\n                />\n              </div>{\" \"}\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"agreement_type\"\n                  id=\"agreement_type\"\n                  options={contractTypeOptions}\n                  defaultValue={selectedContractType}\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Müqavilə növü\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/PersonalPageModal.jsx",["923"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport MySearchableSelect from \"../../../../app/common/form/MySearchableSelect\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createPersonal, updatePersonal } from \"./personalActions\";\nimport { loadSignOfLegalAct } from \"../../settings/signOfLegalAct/signOfLegalActActions\";\nimport { loadLab } from \"../../labPage/labActions\";\n\nexport default function PersonalPageModal({ personal }) {\n  useEffect(() => {\n    dispatch(loadSignOfLegalAct());\n    dispatch(loadLab());\n  }, []);\n  const snCodeOptions = [\n    { value: \"1\", label: \"01\" },\n    { value: \"2\", label: \"02\" },\n    { value: \"3\", label: \"03\" },\n  ];\n\n  const dispatch = useDispatch();\n  // ++++++++++++++\n  const { trainings } = useSelector((state) => state.trainings);\n  const trainingOptions =\n  trainings &&\n  trainings.map((training) => {\n      return {\n        label: training.trainingName,\n        value: training.id,\n      };\n    });\n  // ++++++++++++++\n\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = personal\n    ? personal\n    : {\n        id: cuid(),\n        snCode: \"\",\n        registrationNumber: \"\",\n        blankNumber: \"\",\n        accreditationNumber: \"\",\n        certificateIssueDate: \"\",\n        certificateExpirationDate: \"\",\n        participantName: \"\",\n        instructorName: \"\",\n        training: \"\",\n        skill: [],\n        productCode: \"\",\n        signOfDocument: \"\",\n        note: \"\",\n      };\n  const validationSchema = Yup.object({\n    // id:\"\",\n    snCode: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    registrationNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    blankNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    accreditationNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    certificateIssueDate: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    certificateExpirationDate: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    participantName: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    instructorName: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    training: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    productCode: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    signOfDocument: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={personal ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            personal\n              ? await dispatch(updatePersonal(values))\n              : await dispatch(\n                  createPersonal({\n                    ...values,\n                    id: cuid(),\n                    labNumber: `Lab${cuid()}`,\n                  })\n                );\n            setSubmitting(false);\n            personal\n              ? toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\")\n              : toast.success(\"Uğurla əlavə edildi\");\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row mb-4\">\n              <div className=\"col-md-12 mb-4\">\n                <MySearchableSelect\n                  id=\"snCode\"\n                  name=\"snCode\"\n                  type=\"text\"\n                  options={snCodeOptions}\n                  placeholder=\"SN kodu daxil edin\"\n                  label=\"SN kodu\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"registrationNumber\"\n                  name=\"registrationNumber\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Reyestr nömrəsi daxil edin\"\n                  label=\"Reyestr nömrəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"blankNumber\"\n                  name=\"blankNumber\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Blank nömrəsi daxil edin\"\n                  label=\"Blank nömrəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"accreditationNumber\"\n                  name=\"accreditationNumber\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Akkreditasiya sahəsində sıra nömrəsi daxil edin\"\n                  label=\"Akkreditasiya sahəsində sıra nömrəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"certificateIssueDate\"\n                  name=\"certificateIssueDate\"\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Sertifikatın verilmə tarixi daxil edin\"\n                  label=\"Sertifikatın verilmə tarixi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"certificateExpirationDate\"\n                  name=\"certificateExpirationDate\"\n                  type=\"date\"\n                  className=\"form-control\"\n                  placeholder=\"Sertifikatın qüvvədən düşdüyü tarix daxil edin\"\n                  label=\"Sertifikatın qüvvədən düşdüyü tarix\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"participantName\"\n                  name=\"participantName\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"İştirakçı adını daxil edin\"\n                  label=\"İştirakçı adı\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"instructorName\"\n                  name=\"instructorName\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Təlimçinin adını daxil edin\"\n                  label=\"Təlimçinin adı\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MySearchableSelect\n                  id=\"training\"\n                  name=\"training\"\n                  options={trainingOptions}\n                  type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Təlimin adın daxil edin\"\n                  label=\"Təlimin adı\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"skill\"\n                  name=\"skill\"\n                  type=\"text\"\n                  readOnly\n                  className=\"form-control\"\n                  placeholder=\"Səriştələr\"\n                  label=\"Səriştələr\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"productCode\"\n                  name=\"productCode\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Məhsulun kodunu daxil edin\"\n                  label=\"Məhsulun kodu\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"signOfDocument\"\n                  name=\"signOfDocument\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Normativ sənədin işarəsini daxil edin\"\n                  label=\"Normativ sənədin işarəsi\"\n                />\n              </div>\n              <div className=\"col-md-12 mb-4\">\n                <MyTextInput\n                  id=\"note\"\n                  name=\"note\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Qeyd daxil edin\"\n                  label=\"Qeyd\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/DocPageModal.jsx",["924","925"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport { createDoc, updateDoc } from \"./docActions\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\n\nexport default function DocPageModal({ doc }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n  const { documentTypes } = useSelector((state) => state.documentTypes);\n  let documentTypesOptions = documentTypes.map((documentType) => {\n    return {\n      label: documentType.name,\n      value: documentType.id,\n    };\n  });\n  const docPurposeSettings = [\n    { label: \"Alış\", value: 0 },\n    { label: \"Satış\", value: 1 },\n  ];\n  const initialValues = doc\n    ? doc\n    : {\n        document_type_id: \"\",\n        document_for: \"\",\n        date: \"\",\n        about: \"\",\n      };\n  const validationSchema = Yup.object({\n    // id:\"\",\n    // id:\"\",\n    document_type_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // docNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    document_for: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    date: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    about: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={doc ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            doc\n              ? await dispatch(updateDoc(values))\n              : await dispatch(createDoc({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  id=\"document_type_id\"\n                  name=\"document_type_id\"\n                  options={documentTypesOptions}\n                  defaultValue={\n                    doc && {\n                      label: doc.document_type_id.name,\n                      value: doc.document_type_id.id,\n                    }\n                  }\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Sənəd növü\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  id=\"document_for\"\n                  name=\"document_for\"\n                  options={docPurposeSettings}\n                  defaultValue={\n                    doc &&\n                    docPurposeSettings.filter(\n                      (docPurposeSetting) =>\n                        doc.document_for === docPurposeSetting.value\n                    )\n                  }\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Sənədin təyinatı\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"date\"\n                  name=\"date\"\n                  className=\"form-control\"\n                  type=\"date\"\n                  // className=\"form-control\"\n                  placeholder=\"Sənəd tarixi\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextArea\n                  id=\"about\"\n                  name=\"about\"\n                  // type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sənəd predmeti\"\n                />\n              </div>\n            </div>\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MyTextInput.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/app/modal/ModalWrapper.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MySearchableSelect.jsx",["926","927"],"import React from \"react\";\nimport { useField } from \"formik\";\nimport Select from \"react-select\";\nexport default function MySearchableSelect({ label, ...props }) {\n  const [field, meta, helpers, state] = useField(props);\n  const { options } = props;\n\n  const { setValue, setTouched } = helpers;\n  const onChange = (e) => {\n    setValue(Array.isArray(e) ? e.map((x) => x.value) : e.value);\n  };\n  const customStyles1 = {\n    control: (provided, state) => ({\n      ...provided,\n      height: \"auto\",\n      border: \"1px solid #bfc9d4\",\n      color: \"#3b3f5c\",\n      fontSize: \"15px\",\n      //   padding: \"8px 10px\",\n      letterSpacing: \"1px\",\n      height: \"calc(1.4em + 1.4rem + 2px)\",\n      // paddingRight: \"1.25rem\",\n      paddingLeft: \"1.25rem\",\n      // marginTop: \"20.5px\",\n      borderRadius: \"6px\",\n      boxShadow: state.isFocused\n        ? \"0 0 5px 2px rgb(194 213 255 / 62%)!important\"\n        : null,\n      borderColor: state.isFocused ? \"#fe0040!important\" : null,\n    }),\n  };\n\n  return (\n    <React.Fragment>\n      <label>{label}</label>\n      <Select\n        {...props}\n        name={field.name}\n        options={options}\n\n        // value={field.defaultValue}\n        onChange={onChange}\n        styles={customStyles1}\n        onBlur={setTouched}\n        minHeight={\"44px\"}\n        isSearchable=\"true\"\n        // isClearable\n      />\n\n      {meta.touched && meta.error ? (\n        <div className=\"invalid-feedback\">{meta.error}</div>\n      ) : null}\n    </React.Fragment>\n  );\n}","/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MyTextArea.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/mockApi.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDepartments.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataCounterparty.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleData.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataCrm.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDocs.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDuties.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpense.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpenseGroups.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDocumentTypes.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataPersonal.js",["928","929","930"],"import cuid from \"cuid\";\n\nexport const sampleDataPersonal = [\n  {\n    id: cuid(),\n    soCode: \"23\",\n    snCode: \"02\",\n    registrationNumber: \"0045\",\n    blankNumber: \"İDS 000651\",\n    accreditationNumber: \"2\",\n    certificateIssueDate: \"05.01.2018\",\n    certificateExpirationDate: \"05.01.2019\",\n    certificateExpirationDate: \"\",\n    participantName: \"\",\n    instructorName: \"\",\n    training: \"\",\n    skill: [],\n    productCode: \"\",\n    signOfDocument: \"\",\n    note: \"\",\n  },\n  {\n    id: cuid(),\n    soCode: \"23\",\n    snCode: \"02\",\n    registrationNumber: \"0045\",\n    blankNumber: \"İDS 000651\",\n    accreditationNumber: \"2\",\n    certificateIssueDate: \"05.01.2018\",\n    certificateExpirationDate: \"05.01.2019\",\n    certificateExpirationDate: \"\",\n    participantName: \"\",\n    instructorName: \"\",\n    training: \"\",\n    skill: [],\n    productCode: \"\",\n    signOfDocument: \"\",\n    note: \"\",\n\n  },\n  {\n    id: cuid(),\n    soCode: \"23\",\n    snCode: \"02\",\n    registrationNumber: \"0045\",\n    blankNumber: \"İDS 000651\",\n    accreditationNumber: \"2\",\n    certificateIssueDate: \"05.01.2018\",\n    certificateExpirationDate: \"05.01.2019\",\n    certificateExpirationDate: \"05.01.2018\",\n    participantName: \"\",\n    instructorName: \"\",\n    training: \"\",\n    skill: [],\n    productCode: \"\",\n    signOfDocument: \"\",\n    note: \"\",\n\n  },\n];\n","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataTraining.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataSkill.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataSignOfLegalAct.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataProductService.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataReference.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataServiceTypes.js",["931"],"import cuid from \"cuid\";\n\nexport const sampleDataServiceTypes = [\n  {\n    id: 0,\n    serviceTypeName: \"Personal\",\n\n  },\n  {\n    id: 1,\n    serviceTypeName: \"Məhsul Xidmət\",\n\n  },\n  {\n    id: 2,\n    serviceTypeName: \"İdarəetmə sistemləri\",\n\n  },\n];\n","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataOrder.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataLab.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataOrderSource.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpenseTypes.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataControlSystem.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/CrmPage.jsx",["932","933","934"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadEmployees } from \"../employees/employeesActions\";\nimport { loadReference } from \"../settings/reference/referenceActions\";\n\nimport { deleteCrm, loadCrm } from \"./crmActions\";\nexport default function CrmPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadCrm());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { crms , totalCount} = useSelector((state) => state.crms);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = crms;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadCrm({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadCrm({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"CrmPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadReference());\n        dispatch(loadEmployees());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Kurator\",\n      selector: \"curator\",\n      cell:crm =>(\n        <p>{crm.employee_id.name} {crm.employee_id.surname} </p>\n      ),\n      sortable: true,\n\n    },\n    {\n      name: \"Müştəri adı\",\n      selector: \"customer_name\",\n      sortable: true,\n    },\n    {\n      name: \"VÖEN\",\n      selector: \"voen\",\n      sortable: true,\n    },\n    {\n      name: \"Tarix\",\n      selector: \"date\",\n      sortable: true,\n    },\n    {\n      name: \"Əlaqə nömrəsi\",\n      selector: \"customer_phone\",\n      sortable: true,\n    },\n    {\n      name: \"Whatsapp\",\n      selector: \"customer_whatsapp\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (crm) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"CrmPageModal\",\n                  modalProps: { crm },\n                })\n              );\n              dispatch(loadEmployees());\n\n              dispatch(loadReference());\n            }}\n            data-name=\"edit\"\n            id={crm.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${crm.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={crm.id}\n            onClick={() => {\n              dispatch(deleteCrm(crm.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${crm.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN crmPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Müştəri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END crmPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmActions.js",["935","936","937"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataCrm } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport { CREATE_CRM, DELETE_CRM, FETCH_CRM, UPDATE_CRM } from \"./crmConstants\";\nconst url = \"customer\";\nexport function loadCrm(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const crms = await axios.get(`/${url}`, {\n      params: { ...data },\n    });\n    console.log(crms);\n    if (crms.status === 200) {\n      dispatch({\n        type: FETCH_CRM,\n        payload: crms.data.data,\n        totalCount: crms.data.message,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\nexport function listenToCrm(crms) {\n  return {\n    type: FETCH_CRM,\n    payload: crms,\n  };\n}\n\nexport function createCrm(crm) {\n  console.log(crm);\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    const data = await axios.post(`${url}/create`, crm, {\n      withCredentials: true,\n    });\n\n    if (data.status === 201) {\n      toast.success(\"Uğurla əlavə edildi\");\n      dispatch({ type: CREATE_CRM, payload: data.data.data });\n      dispatch(asyncActionFinish());\n    } else {\n      toast.danger(\"Xəta baş verdi, yenidən cəht edin.\");\n    }\n  };\n}\n\nexport function updateCrm(crm) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    console.log(crm);\n    const crmUpdated = await axios.put(`/${url}/update`, crm);\n    if (crmUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_CRM,\n        payload: crmUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteCrm(crmId) {\n  return async function (dispatch) {\n    const crmDeleted = await axios.delete(`/${url}/delete?id=${crmId}`);\n    if (crmDeleted.status === 200) {\n      dispatch({ type: DELETE_CRM, payload: crmId });\n      // dispatch(asyncActionFinish())\n      toast.info(\"Uğurla silindi\");\n    } else {\n      dispatch(asyncActionError());\n    }\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/CrmPageModal.jsx",["938","939","940","941","942","943","944","945","946","947","948"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createCrm, updateCrm } from \"./crmActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\n\nexport default function CrmPageModal({ crm }) {\n  const { employees } = useSelector((state) => state.employees);\n  const { references } = useSelector((state) => state.references);\n  let employeeOptions = [];\n  let referenceOptions = [];\n  const legalStatusOptions = [\n    { label: \"Hüquqi şəxs\", value: parseInt(0) },\n    { label: \"Fiziki şəxs\", value: parseInt(1) },\n    { label: \"Qeyri vergi ödəyicisi fiziki şəxs\", value: parseInt(2) },\n  ];\n  const selectedLegalStatus =\n    crm &&\n    legalStatusOptions.filter(\n      (legalStatusOption) => crm.legal_status_id === legalStatusOption.value\n    );\n  const placeOptions = [\n    { label: \"Hüquqi ünvan\", value: 0 },\n    { label: \"Faktiki ünvan\", value: 1 },\n  ];\n  referenceOptions =\n    references &&\n    references.map((reference) => {\n      return {\n        value: `${reference.id} `,\n        label: `${reference.name}`,\n      };\n    });\n  employeeOptions =\n    employees &&\n    employees.map((employee) => {\n      return {\n        value: `${employee.id}`,\n        label: `${employee.name} ${employee.surname}`,\n      };\n    });\n\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  // dovriyye il uzre\n  const [circulationWithYears, setCirculationWithYears] = useState([\n    { circulationYear: \"\", circulation: \"\" },\n  ]);\n  let mapCirculations = crm\n    ? JSON.parse(crm.circulationByYears)\n    : circulationWithYears;\n  const handleAddCirculationByYear = () => {\n    setCirculationWithYears([\n      ...circulationWithYears,\n      { circulationYear: \"\", circulation: \"\" },\n    ]);\n  };\n  const handleRemoveCirculationByYear = () => {\n    if (circulationWithYears.length > 1) {\n      let lastIndex = circulationWithYears.length - 1;\n      let values = [...circulationWithYears];\n      values.splice(lastIndex, 1);\n      setCirculationWithYears(values);\n    }\n  };\n  /// isciler il uzre\n\n  const [workersYears, setWorkersYears] = useState([\n    { workerYear: \"\", worker: \"\" },\n  ]);\n  let mapWorkersYears = crm ? JSON.parse(crm.workersYears) : workersYears;\n  const handleAddWorkersYear = () => {\n    setWorkersYears([...workersYears, { workerYear: \"\", worker: \"\" }]);\n  };\n  const handleRemoveWorkersYear = () => {\n    if (workersYears.length > 1) {\n      let lastIndex = workersYears.length - 1;\n      let values = [...workersYears];\n      values.splice(lastIndex, 1);\n      setWorkersYears(values);\n    }\n  };\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = crm\n    ? crm\n    : {\n        contact_name: \"\",\n        contact_surname: \"\",\n        contact_dadname: \"\",\n        contact_phone: \"\",\n        contact_whatsapp: \"\",\n        contact_telegram: \"\",\n        contact_facebook: \"\",\n        contact_linkedin: \"\",\n        contact_twitter: \"\",\n        contact_instagram: \"\",\n        contact_mail: \"\",\n\n        employee_id: \"\",\n        legal_status_id: \"\",\n        customer_name: \"\",\n        voen: \"\",\n        date: \"\",\n\n        // logo: \"\",\n        legal_adress: \"\",\n        actual_adress: \"\",\n        customer_phone: \"\",\n        customer_email: \"\",\n        customer_linkedin: \"\",\n        customer_twitter: \"\",\n        customer_instagram: \"\",\n        customer_website: \"\",\n        customer_whatsapp: \"\",\n        customer_telegram: \"\",\n        customer_facebook: \"\",\n\n        referans_id: \"\",\n        customer_category: \"\",\n        customer_satisfaction: \"\",\n        turnover: \"\",\n        circulationByYears: circulationWithYears,\n        workersYears: workersYears,\n        note: \"\",\n      };\n  const validationSchema = Yup.object({\n    // employee_id: Yup.string().required(\"Mutuel doldurulmalıdır.\"),\n    // customerCode: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // voen: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // date: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // // logo: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // legal_adress: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // actual_adress: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_phone: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_website: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // whatsapp: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // telegram: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // facebook: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // linkedin: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // twitter: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // instagram: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_email: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // referans_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // circulation: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_category: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_satisfaction: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // note: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-xl\" header={crm ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            crm\n              ? await dispatch(\n                  updateCrm({\n                    ...values,\n                    employee_id: values.employee_id.id,\n                    referans_id: values.referans_id.id,\n                  })\n                )\n              : await dispatch(createCrm({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div id=\"iconsAccordion\" className=\"accordion-icons\">\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingOne3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionOne\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionOne\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-user\"\n                        >\n                          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                          <circle cx={12} cy={7} r={4} />\n                        </svg>\n                      </div>\n                      Kontakt şəxs haqqında məlumatlar\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionOne\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingOne3\"\n                  data-parent=\"#iconsAccordion\"\n                  style={{}}\n                >\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"contact_name\"\n                          name=\"contact_name\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Ad\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"contact_surname\"\n                          name=\"contact_surname\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Soyad\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"contact_dadname\"\n                          name=\"contact_dadname\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Ata adı\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_phone\"\n                          id=\"contact_phone\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Telefon\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_whatsapp\"\n                          id=\"contact_whatsapp\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Whatsapp\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_telegram\"\n                          id=\"contact_telegram\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Telegram\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_facebook\"\n                          id=\"contact_facebook\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Facebook\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_linkedin\"\n                          id=\"contact_linkedin\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Linkedin\"\n                        />\n                      </div>{\" \"}\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_twitter\"\n                          id=\"contact_twitter\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Twitter\"\n                        />\n                      </div>{\" \"}\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_instagram\"\n                          id=\"contact_instagram\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Instagram\"\n                        />\n                      </div>{\" \"}\n                      <div className=\"col-md-8\">\n                        <MyTextInput\n                          name=\"contact_mail\"\n                          id=\"contact_mail\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Mail\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingTwo3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionTwo\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionTwo\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-box\"\n                        >\n                          <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\" />\n                          <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\" />\n                          <line x1={12} y1=\"22.08\" x2={12} y2={12} />\n                        </svg>\n                      </div>\n                      Crm haqqında məlumatlar\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionTwo\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingTwo3\"\n                  data-parent=\"#iconsAccordion\"\n                >\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"employee_id\"\n                          id=\"employee_id\"\n                          type=\"text\"\n                          options={employeeOptions}\n                          // className=\"form-control\"\n                          defaultValue={\n                            crm && {\n                              label: `${crm.employee_id.name} ${crm.employee_id.surname}`,\n                              value: parseInt(crm.employee_id.id),\n                            }\n                          }\n                          placeholder=\"Kurator\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"legal_status_id\"\n                          labe\n                          id=\"legal_status_id\"\n                          type=\"text\"\n                          options={legalStatusOptions}\n                          defaultValue={crm && selectedLegalStatus[0]}\n                          // className=\"form-control\"\n                          placeholder=\"Hüquqi status\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"customer_name\"\n                          name=\"customer_name\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Müştəri adı\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          id=\"voen\"\n                          name=\"voen\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"VÖEN\"\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"date\"\n                          id=\"date\"\n                          type=\"date\"\n                          className=\"form-control\"\n                          placeholder=\"Tarix\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"legal_adress\"\n                          id=\"legal_adress\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Hüquqi ünvan\"\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"actual_adress\"\n                          id=\"actual_adress\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Faktiki ünvan\"\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"customer_phone\"\n                          id=\"customer_phone\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Nömrə\"\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"customer_email\"\n                          id=\"customer_email\"\n                          type=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"Email\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"customer_linkedin\"\n                          id=\"customer_linkedin\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Linkedin\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"customer_twitter\"\n                          id=\"customer_twitter\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Twitter\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"customer_instagram\"\n                          id=\"customer_instagram\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Instagram\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_website\"\n                          id=\"customer_website\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Vebsayt\"\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_whatsapp\"\n                          id=\"customer_whatsapp\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Whatsapp\"\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_telegram\"\n                          id=\"customer_telegram\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Telegram\"\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_facebook\"\n                          id=\"customer_facebook\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Facebook\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-3\">\n                        <MySearchableSelect\n                          name=\"referans_id\"\n                          id=\"referans_id\"\n                          type=\"text\"\n                          defaultValue={\n                            crm && {\n                              label: crm.referans_id.name,\n                              value: parseInt(crm.referans_id.id),\n                            }\n                          }\n                          options={referenceOptions}\n                          // className=\"form-control\"\n                          placeholder=\"Referans\"\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_category\"\n                          id=\"customer_category\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Müştəri kateqoriyası\"\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_satisfaction\"\n                          id=\"customer_satisfaction\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Müştəri məmnuniyyəti\"\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"turnover\"\n                          id=\"turnover\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Dövriyyə\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <MyTextArea\n                          name=\"note\"\n                          id=\"note\"\n                          type=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"Qeyd\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <div className=\"card\">\n                <div className=\"card-header\" id=\"headingTwo3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionThree\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionThree\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-layers\"\n                        >\n                          <polygon points=\"12 2 2 7 12 12 22 7 12 2\" />\n                          <polyline points=\"2 17 12 22 22 17\" />\n                          <polyline points=\"2 12 12 17 22 12\" />\n                        </svg>\n                      </div>\n                      Son illərdəki dövriyyəsi\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionThree\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingTwo3\"\n                  data-parent=\"#iconsAccordion\"\n                >\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-2 offset-10 text-right\">\n                        <div className=\"icon-container\">\n                          <button\n                            type=\"button\"\n                            className=\"close\"\n                            onClick={() => handleAddCirculationByYear()}\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-plus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={12} y1={8} x2={12} y2={16} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveCirculationByYear()}\n                            className=\"close\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-minus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      {mapCirculations &&\n                        mapCirculations.map((mapCirculation, index) => (\n                          <React.Fragment key={index}>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                id=\"circulationYear\"\n                                name={`circulationByYears[${index}].circulationYear`}\n                                type=\"text\"\n                                defaultValue={ mapCirculations && mapCirculation.circulationYear}\n                                className=\"form-control\"\n                                placeholder=\"İl\"\n                              />\n                            </div>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                name={`circulationByYears[${index}].circulation`}\n                                defaultValue={ mapCirculations && mapCirculation.circulation}\n                                id=\"circulation\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Dövriyyə\"\n                              />\n                            </div>\n                          </React.Fragment>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingTwo3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionForth\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionForth\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-users\"\n                        >\n                          <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                          <circle cx={9} cy={7} r={4} />\n                          <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n                          <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n                        </svg>\n                      </div>\n                      Son illərdəki işçi sayı\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionForth\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingTwo3\"\n                  data-parent=\"#iconsAccordion\"\n                >\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-2 offset-10 text-right\">\n                        <div className=\"icon-container\">\n                          <button\n                            type=\"button\"\n                            className=\"close\"\n                            onClick={() => handleAddWorkersYear()}\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-plus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={12} y1={8} x2={12} y2={16} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveWorkersYear()}\n                            className=\"close\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-minus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      {mapWorkersYears &&\n                        mapWorkersYears.map((mapWorkersYears, index) => (\n                          <React.Fragment key={index}>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                id={`workersYears[${index}].workerYear`}\n                                name={`workersYears[${index}]workerYear`}\n                                defaultValue={ mapWorkersYears && mapWorkersYears.workerYear}\n                                \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"İl\"\n                              />\n                            </div>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                name={`workersYears[${index}]worker`}\n                                id={`workersYears[${index}].worker`}\n                                defaultValue={ mapWorkersYears && mapWorkersYears.worker}\n\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"İşçilər\"\n                              />\n                            </div>\n                          </React.Fragment>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n             */}\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/oparationReducer.js",["949"],"\nimport {\n  CREATE_OPERATION,\n  DELETE_OPERATION,\n  FETCH_OPERATION,\n  UPDATE_OPERATION,\n} from \"./operationConstants\";\n\nconst initialState = {\n  operations: []\n};\n\nexport default function operationReducer(state = initialState, { type, payload,totalCount }) {\n  switch (type) {\n    // case CREATE_OPERATION:\n    //   return {\n    //     ...state,\n    //     operations: [...state.operations, payload],\n    //   };\n    case UPDATE_OPERATION:\n      return {\n        ...state,\n        operations: [\n          ...state.operations.filter((operation) => operation.id !== payload.id),\n          payload,\n        ],\n      };\n\n    case DELETE_OPERATION:\n      return {\n        ...state,\n        operations: [...state.operations.filter((operation) => operation.id !== payload)],\n      };\n    case FETCH_OPERATION:\n      return {\n        ...state,\n        operations: payload.filter(operation => operation.employee_id != null),\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/OperationPageModal.jsx",["950","951","952","953","954"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createOperation, updateOperation } from \"./operationActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport { loadCrm } from \"../crmPage/crmActions\";\nimport { loadDocs } from \"../docPage/docActions\";\nimport { loadEmployees } from \"../employees/employeesActions\";\nimport { loadLab } from \"../labPage/labActions\";\nimport { loadDocumentTypes } from \"../settings/documentType/documentTypeActions\";\nimport { loadExpenseGroup } from \"../settings/expenseGroup/expenseGroupActions\";\nimport { loadExpenseType } from \"../settings/expenseType/expenseTypeActions\";\nimport { loadOrderSource } from \"../settings/orderSource/orderSourceActions\";\nimport { loadReference } from \"../settings/reference/referenceActions\";\nimport { loadServiceType } from \"../settings/serviceType/serviceTypeActions\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\n\nexport default function OperationPageModal({ operation }) {\n  const dispatch = useDispatch();\n\n  useEffect(async () => {\n    dispatch(loadServiceType());\n    dispatch(loadReference());\n    dispatch(loadCrm());\n    dispatch(loadOrderSource());\n    dispatch(loadEmployees());\n    dispatch(loadDocs());\n    dispatch(loadLab());\n    dispatch(loadExpenseGroup());\n    await dispatch(loadExpenseType());\n    await setLoader(false);\n  }, []);\n  const { serviceTypes } = useSelector((state) => state.serviceTypes);\n  const { orderSources } = useSelector((state) => state.orderSources);\n  const { references } = useSelector((state) => state.references);\n  const { crms } = useSelector((state) => state.crms);\n  const { employees } = useSelector((state) => state.employees);\n  const { labs } = useSelector((state) => state.labs);\n  const { docs } = useSelector((state) => state.docs);\n  const { expenseGroups } = useSelector((state) => state.expenseGroups);\n  const { expenseTypes } = useSelector((state) => state.expenseTypes);\n  const [loader, setLoader] = useState(true);\n\n  let serviceTypeOptions = [];\n  let orderSourceOptions = [];\n  let referenceOptions = [];\n  let customerOptions = [];\n  let employeeOptions = [];\n  let labOptions = [];\n  let docOptions = [];\n  let expenseGroupOptions = [];\n  let expenseTypeOptions = [];\n\n  serviceTypeOptions =\n    serviceTypes &&\n    serviceTypes.map((serviceType) => {\n      return {\n        value: parseInt(serviceType.id),\n        label: serviceType.name,\n      };\n    });\n\n  orderSourceOptions =\n    orderSources &&\n    orderSources.map((orderSource) => {\n      return {\n        value: parseInt(orderSource.id),\n        label: orderSource.name,\n      };\n    });\n  referenceOptions =\n    references &&\n    references.map((reference) => {\n      return {\n        value: parseInt(reference.id),\n        label: reference.name,\n      };\n    });\n  customerOptions =\n    crms &&\n    crms.map((crm) => {\n      return {\n        value: parseInt(crm.id),\n        label: crm.customer_name,\n      };\n    });\n  employeeOptions =\n    employees &&\n    employees.map((employee) => {\n      return {\n        value: parseInt(employee.id),\n        label: `${employee.name} ${employee.surname}`,\n      };\n    });\n  labOptions =\n    labs &&\n    labs.map((lab) => {\n      return {\n        value: parseInt(lab.id),\n        label: lab.name,\n      };\n    });\n  docOptions =\n    docs &&\n    docs.map((doc) => {\n      return {\n        value: parseInt(doc.id),\n        label: doc.document_number,\n      };\n    });\n  expenseGroupOptions =\n    expenseGroups &&\n    expenseGroups.map((expenseGroup) => {\n      return {\n        value: parseInt(expenseGroup.id),\n        label: expenseGroup.name,\n      };\n    });\n  expenseTypeOptions =\n    expenseTypes &&\n    expenseTypes.map((expenseType) => {\n      return {\n        value: parseInt(expenseType.id),\n        label: expenseType.name,\n      };\n    });\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n  const [addedStudents, setAddedStudents] = useState([]);\n  let mapAddedStudents = addedStudents;\n  const handleAddStudent = () => {\n    setAddedStudents([...addedStudents, { studentName: \"\" }]);\n  };\n  const handleRemoveStudent = () => {\n    if (addedStudents.length > 1) {\n      let lastIndex = addedStudents.length - 1;\n      let values = [...addedStudents];\n      values.splice(lastIndex, 1);\n      setAddedStudents(values);\n    }\n  };\n  const initialValues = operation\n    ? {\n        number: operation.number && operation.number,\n        service_type_id:\n          operation.service_type_id && operation.service_type_id.id,\n\n        customer_id: operation.customer_id && operation.customer_id.id,\n        order_source_id:\n          operation.order_source_id && operation.order_source_id.id,\n        reference_id: operation.reference_id && operation.reference_id.id,\n        date: operation.date && operation.date,\n        description: operation.description && operation.description,\n        employee_id: operation.employee_id && operation.employee_id.id,\n        document_id: operation.document_id && operation.document_id.id,\n        faktura_id: operation.faktura_id && operation.faktura_id.id,\n        amount: operation.amount,\n        lab_id: operation.lab_id && operation.lab_id.id,\n        income_expense_group_id:\n          operation.income_expense_group_id &&\n          operation.income_expense_group_id.id,\n        expense_type_id:\n          operation.expense_type_id && operation.expense_type_id.id,\n        bonus: operation.bonus,\n\n        performans: operation.performans && operation.performans,\n      }\n    : {\n        number: \"\",\n        service_type_id: \"\",\n        customer_id: \"\",\n        order_source_id: \"\",\n        reference_id: \"\",\n        date: \"\",\n        description: \"\",\n        employee_id: \"\",\n        document_id: \"\",\n        faktura_id: \"\",\n        amount: \"\",\n        lab_id: \"\",\n        income_expense_group_id: \"\",\n        expense_type_id: \"\",\n        bonus: \"\",\n\n        performans: \"\",\n      };\n  const validationSchema = Yup.object({\n    number: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    service_type_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    customer_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    order_source_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    reference_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    date: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    description: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    employee_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    document_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    faktura_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    amount:\"\",\n    lab_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    income_expense_group_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    expense_type_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    bonus: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    performans: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={operation ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      {loader ? (\n        <div className=\"loader text-center\">\n          {\" \"}\n          <div className=\"loader-content\">\n            <div className=\"spinner-grow align-self-center\"></div>\n          </div>\n        </div>\n      ) : (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={async (values, { setSubmitting, setErrors }) => {\n            try {\n              operation\n                ? await dispatch(updateOperation({...values,id:operation.id}))\n                : await dispatch(createOperation({ ...values}));\n              setSubmitting(false);\n              // operation\n              //   ? toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\")\n              //   : toast.success(\"Uğurla əlavə edildi\");\n              setModal(true);\n              dispatch(closeModal());\n            } catch (error) {\n              setErrors({ auth: error.message });\n              // console.log(error);\n              setSubmitting(false);\n            }\n          }}\n        >\n          {({ isSubmitting, isValid, dirty, errors, values }) => (\n            <Form id=\"emp\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <MyTextInput\n                    id=\"number\"\n                    name=\"number\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Sifariş Nömrəsi\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    // defaultValue={\n                    //   operation &&\n                    //   customerOptions.filter(\n                    //     (customerOption) =>\n                    //       customerOption.value === operation.customer_id.id\n                    //   )\n                    // }\n                    defaultValue={\n                      operation && {\n                        value: parseInt(operation.customer_id.id),\n                        label: operation.customer_id.customer_name,\n                      }\n                    }\n                    id=\"customer_id\"\n                    name=\"customer_id\"\n                    type=\"text\"\n                    options={customerOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Müştəri\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    // defaultValue={\n                    //   operation &&\n                    //   serviceTypeOptions.filter(\n                    //     (serviceTypeOption) =>\n                    //       serviceTypeOption.value ===\n                    //       operation.service_type_id.id\n                    //   )\n                    // }\n                    defaultValue={\n                      operation && {\n                        value: parseInt(operation.service_type_id.id),\n                        label: operation.service_type_id.name,\n                      }\n                    }\n                    id=\"service_type_id\"\n                    name=\"service_type_id\"\n                    type=\"text\"\n                    options={serviceTypeOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Xidmət Növü\"\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    // defaultValue={\n                    //   operation &&\n                    //   orderSourceOptions.filter(\n                    //     (orderSourceOption) =>\n                    //       orderSourceOption.value ===\n                    //       operation.order_source_id.id\n                    //   )\n                    // }\n                    defaultValue={\n                      operation && {\n                        value: parseInt(operation.order_source_id.id),\n                        label: operation.order_source_id.name,\n                      }\n                    }\n                    id=\"order_source_id\"\n                    name=\"order_source_id\"\n                    type=\"text\"\n                    options={orderSourceOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Sifariş Mənbəyi\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    // defaultValue={\n                    //   operation &&\n                    //   referenceOptions.filter(\n                    //     (referenceOption) =>\n                    //       referenceOption.value === operation.reference_id.id\n                    //   )\n                    // }\n                    defaultValue={\n                      operation && {\n                        value: parseInt(operation.reference_id.id),\n                        label: operation.reference_id.name,\n                      }\n                    }\n                    name=\"reference_id\"\n                    id=\"reference_id\"\n                    type=\"text\"\n                    options={referenceOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Referans\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <MyTextInput\n                    name=\"date\"\n                    id=\"date\"\n                    type=\"date\"\n                    // onFocus={(e) => (e.target.type = \"date\")}\n                    className=\"form-control\"\n                    placeholder=\"Əməliyyat tarixi\"\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <MyTextArea\n                    name=\"description\"\n                    id=\"description\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Sifariş Təyinatı\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <MySearchableSelect\n                    // defaultValue={\n                    //   operation &&\n                    //   employeeOptions.filter(\n                    //     (employeeOption) =>\n                    //       employeeOption.value === operation.employee_id.id\n                    //   )\n                    // }\n                    defaultValue={\n                      operation && {\n                        value: parseInt(operation.employee_id.id),\n                        label: operation.employee_id.name,\n                      }\n                    }\n                    name=\"employee_id\"\n                    id=\"employee_id\"\n                    type=\"text\"\n                    options={employeeOptions}\n                    // className=\"form-control\"\n                    placeholder=\"İcraçı\"\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    defaultValue={\n                      operation &&\n                      docOptions.filter(\n                        (docOption) =>\n                          docOption.value ===\n                          (operation.document_id && operation.document_id.id)\n                      )\n                    }\n                    name=\"document_id\"\n                    id=\"document_id\"\n                    type=\"text\"\n                    options={docOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Müqavilə\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    defaultValue={docOptions.filter(\n                      (docOption) =>\n                        docOption.value ===\n                        (operation.document_id && operation.document_id.id)\n                    )}\n                    // }\n                    name=\"faktura_id\"\n                    id=\"faktura_id\"\n                    type=\"text\"\n                    options={docOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Hesab faktura\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <MyTextInput\n                    name=\"amount\"\n                    id=\"amount\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Məbləğ\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    defaultValue={\n                      operation &&\n                      labOptions.filter(\n                        (labOption) =>\n                          labOption.value ===\n                          (operation.lab_id && operation.lab_id.id)\n                      )\n                    }\n                    name=\"lab_id\"\n                    id=\"lab_id\"\n                    type=\"text\"\n                    options={labOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Laboratoriya\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    defaultValue={\n                      operation &&\n                      expenseGroupOptions.filter(\n                        (expenseGroupOption) =>\n                          expenseGroupOption.value ===\n                          (operation.income_expense_group_id &&\n                            operation.income_expense_group_id.id)\n                      )\n                    }\n                    name=\"income_expense_group_id\"\n                    id=\"income_expense_group_id\"\n                    type=\"text\"\n                    options={expenseGroupOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Xərc qrupu\"\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <MySearchableSelect\n                    defaultValue={\n                      operation &&\n                      expenseTypeOptions.filter(\n                        (expenseTypeOption) =>\n                          expenseTypeOption.value ===\n                          (operation.expense_type_id &&\n                            operation.expense_type_id.id)\n                      )\n                    }\n                    name=\"expense_type_id\"\n                    id=\"expense_type_id\"\n                    type=\"text\"\n                    options={expenseTypeOptions}\n                    // className=\"form-control\"\n                    placeholder=\"Xərc tipi\"\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <MyTextInput\n                    name=\"bonus\"\n                    id=\"bonus\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"İcracı bonusu\"\n                  />\n                </div>\n                <div className=\"col-md-6\">\n                  <MyTextInput\n                    name=\"performans\"\n                    id=\"performans\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Performans\"\n                  />\n                </div>\n              </div>\n              {values.serviceType === \"0\" && (\n                <div className=\"student mt-5\">\n                  <div className=\"row\">\n                    <div className=\"col-md-2 offset-10 text-right\">\n                      <div className=\"icon-container\">\n                        <button\n                          type=\"button\"\n                          className=\"close\"\n                          onClick={() => handleAddStudent()}\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width={24}\n                            height={24}\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth={2}\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"feather feather-plus-circle\"\n                          >\n                            <circle cx={12} cy={12} r={10} />\n                            <line x1={12} y1={8} x2={12} y2={16} />\n                            <line x1={8} y1={12} x2={16} y2={12} />\n                          </svg>\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleRemoveStudent()}\n                          className=\"close\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width={24}\n                            height={24}\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            strokeWidth={2}\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            className=\"feather feather-minus-circle\"\n                          >\n                            <circle cx={12} cy={12} r={10} />\n                            <line x1={8} y1={12} x2={16} y2={12} />\n                          </svg>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    {mapAddedStudents &&\n                      mapAddedStudents.map((mapAddedStudent, index) => (\n                        <React.Fragment key={index}>\n                          <div className=\"col-md-12\">\n                            <MyTextInput\n                              id={`students.${index}.studentName`}\n                              name={`students.${index}.studentName`}\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"İştirakçı adı\"\n                            />\n                          </div>\n                        </React.Fragment>\n                      ))}\n                  </div>\n                </div>\n              )}\n              <button\n                disabled={!isValid || !dirty || isSubmitting}\n                type=\"submit\"\n                // name=\"time\"\n                className=\"btn btn-primary float-right  btn-lg mt-3 \"\n              >\n                {isSubmitting && (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-loader spin mr-2\"\n                  >\n                    <line x1={12} y1={2} x2={12} y2={6} />\n                    <line x1={12} y1={18} x2={12} y2={22} />\n                    <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                    <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                    <line x1={2} y1={12} x2={6} y2={12} />\n                    <line x1={18} y1={12} x2={22} y2={12} />\n                    <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                    <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                  </svg>\n                )}\n                Yadda saxla\n              </button>\n              <button\n                id=\"closeModal\"\n                onClick={() => {\n                  dispatch(closeModal());\n                }}\n                className=\"btn btn-lg float-right mt-3 mr-2\"\n                data-dismiss=\"modal\"\n              >\n                <i className=\"flaticon-cancel-12\" /> Ləğv et\n              </button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/OperationPage.jsx",["955","956","957","958"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\n\n\nimport { deleteOperation, loadOperation } from \"./operationActions\";\nexport default function OperationPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadOperation());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { operations, totalCount } = useSelector((state) => state.operations);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = operations;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadOperation({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadOperation({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  // const actions = (\n  //   <svg\n  //     data-name=\"add\"\n  //     onClick={() => {\n  //       dispatch(\n  //         openModal({\n  //           modalType: \"OperationPageModal\",\n  //           modalProps: null,\n  //         })\n  //       );\n  //       dispatch(loadServiceType());\n  //       dispatch(loadReference());\n  //       dispatch(loadOrderSource());\n  //       dispatch(loadEmployees());\n  //       dispatch(loadDocs());\n  //       dispatch(loadLab());\n  //       dispatch(loadExpenseGroup());\n  //       dispatch(loadExpenseType());\n\n  //     }}\n  //     style={{\n  //       ...buttonStyle,\n  //       ...(hover && target.name === \"add\" && buttonHover),\n  //     }}\n  //     onMouseEnter={(e) => {\n  //       sethover(true);\n  //       setTarget({\n  //         ...target,\n  //         name: e.target.getAttribute(\"data-name\"),\n  //       });\n  //     }}\n  //     onMouseLeave={() => {\n  //       sethover(false);\n  //       setTarget(null);\n  //     }}\n  //     type=\"button\"\n  //     xmlns=\"http://www.w3.org/2000/svg\"\n  //     width={24}\n  //     height={24}\n  //     viewBox=\"0 0 24 24\"\n  //     fill=\"none\"\n  //     stroke=\"currentColor\"\n  //     strokeWidth={2}\n  //     strokeLinecap=\"round\"\n  //     strokeLinejoin=\"round\"\n  //     className=\"feather mr-4 feather-plus icon-container\"\n  //     data-toggle=\"modal\"\n  //     data-target=\"#exampleModal\"\n  //   >\n  //     <line x1={12} y1={5} x2={12} y2={19} />\n  //     <line x1={5} y1={12} x2={19} y2={12} />\n  //   </svg>\n  // );\n\n  const columns = [\n    {\n      name: \"№\",\n      selector: \"number\",\n      sortable: true,\n    },\n    {\n      name: \"Xidmət növü\",\n      cell: (operation) => <p>{operation.service_type_id.name}</p>,\n      sortable: true,\n    },\n    {\n      name: \"Müştəri\",\n      cell: (operation) => <p>{operation.customer_id.customer_name}</p>,\n      sortable: true,\n    },\n    {\n      name: \"Əməliyyat tarixi\",\n      selector: \"date\",\n      sortable: true,\n    },\n    {\n      name: \"Referans\",\n      cell: (operation) => <p>{operation.reference_id.name}</p>,\n      sortable: true,\n    },\n    {\n      name: \"Sifariş təyinatı\",\n      selector: \"description\",\n      sortable: true,\n    },\n    {\n      name: \"Məbləğ\",\n      cell: (operation) => {\n        if (operation.amount == null) {\n          return \"Təyin edilməyib\";\n        } else {\n          return operation.amount;\n        }\n      },\n      sortable: true,\n    },\n\n    {\n      name: \"İcra vəziyyəti\",\n\n      cell: (row) => (\n        <button\n          onClick={() => {\n            // dispatch(closeModal());\n            alert(\"yeahhh\");\n          }}\n          className=\"btn btn-sm btn-danger btn-rounded\"\n        >\n          <i className=\"flaticon-cancel-12\" /> Ləğv et\n        </button>\n      ),\n    },\n    {\n      name: \"\",\n      cell: (operation) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n\n              dispatch(\n                openModal({\n                  modalType: \"OperationPageModal\",\n                  modalProps: { operation },\n                })\n              );\n            }}\n            data-name=\"edit\"\n            id={operation.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${operation.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={operation.id}\n            onClick={() => {\n              dispatch(deleteOperation(operation.id));\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${operation.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Əməliyyatlar\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                // actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/operationActions.js",["959","960"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataOrder } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport { CREATE_OPERATION, DELETE_OPERATION, FETCH_OPERATION, UPDATE_OPERATION } from \"./operationConstants\";\nconst url = 'operation';\n\nexport function loadOperation(data) {\n    return async function (dispatch) {\n        dispatch(asyncActionStart());\n    \n        const operations = await axios.get(`/${url}`, {\n          params: { ...data },\n        });\n        console.log(operations,'Operation')\n        if (operations.status === 200) {\n          dispatch({\n            type: FETCH_OPERATION,\n            payload: operations.data.data,\n            totalCount: operations.data.message,\n          });\n          dispatch(asyncActionFinish());\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}\nexport function listenToOperation(operations){\n    return {\n        type:FETCH_OPERATION,\n        payload:operations\n    }\n}\n\nexport function createOperation(operation){\n    return async function(dispatch){\n        dispatch(asyncActionStart());\n        try {\n            await delay(1000);\n            dispatch({type:CREATE_OPERATION,payload:operation});\n            dispatch(asyncActionFinish());\n\n        } catch (error) {\n            asyncActionError(error)\n        }\n    }\n}\n\nexport function updateOperation(operation){\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\nconsole.log(operation);\n    const operationUpdated = await axios.put(\n      `/${url}/update`,\n      operation\n    );\n    console.log(operationUpdated)\n    if (operationUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_OPERATION,\n        payload: operationUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteOperation(operationId){\n    return async function (dispatch) {\n        const documentDeleted = await axios.delete(\n          `/${url}/delete?id=${operationId}`\n        );\n        if (documentDeleted.status === 200) {\n          dispatch({ type: DELETE_OPERATION, payload: operationId });\n          // dispatch(asyncActionFinish())\n          toast.info(\"Uğurla silindi\");\n        } else {\n          dispatch(asyncActionError());\n        }\n      };\n}","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/operationConstants.js",[],{"ruleId":"961","severity":1,"message":"962","line":8,"column":10,"nodeType":"963","messageId":"964","endLine":8,"endColumn":23},{"ruleId":"965","replacedBy":"966"},{"ruleId":"967","replacedBy":"968"},{"ruleId":"961","severity":1,"message":"969","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":21},{"ruleId":"961","severity":1,"message":"970","line":26,"column":8,"nodeType":"963","messageId":"964","endLine":26,"endColumn":17},{"ruleId":"961","severity":1,"message":"971","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":25},{"ruleId":"961","severity":1,"message":"972","line":5,"column":5,"nodeType":"963","messageId":"964","endLine":5,"endColumn":15},{"ruleId":"961","severity":1,"message":"973","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":15},{"ruleId":"961","severity":1,"message":"974","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":18},{"ruleId":"961","severity":1,"message":"975","line":15,"column":11,"nodeType":"963","messageId":"964","endLine":15,"endColumn":24},{"ruleId":"976","severity":1,"message":"977","line":60,"column":6,"nodeType":"978","endLine":60,"endColumn":8,"suggestions":"979"},{"ruleId":"980","severity":1,"message":"981","line":124,"column":23,"nodeType":"982","messageId":"983","endLine":124,"endColumn":60},{"ruleId":"980","severity":1,"message":"981","line":306,"column":27,"nodeType":"982","messageId":"983","endLine":306,"endColumn":66},{"ruleId":"961","severity":1,"message":"984","line":1,"column":17,"nodeType":"963","messageId":"964","endLine":1,"endColumn":26},{"ruleId":"961","severity":1,"message":"985","line":1,"column":28,"nodeType":"963","messageId":"964","endLine":1,"endColumn":36},{"ruleId":"986","severity":1,"message":"987","line":77,"column":13,"nodeType":"988","endLine":85,"endColumn":14},{"ruleId":"989","severity":1,"message":"990","line":77,"column":13,"nodeType":"988","endLine":85,"endColumn":14},{"ruleId":"986","severity":1,"message":"987","line":92,"column":15,"nodeType":"988","endLine":96,"endColumn":16},{"ruleId":"986","severity":1,"message":"987","line":104,"column":15,"nodeType":"988","endLine":104,"endColumn":60},{"ruleId":"986","severity":1,"message":"987","line":112,"column":15,"nodeType":"988","endLine":116,"endColumn":16},{"ruleId":"986","severity":1,"message":"987","line":124,"column":15,"nodeType":"988","endLine":128,"endColumn":16},{"ruleId":"986","severity":1,"message":"987","line":139,"column":13,"nodeType":"988","endLine":147,"endColumn":14},{"ruleId":"989","severity":1,"message":"990","line":139,"column":13,"nodeType":"988","endLine":147,"endColumn":14},{"ruleId":"986","severity":1,"message":"991","line":169,"column":17,"nodeType":"988","endLine":169,"endColumn":46},{"ruleId":"986","severity":1,"message":"991","line":188,"column":17,"nodeType":"988","endLine":188,"endColumn":46},{"ruleId":"986","severity":1,"message":"991","line":207,"column":17,"nodeType":"988","endLine":207,"endColumn":46},{"ruleId":"986","severity":1,"message":"987","line":230,"column":13,"nodeType":"988","endLine":238,"endColumn":14},{"ruleId":"989","severity":1,"message":"990","line":230,"column":13,"nodeType":"988","endLine":238,"endColumn":14},{"ruleId":"986","severity":1,"message":"987","line":342,"column":13,"nodeType":"988","endLine":350,"endColumn":14},{"ruleId":"989","severity":1,"message":"990","line":342,"column":13,"nodeType":"988","endLine":350,"endColumn":14},{"ruleId":"961","severity":1,"message":"974","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":18},{"ruleId":"961","severity":1,"message":"992","line":11,"column":8,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"975","line":15,"column":11,"nodeType":"963","messageId":"964","endLine":15,"endColumn":24},{"ruleId":"993","severity":1,"message":"994","line":44,"column":19,"nodeType":"988","endLine":44,"endColumn":40},{"ruleId":"995","severity":1,"message":"996","line":9,"column":11,"nodeType":"988","messageId":"997","endLine":9,"endColumn":61,"fix":"998"},{"ruleId":"961","severity":1,"message":"999","line":3,"column":8,"nodeType":"963","messageId":"964","endLine":3,"endColumn":13},{"ruleId":"976","severity":1,"message":"977","line":12,"column":6,"nodeType":"978","endLine":12,"endColumn":8,"suggestions":"1000"},{"ruleId":"961","severity":1,"message":"1001","line":15,"column":9,"nodeType":"963","messageId":"964","endLine":15,"endColumn":15},{"ruleId":"961","severity":1,"message":"1002","line":16,"column":9,"nodeType":"963","messageId":"964","endLine":16,"endColumn":21},{"ruleId":"961","severity":1,"message":"1003","line":21,"column":9,"nodeType":"963","messageId":"964","endLine":21,"endColumn":17},{"ruleId":"961","severity":1,"message":"1004","line":2,"column":10,"nodeType":"963","messageId":"964","endLine":2,"endColumn":14},{"ruleId":"986","severity":1,"message":"987","line":8,"column":9,"nodeType":"988","endLine":13,"endColumn":10},{"ruleId":"986","severity":1,"message":"991","line":37,"column":21,"nodeType":"988","endLine":37,"endColumn":59},{"ruleId":"986","severity":1,"message":"987","line":50,"column":15,"nodeType":"988","endLine":58,"endColumn":16},{"ruleId":"986","severity":1,"message":"987","line":79,"column":17,"nodeType":"988","endLine":84,"endColumn":18},{"ruleId":"986","severity":1,"message":"987","line":87,"column":17,"nodeType":"988","endLine":92,"endColumn":18},{"ruleId":"986","severity":1,"message":"987","line":95,"column":17,"nodeType":"988","endLine":100,"endColumn":18},{"ruleId":"986","severity":1,"message":"987","line":103,"column":17,"nodeType":"988","endLine":108,"endColumn":18},{"ruleId":"986","severity":1,"message":"987","line":111,"column":17,"nodeType":"988","endLine":116,"endColumn":18},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":20,"column":6,"nodeType":"978","endLine":20,"endColumn":8,"suggestions":"1006"},{"ruleId":"980","severity":1,"message":"981","line":227,"column":13,"nodeType":"982","messageId":"983","endLine":227,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":15,"column":6,"nodeType":"978","endLine":15,"endColumn":8,"suggestions":"1007"},{"ruleId":"980","severity":1,"message":"981","line":202,"column":13,"nodeType":"982","messageId":"983","endLine":202,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":19,"column":6,"nodeType":"978","endLine":19,"endColumn":8,"suggestions":"1008"},{"ruleId":"980","severity":1,"message":"981","line":216,"column":13,"nodeType":"982","messageId":"983","endLine":216,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":15,"column":6,"nodeType":"978","endLine":15,"endColumn":8,"suggestions":"1009"},{"ruleId":"980","severity":1,"message":"981","line":196,"column":13,"nodeType":"982","messageId":"983","endLine":196,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":15,"column":5,"nodeType":"978","endLine":15,"endColumn":7,"suggestions":"1010"},{"ruleId":"980","severity":1,"message":"981","line":185,"column":13,"nodeType":"982","messageId":"983","endLine":185,"endColumn":52},{"ruleId":"976","severity":1,"message":"977","line":14,"column":5,"nodeType":"978","endLine":14,"endColumn":7,"suggestions":"1011"},{"ruleId":"980","severity":1,"message":"981","line":176,"column":13,"nodeType":"982","messageId":"983","endLine":176,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":14,"column":5,"nodeType":"978","endLine":14,"endColumn":7,"suggestions":"1012"},{"ruleId":"980","severity":1,"message":"981","line":178,"column":13,"nodeType":"982","messageId":"983","endLine":178,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":14,"column":5,"nodeType":"978","endLine":14,"endColumn":7,"suggestions":"1013"},{"ruleId":"980","severity":1,"message":"981","line":174,"column":13,"nodeType":"982","messageId":"983","endLine":174,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":16,"column":6,"nodeType":"978","endLine":16,"endColumn":8,"suggestions":"1014"},{"ruleId":"980","severity":1,"message":"981","line":184,"column":13,"nodeType":"982","messageId":"983","endLine":184,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":15,"column":5,"nodeType":"978","endLine":15,"endColumn":7,"suggestions":"1015"},{"ruleId":"980","severity":1,"message":"981","line":176,"column":13,"nodeType":"982","messageId":"983","endLine":176,"endColumn":52},{"ruleId":"980","severity":1,"message":"981","line":238,"column":17,"nodeType":"982","messageId":"983","endLine":238,"endColumn":39},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":14,"column":6,"nodeType":"978","endLine":14,"endColumn":8,"suggestions":"1016"},{"ruleId":"980","severity":1,"message":"981","line":174,"column":13,"nodeType":"982","messageId":"983","endLine":174,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":14,"column":6,"nodeType":"978","endLine":14,"endColumn":8,"suggestions":"1017"},{"ruleId":"980","severity":1,"message":"981","line":174,"column":13,"nodeType":"982","messageId":"983","endLine":174,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":15,"column":5,"nodeType":"978","endLine":15,"endColumn":7,"suggestions":"1018"},{"ruleId":"980","severity":1,"message":"981","line":177,"column":13,"nodeType":"982","messageId":"983","endLine":177,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":15,"column":6,"nodeType":"978","endLine":15,"endColumn":8,"suggestions":"1019"},{"ruleId":"980","severity":1,"message":"981","line":172,"column":13,"nodeType":"982","messageId":"983","endLine":172,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":15,"column":6,"nodeType":"978","endLine":15,"endColumn":8,"suggestions":"1020"},{"ruleId":"980","severity":1,"message":"981","line":177,"column":13,"nodeType":"982","messageId":"983","endLine":177,"endColumn":52},{"ruleId":"980","severity":1,"message":"981","line":238,"column":17,"nodeType":"982","messageId":"983","endLine":238,"endColumn":38},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":16,"column":6,"nodeType":"978","endLine":16,"endColumn":8,"suggestions":"1021"},{"ruleId":"980","severity":1,"message":"981","line":174,"column":13,"nodeType":"982","messageId":"983","endLine":174,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":17,"column":6,"nodeType":"978","endLine":17,"endColumn":8,"suggestions":"1022"},{"ruleId":"980","severity":1,"message":"981","line":288,"column":13,"nodeType":"982","messageId":"983","endLine":288,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":15,"column":6,"nodeType":"978","endLine":15,"endColumn":8,"suggestions":"1023"},{"ruleId":"980","severity":1,"message":"981","line":220,"column":13,"nodeType":"982","messageId":"983","endLine":220,"endColumn":52},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":14,"column":6,"nodeType":"978","endLine":14,"endColumn":8,"suggestions":"1024"},{"ruleId":"980","severity":1,"message":"981","line":245,"column":13,"nodeType":"982","messageId":"983","endLine":245,"endColumn":52},{"ruleId":"961","severity":1,"message":"1025","line":1,"column":10,"nodeType":"963","messageId":"964","endLine":1,"endColumn":27},{"ruleId":"961","severity":1,"message":"1026","line":20,"column":9,"nodeType":"963","messageId":"964","endLine":20,"endColumn":19},{"ruleId":"961","severity":1,"message":"1027","line":1,"column":10,"nodeType":"963","messageId":"964","endLine":1,"endColumn":25},{"ruleId":"961","severity":1,"message":"1028","line":1,"column":10,"nodeType":"963","messageId":"964","endLine":1,"endColumn":20},{"ruleId":"961","severity":1,"message":"1029","line":1,"column":10,"nodeType":"963","messageId":"964","endLine":1,"endColumn":23},{"ruleId":"961","severity":1,"message":"1030","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":36},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1031","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":31},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1032","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":34},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1033","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":29},{"ruleId":"961","severity":1,"message":"972","line":5,"column":3,"nodeType":"963","messageId":"964","endLine":5,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":15},{"ruleId":"961","severity":1,"message":"1034","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":38},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1035","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":36},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1036","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":37},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1037","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":37},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1038","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":38},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"972","line":5,"column":3,"nodeType":"963","messageId":"964","endLine":5,"endColumn":13},{"ruleId":"961","severity":1,"message":"972","line":5,"column":3,"nodeType":"963","messageId":"964","endLine":5,"endColumn":13},{"ruleId":"961","severity":1,"message":"1039","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":33},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1040","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":39},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1041","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":30},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1042","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":39},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1043","line":12,"column":10,"nodeType":"963","messageId":"964","endLine":12,"endColumn":29},{"ruleId":"961","severity":1,"message":"1044","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":37},{"ruleId":"961","severity":1,"message":"972","line":6,"column":3,"nodeType":"963","messageId":"964","endLine":6,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":15},{"ruleId":"961","severity":1,"message":"1045","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":28},{"ruleId":"961","severity":1,"message":"972","line":5,"column":3,"nodeType":"963","messageId":"964","endLine":5,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":15},{"ruleId":"961","severity":1,"message":"1046","line":11,"column":10,"nodeType":"963","messageId":"964","endLine":11,"endColumn":20},{"ruleId":"961","severity":1,"message":"1047","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":32},{"ruleId":"961","severity":1,"message":"972","line":5,"column":3,"nodeType":"963","messageId":"964","endLine":5,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":15},{"ruleId":"961","severity":1,"message":"974","line":2,"column":10,"nodeType":"963","messageId":"964","endLine":2,"endColumn":18},{"ruleId":"961","severity":1,"message":"1048","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":30},{"ruleId":"961","severity":1,"message":"972","line":5,"column":3,"nodeType":"963","messageId":"964","endLine":5,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":15},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"1051","severity":1,"message":"1052","line":101,"column":47,"nodeType":"1053","messageId":"1054","endLine":101,"endColumn":49},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"961","severity":1,"message":"969","line":6,"column":23,"nodeType":"963","messageId":"964","endLine":6,"endColumn":34},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1055","line":7,"column":10,"nodeType":"963","messageId":"964","endLine":7,"endColumn":21},{"ruleId":"961","severity":1,"message":"1056","line":7,"column":40,"nodeType":"963","messageId":"964","endLine":7,"endColumn":51},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"961","severity":1,"message":"1049","line":8,"column":10,"nodeType":"963","messageId":"964","endLine":8,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":9,"column":8,"nodeType":"963","messageId":"964","endLine":9,"endColumn":12},{"ruleId":"976","severity":1,"message":"977","line":25,"column":6,"nodeType":"978","endLine":25,"endColumn":8,"suggestions":"1057"},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"976","severity":1,"message":"977","line":23,"column":6,"nodeType":"978","endLine":23,"endColumn":8,"suggestions":"1058"},{"ruleId":"961","severity":1,"message":"1059","line":30,"column":9,"nodeType":"963","messageId":"964","endLine":30,"endColumn":27},{"ruleId":"961","severity":1,"message":"1060","line":40,"column":9,"nodeType":"963","messageId":"964","endLine":40,"endColumn":32},{"ruleId":"961","severity":1,"message":"1061","line":310,"column":9,"nodeType":"963","messageId":"964","endLine":310,"endColumn":40},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"976","severity":1,"message":"977","line":29,"column":6,"nodeType":"978","endLine":29,"endColumn":8,"suggestions":"1062"},{"ruleId":"976","severity":1,"message":"977","line":20,"column":6,"nodeType":"978","endLine":20,"endColumn":8,"suggestions":"1063"},{"ruleId":"961","severity":1,"message":"1049","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":11,"column":8,"nodeType":"963","messageId":"964","endLine":11,"endColumn":12},{"ruleId":"961","severity":1,"message":"1064","line":5,"column":32,"nodeType":"963","messageId":"964","endLine":5,"endColumn":37},{"ruleId":"1065","severity":1,"message":"1066","line":21,"column":7,"nodeType":"1067","messageId":"1054","endLine":21,"endColumn":13},{"ruleId":"1065","severity":1,"message":"1068","line":13,"column":5,"nodeType":"1067","messageId":"1054","endLine":13,"endColumn":30},{"ruleId":"1065","severity":1,"message":"1068","line":31,"column":5,"nodeType":"1067","messageId":"1054","endLine":31,"endColumn":30},{"ruleId":"1065","severity":1,"message":"1068","line":50,"column":5,"nodeType":"1067","messageId":"1054","endLine":50,"endColumn":30},{"ruleId":"961","severity":1,"message":"1050","line":1,"column":8,"nodeType":"963","messageId":"964","endLine":1,"endColumn":12},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":17,"column":6,"nodeType":"978","endLine":17,"endColumn":8,"suggestions":"1069"},{"ruleId":"980","severity":1,"message":"981","line":202,"column":13,"nodeType":"982","messageId":"983","endLine":202,"endColumn":52},{"ruleId":"961","severity":1,"message":"1070","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":28},{"ruleId":"961","severity":1,"message":"972","line":5,"column":3,"nodeType":"963","messageId":"964","endLine":5,"endColumn":13},{"ruleId":"961","severity":1,"message":"973","line":10,"column":10,"nodeType":"963","messageId":"964","endLine":10,"endColumn":15},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"961","severity":1,"message":"1071","line":32,"column":9,"nodeType":"963","messageId":"964","endLine":32,"endColumn":21},{"ruleId":"961","severity":1,"message":"1072","line":59,"column":7,"nodeType":"963","messageId":"964","endLine":59,"endColumn":22},{"ruleId":"961","severity":1,"message":"1073","line":62,"column":9,"nodeType":"963","messageId":"964","endLine":62,"endColumn":35},{"ruleId":"961","severity":1,"message":"1074","line":68,"column":9,"nodeType":"963","messageId":"964","endLine":68,"endColumn":38},{"ruleId":"961","severity":1,"message":"1075","line":81,"column":7,"nodeType":"963","messageId":"964","endLine":81,"endColumn":22},{"ruleId":"961","severity":1,"message":"1076","line":82,"column":9,"nodeType":"963","messageId":"964","endLine":82,"endColumn":29},{"ruleId":"961","severity":1,"message":"1077","line":85,"column":9,"nodeType":"963","messageId":"964","endLine":85,"endColumn":32},{"ruleId":"989","severity":1,"message":"1078","line":198,"column":21,"nodeType":"988","endLine":205,"endColumn":22},{"ruleId":"989","severity":1,"message":"1078","line":360,"column":21,"nodeType":"988","endLine":367,"endColumn":22},{"ruleId":"961","severity":1,"message":"1079","line":3,"column":3,"nodeType":"963","messageId":"964","endLine":3,"endColumn":19},{"ruleId":"961","severity":1,"message":"1049","line":9,"column":10,"nodeType":"963","messageId":"964","endLine":9,"endColumn":15},{"ruleId":"961","severity":1,"message":"1050","line":10,"column":8,"nodeType":"963","messageId":"964","endLine":10,"endColumn":12},{"ruleId":"961","severity":1,"message":"1080","line":18,"column":10,"nodeType":"963","messageId":"964","endLine":18,"endColumn":27},{"ruleId":"976","severity":1,"message":"1081","line":30,"column":13,"nodeType":"1082","endLine":41,"endColumn":4},{"ruleId":"976","severity":1,"message":"977","line":41,"column":6,"nodeType":"978","endLine":41,"endColumn":8,"suggestions":"1083"},{"ruleId":"961","severity":1,"message":"1005","line":2,"column":21,"nodeType":"963","messageId":"964","endLine":2,"endColumn":34},{"ruleId":"976","severity":1,"message":"977","line":16,"column":6,"nodeType":"978","endLine":16,"endColumn":8,"suggestions":"1084"},{"ruleId":"961","severity":1,"message":"1085","line":24,"column":9,"nodeType":"963","messageId":"964","endLine":24,"endColumn":20},{"ruleId":"980","severity":1,"message":"981","line":227,"column":13,"nodeType":"982","messageId":"983","endLine":227,"endColumn":52},{"ruleId":"961","severity":1,"message":"1048","line":3,"column":10,"nodeType":"963","messageId":"964","endLine":3,"endColumn":30},{"ruleId":"961","severity":1,"message":"972","line":5,"column":3,"nodeType":"963","messageId":"964","endLine":5,"endColumn":13},"no-unused-vars","'loadEmployees' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1086"],"no-negated-in-lhs",["1087"],"'useSelector' is defined but never used.","'useScript' is defined but never used.","'fetchSampleData' is defined but never used.","'APP_LOADED' is defined but never used.","'delay' is defined but never used.","'Redirect' is defined but never used.","'authenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1088"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Sidebar' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"1089","text":"1090"},"'Chart' is defined but never used.",["1091"],"'series' is assigned a value but never used.","'chartOptions' is assigned a value but never used.","'basicBar' is assigned a value but never used.","'Link' is defined but never used.","'defaultThemes' is defined but never used.",["1092"],["1093"],["1094"],["1095"],["1096"],["1097"],["1098"],["1099"],["1100"],["1101"],["1102"],["1103"],["1104"],["1105"],["1106"],["1107"],["1108"],["1109"],["1110"],"'sampleDataExpense' is defined but never used.","'expiryDate' is assigned a value but never used.","'sampleDataOrder' is defined but never used.","'sampleData' is defined but never used.","'sampleDataLab' is defined but never used.","'fetchSampleDataDepartments' is defined but never used.","'fethcSampleDataDuties' is defined but never used.","'fetchSampleDataReference' is defined but never used.","'fethcSampleDataDocs' is defined but never used.","'fetchSampleDataDocumentTypes' is defined but never used.","'fetchSampleDataOrderSource' is defined but never used.","'fetchSampleDataExpenseTypes' is defined but never used.","'fetchSampleDataServiceTypes' is defined but never used.","'fetchSampleDataExpenseGroups' is defined but never used.","'fetchSampleDataTraining' is defined but never used.","'fetchSampleDataProductService' is defined but never used.","'fetchSampleDataSkill' is defined but never used.","'fetchSampleDataSignOfLegalAct' is defined but never used.","'DELETE_SERVICE_TYPE' is defined but never used.","'fetchSampleDataCounterParty' is defined but never used.","'fetchSampleDataLab' is defined but never used.","'DELETE_DOC' is defined but never used.","'fetchSampleDataExpense' is defined but never used.","'fetchSampleDataOrder' is defined but never used.","'toast' is defined but never used.","'cuid' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createOrder' is defined but never used.","'updateOrder' is defined but never used.",["1111"],["1112"],"'productNoteOptions' is assigned a value but never used.","'allCountriesListOptions' is assigned a value but never used.","'accreditedLaboratoryNameOptions' is assigned a value but never used.",["1113"],["1114"],"'state' is assigned a value but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","Duplicate key 'certificateExpirationDate'.",["1115"],"'fetchSampleDataCrm' is defined but never used.","'placeOptions' is assigned a value but never used.","'mapCirculations' is assigned a value but never used.","'handleAddCirculationByYear' is assigned a value but never used.","'handleRemoveCirculationByYear' is assigned a value but never used.","'mapWorkersYears' is assigned a value but never used.","'handleAddWorkersYear' is assigned a value but never used.","'handleRemoveWorkersYear' is assigned a value but never used.","The attribute aria-expanded is not supported by the role menu.","'CREATE_OPERATION' is defined but never used.","'loadDocumentTypes' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["1116"],["1117"],"'buttonStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1118","fix":"1119"},[265,265]," rel=\"noreferrer\"",{"desc":"1118","fix":"1120"},{"desc":"1118","fix":"1121"},{"desc":"1118","fix":"1122"},{"desc":"1118","fix":"1123"},{"desc":"1118","fix":"1124"},{"desc":"1118","fix":"1125"},{"desc":"1118","fix":"1126"},{"desc":"1118","fix":"1127"},{"desc":"1118","fix":"1128"},{"desc":"1118","fix":"1129"},{"desc":"1118","fix":"1130"},{"desc":"1118","fix":"1131"},{"desc":"1118","fix":"1132"},{"desc":"1118","fix":"1133"},{"desc":"1118","fix":"1134"},{"desc":"1118","fix":"1135"},{"desc":"1118","fix":"1136"},{"desc":"1118","fix":"1137"},{"desc":"1118","fix":"1138"},{"desc":"1118","fix":"1139"},{"desc":"1118","fix":"1140"},{"desc":"1118","fix":"1141"},{"desc":"1118","fix":"1142"},{"desc":"1118","fix":"1143"},{"desc":"1118","fix":"1144"},{"desc":"1118","fix":"1145"},{"desc":"1118","fix":"1146"},"Update the dependencies array to be: [dispatch]",{"range":"1147","text":"1148"},{"range":"1149","text":"1148"},{"range":"1150","text":"1148"},{"range":"1151","text":"1148"},{"range":"1152","text":"1148"},{"range":"1153","text":"1148"},{"range":"1154","text":"1148"},{"range":"1155","text":"1148"},{"range":"1156","text":"1148"},{"range":"1157","text":"1148"},{"range":"1158","text":"1148"},{"range":"1159","text":"1148"},{"range":"1160","text":"1148"},{"range":"1161","text":"1148"},{"range":"1162","text":"1148"},{"range":"1163","text":"1148"},{"range":"1164","text":"1148"},{"range":"1165","text":"1148"},{"range":"1166","text":"1148"},{"range":"1167","text":"1148"},{"range":"1168","text":"1148"},{"range":"1169","text":"1148"},{"range":"1170","text":"1148"},{"range":"1171","text":"1148"},{"range":"1172","text":"1148"},{"range":"1173","text":"1148"},{"range":"1174","text":"1148"},{"range":"1175","text":"1148"},[2070,2072],"[dispatch]",[355,357],[843,845],[543,545],[803,805],[576,578],[572,574],[514,516],[496,498],[524,526],[607,609],[584,586],[535,537],[535,537],[533,535],[526,528],[607,609],[539,541],[553,555],[559,561],[512,514],[1007,1009],[925,927],[1038,1040],[895,897],[628,630],[1775,1777],[524,526]]