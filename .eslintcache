[{"/Users/ict/Documents/GitHub/certus-master/src/index.js":"1","/Users/ict/Documents/GitHub/certus-master/src/reportWebVitals.js":"2","/Users/ict/Documents/GitHub/certus-master/src/app/store/configureStore.js":"3","/Users/ict/Documents/GitHub/certus-master/src/app/layout/App.js":"4","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesActions.js":"5","/Users/ict/Documents/GitHub/certus-master/src/app/store/rootReducer.js":"6","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesConstants.js":"7","/Users/ict/Documents/GitHub/certus-master/src/app/async/asyncReducer.js":"8","/Users/ict/Documents/GitHub/certus-master/src/app/common/loadJs/loadJs.js":"9","/Users/ict/Documents/GitHub/certus-master/src/app/util/util.js":"10","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/Employees.jsx":"11","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Header.jsx":"12","/Users/ict/Documents/GitHub/certus-master/src/features/auth/Login.jsx":"13","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Footer.jsx":"14","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Sidebar.jsx":"15","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/homePage/HomePage.jsx":"16","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/SubHeader.jsx":"17","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/OrderPage.jsx":"18","/Users/ict/Documents/GitHub/certus-master/src/app/modal/ModalManager.jsx":"19","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/LabPage.jsx":"20","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/ExpensePage.jsx":"21","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/DocPage.jsx":"22","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/CounterpartyPage.jsx":"23","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/DocumentTypePage.jsx":"24","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/DutyPage.jsx":"25","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/DepartmentPage.jsx":"26","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/TrainingPage.jsx":"27","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/SignOfLegalActPage.jsx":"28","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/OrderSourcePage.jsx":"29","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/ServiceTypePage.jsx":"30","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/ExpenseGroupPage.jsx":"31","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/ReferencePage.jsx":"32","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/ExpenseTypePage.jsx":"33","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/SkillPage.jsx":"34","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/ProductServicePage.jsx":"35","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/PersonalPage.jsx":"36","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/ControlSystemPage.jsx":"37","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemReducer.js":"38","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceReducer.js":"39","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseReducer.js":"40","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalReducer.js":"41","/Users/ict/Documents/GitHub/certus-master/src/features/auth/authReducer.js":"42","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderReducer.js":"43","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesReducer.js":"44","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labReducer.js":"45","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docReducer.js":"46","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeReducer.js":"47","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeReducer.js":"48","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentReducer.js":"49","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceReducer.js":"50","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyReducer.js":"51","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActsReducer.js":"52","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceReducer.js":"53","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupReducer.js":"54","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyReducer.js":"55","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillReducer.js":"56","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingReducer.js":"57","/Users/ict/Documents/GitHub/certus-master/src/app/modal/modalReducer.js":"58","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeReducer.js":"59","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentActions.js":"60","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyActions.js":"61","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceActions.js":"62","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docActions.js":"63","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeActions.js":"64","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceActions.js":"65","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeActions.js":"66","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeActions.js":"67","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupActions.js":"68","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemActions.js":"69","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalActions.js":"70","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingActions.js":"71","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceActions.js":"72","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillActions.js":"73","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActActions.js":"74","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceConstants.js":"75","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseConstants.js":"76","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docConstants.js":"77","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labConstants.js":"78","/Users/ict/Documents/GitHub/certus-master/src/features/auth/authConstants.js":"79","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalConstants.js":"80","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeConstants.js":"81","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderConstants.js":"82","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceConstants.js":"83","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActConstants.js":"84","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentConstants.js":"85","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceConstants.js":"86","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeConstants.js":"87","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupConstants.js":"88","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemConstants.js":"89","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillConstants.js":"90","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyConstants.js":"91","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyConstants.js":"92","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingConstants.js":"93","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeConstants.js":"94","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyActions.js":"95","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labActions.js":"96","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseActions.js":"97","/Users/ict/Documents/GitHub/certus-master/src/features/auth/authActions.js":"98","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderActions.js":"99","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/ServiceTypePageModal.jsx":"100","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/TrainingPageModal.jsx":"101","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/SignOfLegalActPageModal.jsx":"102","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/SkillPageModal.jsx":"103","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/ReferencePageModal.jsx":"104","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/OrderSourcePageModal.jsx":"105","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/ExpenseTypePageModal.jsx":"106","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/ExpenseGroupPageModal.jsx":"107","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/DocumentTypePageModal.jsx":"108","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/CounterpartyPageModal.jsx":"109","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/DepartmentPageModal.jsx":"110","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/DutyPageModal.jsx":"111","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/SelectEmployeeModal.jsx":"112","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/OrderPageModal.jsx":"113","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/LabPageModal.jsx":"114","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/ProductServicePageModal.jsx":"115","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/ExpensePageModal.jsx":"116","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/ControlSystemPageModal.jsx":"117","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/EmployeesModal.jsx":"118","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/PersonalPageModal.jsx":"119","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/DocPageModal.jsx":"120","/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MyTextInput.jsx":"121","/Users/ict/Documents/GitHub/certus-master/src/app/modal/ModalWrapper.jsx":"122","/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MySearchableSelect.jsx":"123","/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MyTextArea.jsx":"124","/Users/ict/Documents/GitHub/certus-master/src/app/api/mockApi.js":"125","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDepartments.js":"126","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataCounterparty.js":"127","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleData.js":"128","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataCrm.js":"129","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDocs.js":"130","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDuties.js":"131","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpense.js":"132","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpenseGroups.js":"133","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDocumentTypes.js":"134","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataPersonal.js":"135","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataTraining.js":"136","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataSkill.js":"137","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataSignOfLegalAct.js":"138","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataProductService.js":"139","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataReference.js":"140","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataServiceTypes.js":"141","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataOrder.js":"142","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataLab.js":"143","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataOrderSource.js":"144","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpenseTypes.js":"145","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataControlSystem.js":"146","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/CrmPage.jsx":"147","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmReducer.js":"148","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmActions.js":"149","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmConstants.js":"150","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/CrmPageModal.jsx":"151","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/oparationReducer.js":"152","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/OperationPageModal.jsx":"153","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/OperationPage.jsx":"154","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/operationActions.js":"155","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/operationConstants.js":"156"},{"size":1200,"mtime":1629880496003,"results":"157","hashOfConfig":"158"},{"size":362,"mtime":1622812150000,"results":"159","hashOfConfig":"158"},{"size":340,"mtime":1622812150000,"results":"160","hashOfConfig":"158"},{"size":6578,"mtime":1629895043172,"results":"161","hashOfConfig":"158"},{"size":2836,"mtime":1629806163095,"results":"162","hashOfConfig":"158"},{"size":3082,"mtime":1622838556164,"results":"163","hashOfConfig":"158"},{"size":206,"mtime":1627761596848,"results":"164","hashOfConfig":"158"},{"size":1113,"mtime":1622812150000,"results":"165","hashOfConfig":"158"},{"size":332,"mtime":1622812150000,"results":"166","hashOfConfig":"158"},{"size":86,"mtime":1622812150000,"results":"167","hashOfConfig":"158"},{"size":15099,"mtime":1631262406607,"results":"168","hashOfConfig":"158"},{"size":17360,"mtime":1629897814671,"results":"169","hashOfConfig":"158"},{"size":10800,"mtime":1629895037821,"results":"170","hashOfConfig":"158"},{"size":1014,"mtime":1629895697457,"results":"171","hashOfConfig":"158"},{"size":17905,"mtime":1631008914294,"results":"172","hashOfConfig":"158"},{"size":3160,"mtime":1627898975812,"results":"173","hashOfConfig":"158"},{"size":6317,"mtime":1629887289904,"results":"174","hashOfConfig":"158"},{"size":9496,"mtime":1631262381956,"results":"175","hashOfConfig":"158"},{"size":3182,"mtime":1622839039789,"results":"176","hashOfConfig":"158"},{"size":8191,"mtime":1631262393658,"results":"177","hashOfConfig":"158"},{"size":9177,"mtime":1631262400495,"results":"178","hashOfConfig":"158"},{"size":8166,"mtime":1631262411616,"results":"179","hashOfConfig":"158"},{"size":7953,"mtime":1631262376701,"results":"180","hashOfConfig":"158"},{"size":7700,"mtime":1631262366497,"results":"181","hashOfConfig":"158"},{"size":7550,"mtime":1631262360131,"results":"182","hashOfConfig":"158"},{"size":7676,"mtime":1631262371778,"results":"183","hashOfConfig":"158"},{"size":8013,"mtime":1631262302897,"results":"184","hashOfConfig":"158"},{"size":7851,"mtime":1631262313972,"results":"185","hashOfConfig":"158"},{"size":7702,"mtime":1631262332667,"results":"186","hashOfConfig":"158"},{"size":7697,"mtime":1631262322557,"results":"187","hashOfConfig":"158"},{"size":7725,"mtime":1631262350791,"results":"188","hashOfConfig":"158"},{"size":7637,"mtime":1631262328343,"results":"189","hashOfConfig":"158"},{"size":7861,"mtime":1631262344141,"results":"190","hashOfConfig":"158"},{"size":7597,"mtime":1631262309035,"results":"191","hashOfConfig":"158"},{"size":8324,"mtime":1631262422059,"results":"192","hashOfConfig":"158"},{"size":9247,"mtime":1631362465539,"results":"193","hashOfConfig":"158"},{"size":8143,"mtime":1631280304583,"results":"194","hashOfConfig":"158"},{"size":1025,"mtime":1628852743940,"results":"195","hashOfConfig":"158"},{"size":1046,"mtime":1628597836707,"results":"196","hashOfConfig":"158"},{"size":955,"mtime":1627806591296,"results":"197","hashOfConfig":"158"},{"size":940,"mtime":1631361872295,"results":"198","hashOfConfig":"158"},{"size":1435,"mtime":1629895093330,"results":"199","hashOfConfig":"158"},{"size":1251,"mtime":1628150683677,"results":"200","hashOfConfig":"158"},{"size":993,"mtime":1622812150000,"results":"201","hashOfConfig":"158"},{"size":859,"mtime":1627773848450,"results":"202","hashOfConfig":"158"},{"size":765,"mtime":1627739745430,"results":"203","hashOfConfig":"158"},{"size":931,"mtime":1625828993049,"results":"204","hashOfConfig":"158"},{"size":987,"mtime":1627555191481,"results":"205","hashOfConfig":"158"},{"size":942,"mtime":1627565853027,"results":"206","hashOfConfig":"158"},{"size":920,"mtime":1627631449250,"results":"207","hashOfConfig":"158"},{"size":817,"mtime":1627567447817,"results":"208","hashOfConfig":"158"},{"size":1054,"mtime":1627633191611,"results":"209","hashOfConfig":"158"},{"size":1059,"mtime":1627593245797,"results":"210","hashOfConfig":"158"},{"size":994,"mtime":1627571704233,"results":"211","hashOfConfig":"158"},{"size":995,"mtime":1627568617551,"results":"212","hashOfConfig":"158"},{"size":833,"mtime":1627635051655,"results":"213","hashOfConfig":"158"},{"size":937,"mtime":1627639157761,"results":"214","hashOfConfig":"158"},{"size":631,"mtime":1622812150000,"results":"215","hashOfConfig":"158"},{"size":972,"mtime":1627577399226,"results":"216","hashOfConfig":"158"},{"size":2753,"mtime":1629809485371,"results":"217","hashOfConfig":"158"},{"size":2596,"mtime":1629810387697,"results":"218","hashOfConfig":"158"},{"size":2717,"mtime":1629811503789,"results":"219","hashOfConfig":"158"},{"size":2461,"mtime":1629806370524,"results":"220","hashOfConfig":"158"},{"size":2669,"mtime":1629809801864,"results":"221","hashOfConfig":"158"},{"size":2650,"mtime":1629811298566,"results":"222","hashOfConfig":"158"},{"size":2651,"mtime":1629811051864,"results":"223","hashOfConfig":"158"},{"size":2639,"mtime":1629894733903,"results":"224","hashOfConfig":"158"},{"size":2686,"mtime":1629810700120,"results":"225","hashOfConfig":"158"},{"size":2716,"mtime":1631372618702,"results":"226","hashOfConfig":"158"},{"size":2608,"mtime":1631362156133,"results":"227","hashOfConfig":"158"},{"size":2568,"mtime":1629812707045,"results":"228","hashOfConfig":"158"},{"size":2721,"mtime":1629895625034,"results":"229","hashOfConfig":"158"},{"size":2492,"mtime":1629812456161,"results":"230","hashOfConfig":"158"},{"size":2739,"mtime":1629812217061,"results":"231","hashOfConfig":"158"},{"size":254,"mtime":1622812150000,"results":"232","hashOfConfig":"158"},{"size":190,"mtime":1622812150000,"results":"233","hashOfConfig":"158"},{"size":158,"mtime":1622812150000,"results":"234","hashOfConfig":"158"},{"size":158,"mtime":1622812150000,"results":"235","hashOfConfig":"158"},{"size":88,"mtime":1622812150000,"results":"236","hashOfConfig":"158"},{"size":198,"mtime":1622812150000,"results":"237","hashOfConfig":"158"},{"size":230,"mtime":1625828993048,"results":"238","hashOfConfig":"158"},{"size":227,"mtime":1622812150000,"results":"239","hashOfConfig":"158"},{"size":210,"mtime":1622812150000,"results":"240","hashOfConfig":"158"},{"size":270,"mtime":1622812150000,"results":"241","hashOfConfig":"158"},{"size":214,"mtime":1622812150000,"results":"242","hashOfConfig":"158"},{"size":234,"mtime":1622812150000,"results":"243","hashOfConfig":"158"},{"size":230,"mtime":1622812150000,"results":"244","hashOfConfig":"158"},{"size":238,"mtime":1622812150000,"results":"245","hashOfConfig":"158"},{"size":246,"mtime":1622837695008,"results":"246","hashOfConfig":"158"},{"size":174,"mtime":1622812150000,"results":"247","hashOfConfig":"158"},{"size":166,"mtime":1622812150000,"results":"248","hashOfConfig":"158"},{"size":230,"mtime":1622812150000,"results":"249","hashOfConfig":"158"},{"size":198,"mtime":1622812150000,"results":"250","hashOfConfig":"158"},{"size":230,"mtime":1622812150000,"results":"251","hashOfConfig":"158"},{"size":2668,"mtime":1629809095160,"results":"252","hashOfConfig":"158"},{"size":2417,"mtime":1629805857624,"results":"253","hashOfConfig":"158"},{"size":2692,"mtime":1630933943433,"results":"254","hashOfConfig":"158"},{"size":933,"mtime":1629981376279,"results":"255","hashOfConfig":"158"},{"size":3257,"mtime":1631361358470,"results":"256","hashOfConfig":"158"},{"size":3841,"mtime":1629062365328,"results":"257","hashOfConfig":"158"},{"size":6484,"mtime":1629064241615,"results":"258","hashOfConfig":"158"},{"size":4081,"mtime":1629062482699,"results":"259","hashOfConfig":"158"},{"size":4405,"mtime":1629062615162,"results":"260","hashOfConfig":"158"},{"size":3884,"mtime":1629062236986,"results":"261","hashOfConfig":"158"},{"size":3934,"mtime":1629062091553,"results":"262","hashOfConfig":"158"},{"size":5121,"mtime":1629062045307,"results":"263","hashOfConfig":"158"},{"size":3923,"mtime":1629061513863,"results":"264","hashOfConfig":"158"},{"size":3934,"mtime":1629061064590,"results":"265","hashOfConfig":"158"},{"size":5457,"mtime":1629060633857,"results":"266","hashOfConfig":"158"},{"size":3921,"mtime":1629809432046,"results":"267","hashOfConfig":"158"},{"size":3784,"mtime":1629061259190,"results":"268","hashOfConfig":"158"},{"size":3875,"mtime":1628075336378,"results":"269","hashOfConfig":"158"},{"size":10209,"mtime":1631280340217,"results":"270","hashOfConfig":"158"},{"size":8025,"mtime":1631027303877,"results":"271","hashOfConfig":"158"},{"size":38577,"mtime":1631381131393,"results":"272","hashOfConfig":"158"},{"size":21693,"mtime":1631280353893,"results":"273","hashOfConfig":"158"},{"size":21640,"mtime":1631381212409,"results":"274","hashOfConfig":"158"},{"size":15969,"mtime":1631280323311,"results":"275","hashOfConfig":"158"},{"size":15552,"mtime":1631380968339,"results":"276","hashOfConfig":"158"},{"size":7465,"mtime":1631381316755,"results":"277","hashOfConfig":"158"},{"size":446,"mtime":1622812150000,"results":"278","hashOfConfig":"158"},{"size":2401,"mtime":1630328516602,"results":"279","hashOfConfig":"158"},{"size":1489,"mtime":1629895056083,"results":"280","hashOfConfig":"158"},{"size":409,"mtime":1622812150000,"results":"281","hashOfConfig":"158"},{"size":4407,"mtime":1625828667335,"results":"282","hashOfConfig":"158"},{"size":226,"mtime":1625828667337,"results":"283","hashOfConfig":"158"},{"size":581,"mtime":1625828667336,"results":"284","hashOfConfig":"158"},{"size":1774,"mtime":1625828667335,"results":"285","hashOfConfig":"158"},{"size":2493,"mtime":1625828667336,"results":"286","hashOfConfig":"158"},{"size":492,"mtime":1625828667337,"results":"287","hashOfConfig":"158"},{"size":227,"mtime":1625828667338,"results":"288","hashOfConfig":"158"},{"size":856,"mtime":1625828667339,"results":"289","hashOfConfig":"158"},{"size":248,"mtime":1625828667339,"results":"290","hashOfConfig":"158"},{"size":228,"mtime":1625828667338,"results":"291","hashOfConfig":"158"},{"size":1325,"mtime":1625828667342,"results":"292","hashOfConfig":"158"},{"size":553,"mtime":1625828667345,"results":"293","hashOfConfig":"158"},{"size":387,"mtime":1625828667344,"results":"294","hashOfConfig":"158"},{"size":255,"mtime":1625828667344,"results":"295","hashOfConfig":"158"},{"size":3331,"mtime":1625828667342,"results":"296","hashOfConfig":"158"},{"size":257,"mtime":1625828667343,"results":"297","hashOfConfig":"158"},{"size":254,"mtime":1625828751473,"results":"298","hashOfConfig":"158"},{"size":1451,"mtime":1625828667341,"results":"299","hashOfConfig":"158"},{"size":641,"mtime":1625828667341,"results":"300","hashOfConfig":"158"},{"size":234,"mtime":1625828667341,"results":"301","hashOfConfig":"158"},{"size":243,"mtime":1625828667340,"results":"302","hashOfConfig":"158"},{"size":3370,"mtime":1625828667336,"results":"303","hashOfConfig":"158"},{"size":8258,"mtime":1631262416416,"results":"304","hashOfConfig":"158"},{"size":796,"mtime":1627814841502,"results":"305","hashOfConfig":"158"},{"size":2448,"mtime":1629980588897,"results":"306","hashOfConfig":"158"},{"size":158,"mtime":1625829733005,"results":"307","hashOfConfig":"158"},{"size":51949,"mtime":1631280348661,"results":"308","hashOfConfig":"158"},{"size":965,"mtime":1628159887442,"results":"309","hashOfConfig":"158"},{"size":45242,"mtime":1631382749588,"results":"310","hashOfConfig":"158"},{"size":12812,"mtime":1631383269411,"results":"311","hashOfConfig":"158"},{"size":2503,"mtime":1631026505026,"results":"312","hashOfConfig":"158"},{"size":206,"mtime":1625829843569,"results":"313","hashOfConfig":"158"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"317"},"9beyy0",{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"317"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"317"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"317"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"317"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"317"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"317"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"317"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"317"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"317"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"317"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"317"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"317"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"317"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"317"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"317"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"317"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"317"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"317"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"317"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"317"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"317"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"317"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"411","messages":"412","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"317"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"317"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"317"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"317"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"317"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"317"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"317"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"317"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"317"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"317"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"317"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"317"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"317"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"317"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"317"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"317"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"317"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"317"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"555","messages":"556","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"557","usedDeprecatedRules":"317"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"317"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"317"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"317"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"317"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"317"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"317"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"317"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"317"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"317"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"317"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"317"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"317"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"317"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"317"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"602","messages":"603","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"317"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"607","messages":"608","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"317"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"612","messages":"613","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"317"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"317"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670","usedDeprecatedRules":"317"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"317"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"317"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"685","messages":"686","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"687","messages":"688","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"317"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},"/Users/ict/Documents/GitHub/certus-master/src/index.js",["692"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./app/layout/App\";\nimport configureStore from \"./app/store/configureStore\";\nimport { loadEmployees } from \"./features/dashboard/employees/employeesActions\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://api.certusbase.com/api/v1/\";\n\nconst store = configureStore();\n// store.dispatch(loadEmployees())\n\nconst rootEl = document.getElementById(\"root\");\n\nfunction render() {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </Provider>\n    </React.StrictMode>,\n    rootEl\n  );\n}\nif (module.hot) {\n  module.hot.accept(\"./app/layout/App\", function () {\n    setTimeout(render);\n  });\n}\nrender();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["693","694"],"/Users/ict/Documents/GitHub/certus-master/src/reportWebVitals.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/store/configureStore.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/layout/App.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesActions.js",["695","696","697","698"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleData } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport { createCounterparty } from \"../settings/counterparty/counterpartyActions\";\n// import { delay } from \"../../../app/common/util/util\";\n\nimport {\n  CREATE_EMPLOYEES,\n  DELETE_EMPLOYEES,\n  FETCH_EMPLOYEES,\n  UPDATE_EMPLOYEES,\n} from \"./employeesConstants\";\nconst url = \"employee\";\n\nexport function loadEmployees(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_EMPLOYEES,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\n\nexport function listenToEmployees(employees) {\n  return {\n    type: FETCH_EMPLOYEES,\n    payload: employees,\n  };\n}\n\nexport function createEmployees(employee) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, employee, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_EMPLOYEES, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateEmployees(employees) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, employees)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_EMPLOYEES,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteEmployees(employeesId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${employeesId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_EMPLOYEES, payload: employeesId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/app/store/rootReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/async/asyncReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/common/loadJs/loadJs.js",[],["699","700"],"/Users/ict/Documents/GitHub/certus-master/src/app/util/util.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/Employees.jsx",["701","702","703","704","705","706"],"import React, { useEffect } from \"react\";\nimport $ from \"jquery\";\nimport \"./contacts.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteEmployees, loadEmployees } from \"./employeesActions\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadDuties } from \"../settings/duty/dutyActions\";\nimport { loadDepartments } from \"../settings/department/departmentActions\";\n\nimport { Redirect } from \"react-router\";\nimport { toast } from \"react-toastify\";\nexport default function Employees() {\n  const dispatch = useDispatch();\n  const { employees } = useSelector((state) => state.employees);\n  const { loading } = useSelector((state) => state.async);\n  const { authenticated } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(loadEmployees());\n    $(\".view-grid\").on(\"click\", function (event) {\n      event.preventDefault();\n      /* Act on the event */\n\n      $(this).parents(\".switch\").find(\".view-list\").removeClass(\"active-view\");\n      $(this).addClass(\"active-view\");\n\n      $(this).parents(\".searchable-container\").removeClass(\"list\");\n      $(this).parents(\".searchable-container\").addClass(\"grid\");\n\n      $(this)\n        .parents(\".searchable-container\")\n        .find(\".searchable-items\")\n        .removeClass(\"list\");\n      $(this)\n        .parents(\".searchable-container\")\n        .find(\".searchable-items\")\n        .addClass(\"grid\");\n    });\n\n    $(\".view-list\").on(\"click\", function (event) {\n      event.preventDefault();\n      /* Act on the event */\n      $(this).parents(\".switch\").find(\".view-grid\").removeClass(\"active-view\");\n      $(this).addClass(\"active-view\");\n\n      $(this).parents(\".searchable-container\").removeClass(\"grid\");\n      $(this).parents(\".searchable-container\").addClass(\"list\");\n\n      $(this)\n        .parents(\".searchable-container\")\n        .find(\".searchable-items\")\n        .removeClass(\"grid\");\n      $(this)\n        .parents(\".searchable-container\")\n        .find(\".searchable-items\")\n        .addClass(\"list\");\n    });\n    return function cleanup() {\n      // dispatch(loadEmployees());\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {/* BEGIN HOMEPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-spacing layout-top-spacing\" id=\"cancel-row\">\n          <div className=\"col-lg-12\">\n            <div className=\"widget-content searchable-container list\">\n              <div className=\"row\">\n                <div className=\"col-xl-4 col-lg-5 col-md-5 col-sm-7 filtered-list-search layout-spacing align-self-center\">\n                  <form className=\"form-inline my-2 my-lg-0\">\n                    <div className=\"d-flex justify-content-sm-end justify-content-center\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-search\"\n                      >\n                        <circle cx={11} cy={11} r={8} />\n                        <line x1={21} y1={21} x2=\"16.65\" y2=\"16.65\" />\n                      </svg>\n                      <input\n                        type=\"text\"\n                        className=\"form-control product-search\"\n                        id=\"input-search\"\n                        placeholder=\"Axtar...\"\n                      />\n                    </div>\n                  </form>\n                </div>\n                <div className=\"col-xl-8 col-lg-7 col-md-7 col-sm-5 text-sm-right text-center layout-spacing align-self-center\">\n                  <div className=\"d-flex justify-content-sm-end justify-content-center\">\n                    <svg\n                      onClick={() => {\n                        dispatch(\n                          openModal({\n                            modalType: \"EmployeesModal\",\n                            modalProps: null,\n                          })\n                        );\n                        dispatch(loadDuties());\n                        dispatch(loadDepartments());\n                      }}\n                      type=\"button\"\n                      className=\"btn btn-rounded btn-primary mb-2 mr-2\"\n                      data-toggle=\"modal\"\n                      data-target=\"#exampleModal\"\n                      id=\"btn-add-contact\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-user-plus\"\n                    >\n                      <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                      <circle cx=\"8.5\" cy={7} r={4} />\n                      <line x1={20} y1={8} x2={20} y2={14} />\n                      <line x1={23} y1={11} x2={17} y2={11} />\n                    </svg>\n                    <div className=\"switch align-self-center\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-list view-list active-view mr-3\"\n                      >\n                        <line x1={8} y1={6} x2={21} y2={6} />\n                        <line x1={8} y1={12} x2={21} y2={12} />\n                        <line x1={8} y1={18} x2={21} y2={18} />\n                        <line x1={3} y1={6} x2={3} y2={6} />\n                        <line x1={3} y1={12} x2={3} y2={12} />\n                        <line x1={3} y1={18} x2={3} y2={18} />\n                      </svg>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-grid view-grid\"\n                      >\n                        <rect x={3} y={3} width={7} height={7} />\n                        <rect x={14} y={3} width={7} height={7} />\n                        <rect x={14} y={14} width={7} height={7} />\n                        <rect x={3} y={14} width={7} height={7} />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"searchable-items list\">\n                <div className=\"items items-header-section\">\n                  <div className=\"item-content\">\n                    <div>\n                      <div className=\"n-chk align-self-center text-center\">\n                        <label className=\"new-control new-checkbox checkbox-primary\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"new-control-input\"\n                            id=\"contact-check-all\"\n                          />\n                          <span className=\"new-control-indicator\" />\n                        </label>\n                      </div>\n                      <h4>Ad Vəzifə</h4>\n                    </div>\n                    <div className=\"user-email\">\n                      <h4>Email</h4>\n                    </div>\n\n                    <div className=\"user-phone\">\n                      <h4 style={{ marginLeft: 3 }}>Telefon</h4>\n                    </div>\n                    <div className=\"user-location\">\n                      <h4 style={{ marginLeft: 0 }}>Dövriyyə</h4>\n                    </div>\n                    <div className=\"action-btn\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-trash-2  delete-multiple\"\n                      >\n                        <polyline points=\"3 6 5 6 21 6\" />\n                        <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n                        <line x1={10} y1={11} x2={10} y2={17} />\n                        <line x1={14} y1={11} x2={14} y2={17} />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n                {loading && (\n                  <div className=\"loader\">\n                    {\" \"}\n                    <div className=\"loader-content text-center mt-5\">\n                      <div className=\"spinner-grow text-center align-self-center\"></div>\n                    </div>\n                  </div>\n                )}\n                {employees.map((employee) => (\n                  <div className=\"items\" key={employee.id}>\n                    <div className=\"item-content\">\n                      <div className=\"user-profile\">\n                        <div className=\"n-chk align-self-center text-center\">\n                          <label className=\"new-control new-checkbox checkbox-primary\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"new-control-input contact-chkbox\"\n                            />\n                            <span className=\"new-control-indicator\" />\n                          </label>\n                        </div>\n                        <img src=\"assets/img/90x90.jpg\" alt=\"avatar\" />\n                        <div className=\"user-meta-info\">\n                          <p className=\"user-name\" data-name={employee.name}>\n                            {employee.name + \" \" + employee.surname}\n                          </p>\n                          <p\n                            className=\"user-work\"\n                            data-occupation={employee.position_id.name}\n                          >\n                            {employee.position_id.name}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"user-email\">\n                        <p className=\"info-title\">Email: </p>\n                        <p\n                          className=\"usr-email-addr\"\n                          data-email={employee.mail}\n                        >\n                          {employee.mail}\n                        </p>\n                      </div>\n                      <div className=\"user-phone\">\n                        <p className=\"info-title\">Telefon: </p>\n                        <p className=\"usr-ph-no\" data-phone=\"+1 (070) 123-4567\">\n                          {employee.phone}\n                        </p>\n                      </div>\n                      <div className=\"user-location\">\n                        <p className=\"info-title\">Dövriyyə: </p>\n                        <p\n                          className=\"usr-location\"\n                          data-location={employee.turnover}\n                        >\n                          {employee.turnover}\n                        </p>\n                      </div>\n\n                      <div className=\"action-btn\">\n                        <svg\n                          onClick={() => {\n                            dispatch(\n                              openModal({\n                                modalType: \"EmployeesModal\",\n                                modalProps: { employee },\n                              })\n                            );\n                            dispatch(loadDuties());\n                            dispatch(loadDepartments());\n                          }}\n                          type=\"button\"\n                          className=\"btn btn-rounded btn-primary mb-2 mr-2\"\n                          data-toggle=\"modal\"\n                          data-target=\"#exampleModal\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-edit-2 edit\"\n                        >\n                          <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n                        </svg>\n                        <svg\n                          onClick={() => {\n                            if (\n                              prompt(\n                                `Zəhmət olmasa silmək üçün şifrəni daxil edin`\n                              ) == 9519\n                            ) {\n                              dispatch(deleteEmployees(employee.id));\n                            } else {\n                              toast.info(\n                                \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                              );\n                            }\n                          }}\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-user-minus delete\"\n                        >\n                          <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                          <circle cx=\"8.5\" cy={7} r={4} />\n                          <line x1={23} y1={11} x2={17} y2={11} />\n                        </svg>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* END HOMEPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Header.jsx",["707","708"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n// import useScript from \"../../../app/common/loadJs/loadJs\";\nimport { signOutUser } from \"../../auth/authActions\";\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  // useScript(\"../../../../public/assets/js/app.js\");\n  const auth = useSelector((state) => state.auth);\n  // useEffect(() => {\n  //   if (auth.authenticated === false) {\n  //     return <Redirect to=\"/\" />;\n\n  //   }\n  // }, []);\n  // if (auth.authenticated === false) {\n  //   return <Redirect to=\"/\" />;\n  // }\n  if (auth.authenticated === false) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className=\"header-container fixed-top\">\n      <header className=\"header navbar navbar-expand-sm\">\n        <ul className=\"navbar-item theme-brand flex-row  text-center\">\n          <li className=\"nav-item theme-logo\">\n            <a href=\"index.html\">\n              <img\n                src=\"https://zairov1905.github.io/certus-deploy/assets/img/apple-touch-icon.png\"\n                className=\"navbar-logo\"\n                alt=\"logo\"\n              />\n            </a>\n          </li>\n          <li className=\"nav-item theme-text\">\n            <a href=\"index.html\" className=\"nav-link\">\n              {\" \"}\n              CERTUS{\" \"}\n            </a>\n          </li>\n        </ul>\n        <ul className=\"navbar-item flex-row ml-md-0 ml-auto\">\n          <li className=\"nav-item align-self-center search-animated\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={24}\n              height={24}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"feather feather-search toggle-search\"\n            >\n              <circle cx={11} cy={11} r={8} />\n              <line x1={21} y1={21} x2=\"16.65\" y2=\"16.65\" />\n            </svg>\n            <form\n              className=\"form-inline search-full form-inline search\"\n              role=\"search\"\n            >\n              <div className=\"search-bar\">\n                <input\n                  type=\"text\"\n                  className=\"form-control search-form-control  ml-lg-auto\"\n                  placeholder=\"Axtar\"\n                />\n              </div>\n            </form>\n          </li>\n        </ul>\n        <ul className=\"navbar-item flex-row ml-md-auto\">\n          {/* <li className=\"nav-item dropdown language-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"language-dropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://zairov1905.github.io/certus-deploy/assets/img/ca.png\" className=\"flag-width\" alt=\"flag\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"language-dropdown\"\n            >\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/de.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;German</span>\n              </a>\n              <a className=\"dropdown-item d-flex\" href=\"#\">\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/jp.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;Japanese</span>\n              </a>\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/fr.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;French</span>\n              </a>\n              <a\n                className=\"dropdown-item d-flex\"\n                href=\"#\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <img\n                  src=\"https://zairov1905.github.io/certus-deploy/assets/img/ca.png\"\n                  className=\"flag-width\"\n                  alt=\"flag\"\n                />{\" \"}\n                <span className=\"align-self-center\">&nbsp;English</span>\n              </a>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown message-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"messageDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-mail\"\n              >\n                <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\n                <polyline points=\"22,6 12,13 2,6\" />\n              </svg>\n            </a>\n            <div\n              className=\"dropdown-menu p-0 position-absolute\"\n              aria-labelledby=\"messageDropdown\"\n            >\n              <div>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Kara Young</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Daisy Anderson</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n                <a className=\"dropdown-item\">\n                  <div>\n                    <div className=\"media\">\n                      <div className=\"user-img\">\n                        <img\n                          className=\"usr-img rounded-circle\"\n                          src=\"https://zairov1905.github.io/certus-deploy/assets/img/90x90.jpg\"\n                          alt=\"profile\"\n                        />\n                      </div>\n                      <div className=\"media-body\">\n                        <div>\n                          <h5 className=\"usr-name\">Oscar Garner</h5>\n                          <p className=\"msg-title\">ACCOUNT UPDATE</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n              </div>\n            </div>\n          </li>\n          <li className=\"nav-item dropdown notification-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle\"\n              id=\"notificationDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-bell\"\n              >\n                <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\" />\n                <path d=\"M13.73 21a2 2 0 0 1-3.46 0\" />\n              </svg>\n              <span className=\"badge badge-success\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"notificationDropdown\"\n            >\n              <div className=\"notification-scroll\">\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-heart\"\n                    >\n                      <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Shaun Park</span> likes your\n                        photo.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-share-2\"\n                    >\n                      <circle cx={18} cy={5} r={3} />\n                      <circle cx={6} cy={12} r={3} />\n                      <circle cx={18} cy={19} r={3} />\n                      <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\" />\n                      <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\" />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Kelly Young</span> shared\n                        your post\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"dropdown-item\">\n                  <div className=\"media\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-tag\"\n                    >\n                      <path d=\"M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z\" />\n                      <line x1={7} y1={7} x2={7} y2={7} />\n                    </svg>\n                    <div className=\"media-body\">\n                      <div className=\"notification-para\">\n                        <span className=\"user-name\">Kelly Young</span> mentioned\n                        you in comment.\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n          */}\n          <li className=\"nav-item dropdown user-profile-dropdown\">\n            <a\n              href=\"#\"\n              onClick={(e) => e.preventDefault()}\n              className=\"nav-link dropdown-toggle user\"\n              id=\"userProfileDropdown\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"/assets/img/apple-touch-icon.png\" alt=\"avatar\" />\n            </a>\n            <div\n              className=\"dropdown-menu position-absolute\"\n              aria-labelledby=\"userProfileDropdown\"\n            >\n              <div>\n                <div className=\"dropdown-item\">\n                  <a href=\"user_profile.html\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-user\"\n                    >\n                      <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                      <circle cx={12} cy={7} r={4} />\n                    </svg>{\" \"}\n                    Admin\n                  </a>\n                </div>\n                {/* <div className=\"dropdown-item\">\n                  <a href=\"apps_mailbox.html\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-inbox\"\n                    >\n                      <polyline points=\"22 12 16 12 14 15 10 15 8 12 2 12\" />\n                      <path d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\" />\n                    </svg>{\" \"}\n                    Inbox\n                  </a>\n                </div>\n                <div className=\"dropdown-item\">\n                  <a href=\"auth_lockscreen.html\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-lock\"\n                    >\n                      <rect x={3} y={11} width={18} height={11} rx={2} ry={2} />\n                      <path d=\"M7 11V7a5 5 0 0 1 10 0v4\" />\n                    </svg>{\" \"}\n                    Lock Screen\n                  </a>\n                </div>\n                */}\n                <div className=\"dropdown-item\">\n                  <Link to=\"#\" onClick={() => dispatch(signOutUser())}>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"feather feather-log-out\"\n                    >\n                      <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\n                      <polyline points=\"16 17 21 12 16 7\" />\n                      <line x1={21} y1={12} x2={9} y2={12} />\n                    </svg>{\" \"}\n                    Çıxış\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/auth/Login.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Footer.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/Sidebar.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/homePage/HomePage.jsx",["709","710","711","712","713"],"import React, { useEffect } from \"react\";\n// import './dash_1.css';\nimport Chart from \"react-apexcharts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadEmployees } from \"../employees/employeesActions\";\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadEmployees());\n  }, []);\n  const { employees } = useSelector((state) => state.employees);\n\n  const series = [...employees.map((employee) => employee.performance)];\n  const chartOptions = {\n    labels: [...employees.map((employee) => employee.firstname)],\n    legend: { position: \"bottom\" },\n    \n  };\n  const basicBar = {\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      // fill: {\n      //   type: 'gradient',\n      //   gradient: {\n      //     shade: 'white',\n      //     type: \"vertical\",\n      //     shadeIntensity: 0.5,\n      //     gradientToColors: undefined, // optional, if not defined - uses the shades of same color in series\n      //     inverseColors: true,\n      //     opacityFrom: 1,\n      //     opacityTo: 1,\n      //     stops: [0, 50, 100],\n      //     colorStops: []\n      //   }\n      // }, \n      colors:['#F44336', '#E91E63', '#9C27B0','#F44336', '#E91E63', '#9C27B0','#F44336', '#E91E63', '#9C27B0','#F44336', '#E91E63', '#9C27B0'],\n      xaxis: {\n        categories: [\n          \"Yanvar\",\n          \"Fevral\",\n          \"Mart\",\n          \"Aprel\",\n          \"May\",\n          \"Iyun\",\n          \"Iyul\",\n          \"Avqust\",\n          \"Sentyabr\",\n          \"Oktyabr\",\n          \"Noyabr\",\n          \"Dekabr\"\n        ],\n      },\n    },\n    series: [\n      {\n        name: \"series-1\",\n        data: [30, 40, 45, 50, 49, 60, 70, 91, 70,72,80],\n      },\n    ],\n  };\n\n  return (\n    <React.Fragment>\n      {/* BEGIN HOMEPAGE CONTAINER */}\n\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-8 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing\">\n            <div className=\"widget\">\n              <div className=\"widget-heading\">\n                <h5>Xərc</h5>\n              </div>\n              <div className=\"widget-content widget-content-area\">\n                {/* <Chart\n                  options={basicBar.options}\n                  series={basicBar.series}\n                  type=\"bar\"\n                  width=\"100%\"\n                  height=\"302\"\n                /> */}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing\">\n            <div className=\"widget\">\n              <div className=\"widget-heading\">\n                <h5>İşçilər-Performans</h5>\n              </div>\n              <div className=\"widget-content widget-content-area\">\n                {/* <Chart\n                  options={chartOptions}\n                  series={series}\n                  type=\"pie\"\n                  width=\"100%\"\n                  height=\"400\"\n\n                /> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END HOMEPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/commonPage/SubHeader.jsx",["714"],"import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport default function SubHeader() {\n  const location = useLocation();\n  console.log(location);\n  let currentLocation;\n  switch (location.pathname) {\n    case \"/crm\":\n      currentLocation = \"Müştərilər\";\n      break;\n    case \"/employees\":\n      currentLocation = \"İşçilər\";\n      break;\n    case \"/orders\":\n      currentLocation = \"Sifarişlər\";\n      break;\n    case \"/operation\":\n      currentLocation = \"Əməliyyatlər\";\n      break;\n    case \"/labs\":\n      currentLocation = \"Laboratoriyalər\";\n      break;\n    case \"/documents\":\n      currentLocation = \"Sənədlər\";\n      break;\n    case \"/expense\":\n      currentLocation = \"Gəlir-Xərclər\";\n      break;\n    case \"/settings/documentTypes\":\n      currentLocation = \"Tənzimləmələr / Sənəd Növləri\";\n      break;\n    case \"/settings/departments\":\n      currentLocation = \"Tənzimləmələr / Struktur Bölmələr\";\n      break;\n    case \"/settings/counterparties\":\n      currentLocation = \"Tənzimləmələr / Kontragenlər\";\n      break;\n    case \"/settings/expenseGroups\":\n      currentLocation = \"Tənzimləmələr / Gəlir Xərc Qrupları\";\n      break;\n    case \"/settings/expenseTypes\":\n      currentLocation = \"Tənzimləmələr / Gəlir Xərc Növləri\";\n      break;\n    case \"/settings/serviceTypes\":\n      currentLocation = \"Tənzimləmələr / Xidmət Növləri\";\n      break;\n    case \"/settings/orderSources\":\n      currentLocation = \"Tənzimləmələr / Sifariş Mənbəyi\";\n      break;\n    case \"/settings/references\":\n      currentLocation = \"Tənzimləmələr / Referanslar\";\n      break;\n    case \"/settings/signOfLegalAct\":\n      currentLocation = \"Tənzimləmələr / Texniki Aktlar\";\n      break;\n    case \"/settings/trainings\":\n      currentLocation = \"Tənzimləmələr / Təlimlər\";\n      break;\n    case \"/settings/skills\":\n      currentLocation = \"Tənzimləmələr / Sərtiştələr\";\n      break;\n    case \"/certificates/productService\":\n      currentLocation = \"Sertifikatlar / Məhsul Xidmət Sertifikatları\";\n      break;\n    case \"/certificates/personal\":\n      currentLocation = \"Sertifikatlar / Personal Sertifikatları\";\n      break;\n    case \"/certificates/controlSystem\":\n      currentLocation = \"Sertifikatlar / İdarəetmə Sistemləri Sertifikatı\";\n      break;\n \n\n    default:\n      break;\n  }\n  return (\n    <div className=\"sub-header-container\">\n      <header className=\"header navbar navbar-expand-sm\">\n        <a\n          href=\"#\"\n          onClick={(e) => e.preventDefault()}\n          className=\"sidebarCollapse\"\n          data-placement=\"bottom\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-menu\"\n          >\n            <line x1={3} y1={12} x2={21} y2={12} />\n            <line x1={3} y1={6} x2={21} y2={6} />\n            <line x1={3} y1={18} x2={21} y2={18} />\n          </svg>\n        </a>\n        <ul className=\"navbar-nav flex-row\">\n          <li>\n            <div className=\"page-header\">\n              <nav className=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\">\n                  <li className=\"breadcrumb-item\">\n                    <Link to=\"/\">Ana Səhifə</Link>\n                  </li>\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    <span>{currentLocation}</span>\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </li>\n        </ul>\n        {/* <ul className=\"navbar-nav flex-row ml-auto \">\n          <li className=\"nav-item more-dropdown\">\n            <div className=\"dropdown  custom-dropdown-icon\">\n              <a\n                className=\"dropdown-toggle btn\"\n                href=\"#\"\n                role=\"button\"\n                id=\"customDropdown\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <span>Settings</span>{\" \"}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-chevron-down\"\n                >\n                  <polyline points=\"6 9 12 15 18 9\" />\n                </svg>\n              </a>\n              <div\n                className=\"dropdown-menu dropdown-menu-right\"\n                aria-labelledby=\"customDropdown\"\n              >\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Settings\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Settings\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Mail\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Mail\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Print\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Print\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Download\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Download\n                </a>\n                <a\n                  className=\"dropdown-item\"\n                  data-value=\"Share\"\n                  href=\"#\"\n                  onClick={(e) => e.preventDefault()}\n                >\n                  Share\n                </a>\n              </div>\n            </div>\n          </li>\n        </ul>\n       */}\n      </header>\n    </div>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/OrderPage.jsx",["715","716","717","718"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadCrm } from \"../crmPage/crmActions\";\nimport { loadDocs } from \"../docPage/docActions\";\nimport { loadEmployees } from \"../employees/employeesActions\";\nimport { loadOrderSource } from \"../settings/orderSource/orderSourceActions\";\nimport { loadReference } from \"../settings/reference/referenceActions\";\nimport { loadServiceType } from \"../settings/serviceType/serviceTypeActions\";\n\nimport { deleteOrder, loadOrder } from \"./orderActions\";\nexport default function OrderPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadOrder());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { orders, totalCount } = useSelector((state) => state.orders);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = orders;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadReference({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadReference({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"OrderPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadServiceType());\n        dispatch(loadReference());\n        dispatch(loadOrderSource());\n        dispatch(loadCrm());\n        dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Sifariş nömrəsi\",\n      selector: \"id\",\n      cell: (order) => <p>{order.id && `OR${order.id}`}</p>,\n      sortable: true,\n    },\n    {\n      name: \"Xidmət növü\",\n      cell: (order) => (\n        <p>{order.service_type_id && order.service_type_id.name}</p>\n      ),\n      sortable: true,\n    },\n    {\n      name: \"Müştəri\",\n      cell: (order) => (\n        <p>{order.customer_id && order.customer_id.customer_name}</p>\n      ),\n      sortable: true,\n    },\n\n    {\n      name: \"Sifariş tarixi\",\n      selector: \"date\",\n      sortable: true,\n    },\n    {\n      name: \"Referans\",\n      cell: (order) => <p>{order.reference_id && order.reference_id.name}</p>,\n      sortable: true,\n    },\n    {\n      name: \"Sifariş təyinatı\",\n      selector: \"description\",\n      sortable: true,\n    },\n\n    {\n      name: \"İcra vəziyyəti\",\n\n      cell: (order) => (\n        <button\n          data-toggle=\"modal\"\n          data-target=\"#exampleModal\"\n          onClick={() => {\n            dispatch(\n              openModal({\n                modalType: \"SelectEmployeeModal\",\n                modalProps: { order },\n              })\n            );\n            dispatch(loadEmployees());\n          }}\n          className=\"btn btn-sm btn-danger btn-rounded\"\n        >\n          <i className=\"flaticon-cancel-12\" /> İcraçı təyin et\n        </button>\n      ),\n    },\n    {\n      name: \"\",\n      cell: (order) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"OrderPageModal\",\n                  modalProps: { order },\n                })\n              );\n              dispatch(loadServiceType());\n              dispatch(loadReference());\n              dispatch(loadOrderSource());\n              dispatch(loadCrm());\n              dispatch(loadDocs());\n            }}\n            data-name=\"edit\"\n            id={order.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${order.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={order.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteOrder(order.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${order.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Sifarişlər\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/app/modal/ModalManager.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/LabPage.jsx",["719","720","721","722"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadDocs } from \"../docPage/docActions\";\n\nimport { deleteLab, loadLab } from \"./labActions\";\nexport default function LabsPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadLab());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { labs, totalCount } = useSelector((state) => state.labs);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = labs;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadLab({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadLab({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"LabPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Lab nömrəsi\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Lab adı\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"Müqavilə nömrəsi\",\n      sortable: true,\n\n      cell: (lab) => (\n        <p>{lab.document_id && lab.document_id.document_number}</p>\n      ),\n    },\n\n    {\n      name: \"Atestat nömrəsi\",\n      selector: \"certificate_number\",\n      sortable: true,\n    },\n    {\n      name: \"Dövriyyə\",\n      selector: \"turnover\",\n      sortable: true,\n    },\n    {\n      name: \"Əməliyyatlar\",\n      selector: \"operations\",\n      sortable: true,\n    },\n    {\n      name: \"Lab not\",\n      selector: \"note\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (lab) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"LabPageModal\",\n                  modalProps: { lab },\n                })\n              );\n              dispatch(loadDocs());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={lab.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${lab.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={lab.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteLab(lab.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${lab.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Laboratoriyalar\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/ExpensePage.jsx",["723","724","725","726"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadDocs } from \"../docPage/docActions\";\nimport { loadCounterparty } from \"../settings/counterparty/counterpartyActions\";\nimport { loadExpenseGroup } from \"../settings/expenseGroup/expenseGroupActions\";\nimport { loadExpenseType } from \"../settings/expenseType/expenseTypeActions\";\n\nimport { deleteExpense, loadExpense } from \"./expenseActions\";\nexport default function ExpensePage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadExpense());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { expenses, totalCount } = useSelector((state) => state.expenses);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = expenses;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadExpense({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadExpense({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ExpensePageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadCounterparty());\n        dispatch(loadExpenseGroup());\n        dispatch(loadExpenseType());\n        dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Gəlir-Xərc qrupu\",\n      sortable: true,\n      cell: (expense) => <p>{expense.income_expense_group_id.name}</p>,\n    },\n    {\n      name: \"Gəlir-Xərc növü\",\n      selector: \"expense_type_id\",\n      sortable: true,\n      cell: (expense) => (\n        <p>{expense.expense_type_id && expense.expense_type_id.name}</p>\n      ),\n    },\n    {\n      name: \"Tarix\",\n      selector: \"date\",\n      sortable: true,\n    },\n    {\n      name: \"Kontragent\",\n      sortable: true,\n      cell: (expense) => (\n        <p>{expense.contractor_id && expense.contractor_id.name}</p>\n      ),\n    },\n    {\n      name: \"Müqavilə\",\n      selector: \"document_id\",\n      cell: (expense) => (\n        <p>{expense.document_id && expense.document_id.document_number}</p>\n      ),\n      sortable: true,\n    },\n    {\n      name: \"Əməliyyat növü\",\n      selector: \"expenseInvoice\",\n      sortable: true,\n      cell: (expense) =>\n        expense.operation_id === 0 ? (\n          <span className=\"badge badge-danger\">{expense.faktura}</span>\n        ) : (\n          <span className=\"badge badge-success\">{expense.faktura}</span>\n        ),\n    },\n    {\n      name: \"\",\n      cell: (expense) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ExpensePageModal\",\n                  modalProps: { expense },\n                })\n              );\n              dispatch(loadCounterparty());\n              dispatch(loadExpenseGroup());\n              dispatch(loadExpenseType());\n              dispatch(loadDocs());\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={expense.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expense.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={expense.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteExpense(expense.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expense.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Gəlir-Xərc\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/DocPage.jsx",["727","728","729","730"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadDocumentTypes } from \"../settings/documentType/documentTypeActions\";\nimport { loadDocs, deleteDoc } from \"./docActions\";\n\nexport default function DocPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDocs());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { docs, totalCount } = useSelector((state) => state.docs);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = docs;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadDocs({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadDocs({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"DocPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadDocumentTypes());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Sənəd nömrəsi\",\n      selector: \"document_number\",\n      sortable: true,\n    },\n    {\n      name: \"Sənəd Növü\",\n      // selector: \"document_type\",\n      sortable: true,\n      cell: (doc) => <p>{doc.document_type_id && doc.document_type_id.name}</p>,\n    },\n    {\n      name: \"Sənəd Təyinatı \",\n      cell: (doc) => {\n        if (doc.document_for === 1) {\n          return \"Satış\";\n        } else if (doc.document_for === 0) {\n          return \"Alış\";\n        }\n      },\n    },\n    {\n      name: \"Sənəd Predmeti\",\n      selector: \"about\",\n      sortable: true,\n    },\n    {\n      name: \"Tarix\",\n      selector: \"date\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (doc) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"DocPageModal\",\n                  modalProps: { doc },\n                })\n              );\n              dispatch(loadDocumentTypes());\n            }}\n            data-name=\"edit\"\n            id={doc.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${doc.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={doc.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteDoc(doc.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${doc.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Sənədlər\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/CounterpartyPage.jsx",["731","732","733","734"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadCounterparty } from \"./counterpartyActions\";\nimport { deleteCounterparty } from \"./counterpartyActions\";\n\nexport default function CounterpartyPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCounterparty());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { counterparties, totalCount } = useSelector(\n    (state) => state.counterparties\n  );\n  const data = counterparties;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadCounterparty({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadCounterparty({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"CounterpartyPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Ad\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"Haqqında\",\n      selector: \"about\",\n      sortable: true,\n    },\n    {\n      name: \"Nömrə\",\n      selector: \"contact\",\n      sortable: true,\n    },\n    // {\n    //   name: \"Kateqoriya\",\n    //   selector: \"counterpartyCategory\",\n    //   sortable: true,\n    // },\n    {\n      name: \"\",\n      cell: (counterparty) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"CounterpartyPageModal\",\n                  modalProps: { counterparty },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={counterparty.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${counterparty.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={counterparty.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteCounterparty(counterparty.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${counterparty.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Kontragentlər\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/DocumentTypePage.jsx",["735","736","737"],"import React, { useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteDocumentType, loadDocumentTypes } from \"./documentTypeActions\";\n\nexport default function DocumetTypePage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDocumentTypes());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { documentTypes, totalCount } = useSelector(\n    (state) => state.documentTypes\n  );\n  const data = documentTypes;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadDocumentTypes({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadDocumentTypes({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"DocumentTypePageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Sənəd növü\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (documentType) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"DocumentTypePageModal\",\n                  modalProps: { documentType },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={documentType.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${documentType.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={documentType.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteDocumentType(documentType.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${documentType.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Sənəd növləri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/DutyPage.jsx",["738","739","740","741"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteDuty, loadDuties } from \"./dutyActions\";\n\nexport default function DutyPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDuties());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { duties, totalCount } = useSelector((state) => state.duties);\n  const data = duties;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadDuties({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadDuties({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"DutyPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Vəzifəsi\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (duty) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"DutyPageModal\",\n                  modalProps: { duty },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={duty.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${duty.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={duty.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteDuty(duty.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${duty.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Vəzifələr\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/DepartmentPage.jsx",["742","743","744","745"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteDepartment, loadDepartments } from \"./departmentActions\";\n\nexport default function DepartmentPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadDepartments());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { departments, totalCount } = useSelector((state) => state.departments);\n  const data = departments;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadDepartments({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadDepartments({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"DepartmentPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Sturuktur bölmə\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (department) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"DepartmentPageModal\",\n                  modalProps: { department },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={department.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${department.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={department.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteDepartment(department.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${department.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Struktur Bölmələr\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/TrainingPage.jsx",["746","747","748","749"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadSkill } from \"../skill/skillActions\";\nimport { loadTraining } from \"./trainingActions\";\nimport { deleteTraining } from \"./trainingActions\";\n\nexport default function TrainingPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadTraining());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { trainings, totalCount } = useSelector((state) => state.trainings);\n  const data = trainings;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadTraining({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadTraining({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"TrainingPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadSkill());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Ad\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"Haqqında\",\n      selector: \"about\",\n      sortable: true,\n    },\n    {\n      name: \"Səriştələr\",\n      // selector: \"trainingSkills\",\n      sortable: true,\n      cell: (training) =>\n        training.skill_id && training.skill_id.map((skill) => `${skill.name} `),\n    },\n    // {\n    //   name: \"Kateqoriya\",\n    //   selector: \"trainingCategory\",\n    //   sortable: true,\n    // },\n    {\n      name: \"\",\n      cell: (training) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"TrainingPageModal\",\n                  modalProps: { training },\n                })\n              );\n            }}\n            data-name=\"edit\"\n            id={training.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${training.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={training.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteTraining(training.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${training.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Təlimlər\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/SignOfLegalActPage.jsx",["750","751","752","753"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteSignOfLegalAct } from \"./signOfLegalActActions\";\nimport { loadSignOfLegalAct } from \"./signOfLegalActActions\";\n\nexport default function SignOfLegalActPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadSignOfLegalAct());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { signOfLegalActs, totalCount } = useSelector(\n    (state) => state.signOfLegalActs\n  );\n  const data = signOfLegalActs;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadSignOfLegalAct({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadSignOfLegalAct({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"SignOfLegalActPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Hüquqi normativ texniki aktın işarəsi\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (signOfLegalAct) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"SignOfLegalActPageModal\",\n                  modalProps: { signOfLegalAct },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={signOfLegalAct.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${signOfLegalAct.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={signOfLegalAct.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteSignOfLegalAct(signOfLegalAct.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${signOfLegalAct.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Hüquqi normativ texniki aktın işarələri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/OrderSourcePage.jsx",["754","755","756","757"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteOrderSource, loadOrderSource } from \"./orderSourceActions\";\n\nexport default function OrderSourcePage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadOrderSource());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { orderSources, totalCount } = useSelector(\n    (state) => state.orderSources\n  );\n  const data = orderSources;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadOrderSource({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadOrderSource({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"OrderSourcePageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Sifariş mənbəyi\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (orderSource) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"OrderSourcePageModal\",\n                  modalProps: { orderSource },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={orderSource.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${orderSource.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={orderSource.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteOrderSource(orderSource.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${orderSource.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Sifariş mənbəyi\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/ServiceTypePage.jsx",["758","759","760","761"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteServiceType, loadServiceType } from \"./serviceTypeActions\";\n\nexport default function ServiceTypePage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadServiceType());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { serviceTypes, totalCount } = useSelector(\n    (state) => state.serviceTypes\n  );\n  const data = serviceTypes;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadServiceType({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadServiceType({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ServiceTypePageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Xidmət Növü\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (serviceType) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ServiceTypePageModal\",\n                  modalProps: { serviceType },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={serviceType.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${serviceType.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={serviceType.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteServiceType(serviceType.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${serviceType.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Xidmət Növləri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/ExpenseGroupPage.jsx",["762","763","764","765"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteExpenseGroup, loadExpenseGroup } from \"./expenseGroupActions\";\n\nexport default function ExpenseGroupPage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadExpenseGroup());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { expenseGroups, totalCount } = useSelector(\n    (state) => state.expenseGroups\n  );\n  const data = expenseGroups;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadExpenseGroup({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadExpenseGroup({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ExpenseGroupPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Gəlir-Xərc qrupu\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (expenseGroup) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ExpenseGroupPageModal\",\n                  modalProps: { expenseGroup },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={expenseGroup.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expenseGroup.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={expenseGroup.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteExpenseGroup(expenseGroup.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expenseGroup.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Gəlir-Xərc qrupları\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/ReferencePage.jsx",["766","767","768","769"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { deleteReference, loadReference } from \"./referenceActions\";\n\nexport default function ReferencePage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadReference());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { references, totalCount } = useSelector((state) => state.references);\n  const data = references;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadReference({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadReference({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ReferencePageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Referans\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (reference) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ReferencePageModal\",\n                  modalProps: { reference },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={reference.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${reference.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={reference.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteReference(reference.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${reference.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Referanslar\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/ExpenseTypePage.jsx",["770","771","772","773"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadExpenseGroup } from \"../expenseGroup/expenseGroupActions\";\nimport { deleteExpenseType, loadExpenseType } from \"./expenseTypeActions\";\n\nexport default function ExpenseTypePage() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadExpenseType());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { expenseTypes, totalCount } = useSelector(\n    (state) => state.expenseTypes\n  );\n  const data = expenseTypes;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadExpenseType({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadExpenseType({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ExpenseTypePageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadExpenseGroup());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"ID\",\n      selector: \"id\",\n      sortable: true,\n    },\n    {\n      name: \"Gəlir-Xərc növü\",\n      selector: \"name\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (expenseType) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ExpenseTypePageModal\",\n                  modalProps: { expenseType },\n                })\n              );\n              dispatch(loadExpenseGroup());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={expenseType.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expenseType.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={expenseType.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteExpenseType(expenseType.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${expenseType.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Gəlir-Xərc növləri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/SkillPage.jsx",["774","775","776","777"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\nimport { loadSkill } from \"./skillActions\";\nimport { deleteSkill } from \"./skillActions\";\n\nexport default function SkillPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadSkill());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { skills, totalCount } = useSelector((state) => state.skills);\n  const data = skills;\n\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadSkill({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadSkill({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"SkillPageModal\",\n            modalProps: null,\n          })\n        );\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Ad\",\n      selector: \"name\",\n      sortable: true,\n    },\n    {\n      name: \"Haqqında\",\n      selector: \"about\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (skill) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"SkillPageModal\",\n                  modalProps: { skill },\n                })\n              );\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={skill.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${skill.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={skill.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteSkill(skill.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${skill.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Səriştələr\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/ProductServicePage.jsx",["778","779","780"],"import React, { useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\n\nimport {\n  deleteProductService,\n  loadProductService,\n} from \"./productServiceActions\";\n\nexport default function ProductServicePage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadProductService());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { productServices, totalCount } = useSelector(\n    (state) => state.productServices\n  );\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = productServices;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadProductService({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadProductService({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ProductServicePageModal\",\n            modalProps: null,\n          })\n        );\n        // dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"SN kodu\",\n      selector: \"sn_code_id\",\n      sortable: true,\n    },\n    {\n      name: \"Reyestr nömrəsi\",\n      selector: \"registration_number\",\n      sortable: true,\n    },\n\n    {\n      name: \"Blank nömrəsi\",\n      selector: \"blank_number\",\n      sortable: true,\n    },\n    {\n      name: \"Akkreditasiya sahəsində sıra nömrəsi\",\n      selector: \"serial_number\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikatın verilmə tarixi\",\n      selector: \"issue_date\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikatın qüvvədən düşdüyü tarix\",\n      selector: \"expiration_date\",\n      sortable: true,\n    },\n    {\n      name: \"\",\n      cell: (productService) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ProductServicePageModal\",\n                  modalProps: { productService },\n                })\n              );\n              // dispatch(loadDocs());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={productService.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${productService.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={productService.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteProductService(productService.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${productService.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Məhsul/Xidmət sertifikatları\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/PersonalPage.jsx",["781","782","783"],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/ControlSystemPage.jsx",["784","785"],"import React, { useEffect, useState } from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../../app/modal/modalReducer\";\n\nimport { deleteControlSystem, loadControlSystem } from \"./controlSystemActions\";\nexport default function ControlSystemPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadControlSystem());\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { controlSystems, totalCount } = useSelector(\n    (state) => state.controlSystems\n  );\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = controlSystems;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadControlSystem({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadControlSystem({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"ControlSystemPageModal\",\n            modalProps: null,\n          })\n        );\n        // dispatch(loadDocs());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"SN kodu\",\n      selector: \"sn_code_id\",\n      sortable: true,\n    },\n    {\n      name: \"Reyestr nömrəsi\",\n      selector: \"registration_number\",\n      sortable: true,\n    },\n\n    {\n      name: \"Blank nömrəsi\",\n      selector: \"blank_number\",\n      sortable: true,\n    },\n    {\n      name: \"Akkreditasiya sahəsində sıra nömrəsi\",\n      selector: \"serial_number\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikatın verilmə tarixi\",\n      selector: \"issue_date\",\n      sortable: true,\n    },\n    {\n      name: \"Sertifikatın qüvvədən düşdüyü tarix\",\n      selector: \"expiration_date\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (controlSystem) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"ControlSystemPageModal\",\n                  modalProps: { controlSystem },\n                })\n              );\n              // dispatch(loadDocs());\n\n              // dispatch(loadEmployees());\n            }}\n            data-name=\"edit\"\n            id={controlSystem.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${controlSystem.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={controlSystem.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteControlSystem(controlSystem.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${controlSystem.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN ORDERPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"İdarəetmə sertifikatları\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END ORDERPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseReducer.js",["786"],"import { sampleDataExpense } from \"../../../app/api/sampleDataExpense\";\nimport {\n  CREATE_EXPENSE,\n  DELETE_EXPENSE,\n  FETCH_EXPENSE,\n  UPDATE_EXPENSE,\n} from \"./expenseConstants\";\n\nconst initialState = {\n  expenses: []\n};\n\nexport default function expenseReducer(state = initialState, { type, payload,totalCount}) {\n  switch (type) {\n    case CREATE_EXPENSE:\n      return {\n        ...state,\n        expenses: [...state.expenses, payload],\n      };\n    case UPDATE_EXPENSE:\n      return {\n        ...state,\n        expenses: [\n          ...state.expenses.filter((expense) => expense.id !== payload.id),\n          payload,\n        ],\n      };\n\n    case DELETE_EXPENSE:\n      return {\n        ...state,\n        expenses: [...state.expenses.filter((expense) => expense.id !== payload)],\n      };\n    case FETCH_EXPENSE:\n      return {\n        ...state,\n        expenses: payload,\n        totalCount:totalCount\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/auth/authReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderReducer.js",["787"],"import { sampleDataOrder } from \"../../../app/api/sampleDataOrder\";\nimport {\n  CREATE_ORDER,\n  DELETE_ORDER,\n  FETCH_ORDER,\n  SEND_TO_OPERATION,\n  UPDATE_ORDER,\n} from \"./orderConstants\";\n\nconst initialState = {\n  orders: [],\n};\n\nexport default function orderReducer(\n  state = initialState,\n  { type, payload, totalCount }\n) {\n  switch (type) {\n    case CREATE_ORDER:\n      return {\n        ...state,\n        orders: [...state.orders, payload],\n      };\n    case UPDATE_ORDER:\n      return {\n        ...state,\n        orders: [\n          ...state.orders.filter((order) => order.id !== payload.id),\n          payload,\n        ],\n      };\n\n    case DELETE_ORDER:\n      return {\n        ...state,\n        orders: [...state.orders.filter((order) => order.id !== payload)],\n      };\n    case FETCH_ORDER:\n      // console.log(payload.filter(order=> order.executiveStatus == 0))\n      return {\n        ...state,\n        orders: payload.filter((order) => order.employee_id === null),\n        totalCount: totalCount,\n      };\n    case SEND_TO_OPERATION:\n      return {\n        ...state,\n        orders: [\n          ...state.orders.filter(\n            (order) => order.id !== payload.id\n          ),\n        ],\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/employeesReducer.js",["788"],"import { sampleData } from \"../../../app/api/sampleData\";\nimport {\n  CREATE_EMPLOYEES,\n  DELETE_EMPLOYEES,\n  FETCH_EMPLOYEES,\n  UPDATE_EMPLOYEES,\n} from \"./employeesConstants\";\n\nconst initialState = {\n  employees: [],\n};\n\nexport default function employeesReducer(\n  state = initialState,\n  { type, payload }\n) {\n  switch (type) {\n    case CREATE_EMPLOYEES:\n      return {\n        ...state,\n        employees: [...state.employees, payload],\n      };\n\n    case UPDATE_EMPLOYEES:\n      return {\n        ...state,\n        employees: [\n          ...state.employees.filter((employee) => employee.id !== payload.id),\n          payload,\n        ],\n      };\n    case DELETE_EMPLOYEES:\n      // console.log('silindi')\n      return {\n        ...state,\n        employees: [\n          ...state.employees.filter((employee) => employee.id !== payload),\n        ],\n      };\n    case FETCH_EMPLOYEES:\n      return {\n        ...state,\n        employees: payload,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labReducer.js",["789"],"import { sampleDataLab } from \"../../../app/api/sampleDataLab\";\nimport {\n  CREATE_LAB,\n  DELETE_LAB,\n  FETCH_LAB,\n  UPDATE_LAB,\n} from \"./labConstants\";\n\nconst initialState = {\n  labs: []\n};\n\nexport default function labReducer(state = initialState, { type, payload,totalCount}) {\n  switch (type) {\n    case CREATE_LAB:\n      return {\n        ...state,\n        labs: [...state.labs, payload],\n      };\n    case UPDATE_LAB:\n      return {\n        ...state,\n        labs: [\n          ...state.labs.filter((lab) => lab.id !== payload.id),\n          payload,\n        ],\n      };\n\n    case DELETE_LAB:\n      return {\n        ...state,\n        labs: [...state.labs.filter((lab) => lab.id !== payload)],\n      };\n    case FETCH_LAB:\n      return {\n        ...state,\n        labs: payload,\n        totalCount:totalCount\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActsReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/modal/modalReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentActions.js",["790","791","792"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataDepartments } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_DEPARTMENT,\n  DELETE_DEPARTMENT,\n  FETCH_DEPARTMENT,\n  UPDATE_DEPARTMENT,\n} from \"./departmentConstants\";\nconst url = 'structural_section'\nexport function loadDepartments(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_DEPARTMENT,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToDepartment(departments) {\n  return {\n    type: FETCH_DEPARTMENT,\n    payload: departments,\n  };\n}\n\nexport function createDepartment(departments) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, departments, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_DEPARTMENT, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateDepartment(department) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, department)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_DEPARTMENT,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteDepartment(departmentId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${departmentId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_DEPARTMENT, payload: departmentId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyActions.js",["793","794","795"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fethcSampleDataDuties } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_DUTY,\n  DELETE_DUTY,\n  FETCH_DUTY,\n  UPDATE_DUTY,\n} from \"./dutyConstants\";\nconst url = \"position\";\nexport function loadDuties(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_DUTY,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToDuty(duties) {\n  return {\n    type: FETCH_DUTY,\n    payload: duties,\n  };\n}\n\nexport function createDuty(duty) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, duty, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_DUTY, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateDuty(duty) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, duty)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_DUTY,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteDuty(dutyId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${dutyId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_DUTY, payload: dutyId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceActions.js",["796","797","798"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataReference } from \"../../../../app/api/mockApi\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport { delay } from \"../../../../app/util/util\";\nimport {\n  CREATE_REFERENCE,\n  DELETE_REFERENCE,\n  FETCH_REFERENCE,\n  UPDATE_REFERENCE,\n} from \"./referenceConstants\";\nconst url = \"rreference\";\nexport function loadReference(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_REFERENCE,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToReference(reference) {\n  return {\n    type: FETCH_REFERENCE,\n    payload: reference,\n  };\n}\n\nexport function createReference(reference) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, reference, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_REFERENCE, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n\n}\n\nexport function updateReference(reference) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, reference)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_REFERENCE,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n\n}\n\nexport function deleteReference(referenceId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${referenceId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_REFERENCE, payload: referenceId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docActions.js",["799","800","801"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fethcSampleDataDocs } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport { CREATE_DOC, DELETE_DOC, FETCH_DOC, UPDATE_DOC } from \"./docConstants\";\nconst url = \"document\";\n\nexport function loadDocs(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_DOC,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToDoc(docs) {\n  return {\n    type: FETCH_DOC,\n    payload: docs,\n  };\n}\n\nexport function createDoc(doc) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, doc, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_DOC, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateDoc(doc) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n\n    const docUpdated = await axios.put(`/${url}/update`, doc);\n    if (docUpdated.status === 200) {\n      toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      dispatch({\n        type: UPDATE_DOC,\n        payload: docUpdated.data.data,\n      });\n      dispatch(asyncActionFinish());\n    } else {\n      asyncActionError();\n    }\n  };\n}\n\nexport function deleteDoc(docId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${docId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_DOC, payload: docId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeActions.js",["802"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport {\n  CREATE_DOCUMENTTYPE,\n  DELETE_DOCUMENTTYPE,\n  FETCH_DOCUMENTTYPE,\n  UPDATE_DOCUMENTTYPE,\n} from \"./documentTypeConstants\";\nconst url = \"document_type\"\nexport function loadDocumentTypes(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_DOCUMENTTYPE,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToDocumentType(documentTypes) {\n  return {\n    type: FETCH_DOCUMENTTYPE,\n    payload: documentTypes,\n  };\n}\n\nexport function createDocumentType(documentType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, documentType, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_DOCUMENTTYPE, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateDocumentType(documentType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, documentType)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_DOCUMENTTYPE,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteDocumentType(documentTypeId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${documentTypeId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_DOCUMENTTYPE, payload: documentTypeId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceActions.js",["803"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport {\n  CREATE_ORDER_SOURCE,\n  DELETE_ORDER_SOURCE,\n  FETCH_ORDER_SOURCE,\n  UPDATE_ORDER_SOURCE,\n} from \"./orderSourceConstants\";\nconst url = 'order_source'\nexport function loadOrderSource(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_ORDER_SOURCE,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n\n}\nexport function listenToOrderSource(orderSource) {\n  return {\n    type: FETCH_ORDER_SOURCE,\n    payload: orderSource,\n  };\n}\n\nexport function createOrderSource(orderSource) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, orderSource, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_ORDER_SOURCE, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateOrderSource(orderSource) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, orderSource)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_ORDER_SOURCE,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteOrderSource(orderSourceId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${orderSourceId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_ORDER_SOURCE, payload: orderSourceId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeActions.js",["804"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport {\n  CREATE_EXPENSE_TYPE,\n  DELETE_EXPENSE_TYPE,\n  FETCH_EXPENSE_TYPE,\n  UPDATE_EXPENSE_TYPE,\n} from \"./expenseTypeConstants\";\nconst url = 'expense_type'\nexport function loadExpenseType(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_EXPENSE_TYPE,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToExpenseType(expenseTypes) {\n  return {\n    type: FETCH_EXPENSE_TYPE,\n    payload: expenseTypes,\n  };\n}\n\nexport function createExpenseType(expenseType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, expenseType, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_EXPENSE_TYPE, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateExpenseType(expenseType) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, expenseType)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_EXPENSE_TYPE,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteExpenseType(expenseTypeId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${expenseTypeId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_EXPENSE_TYPE, payload: expenseTypeId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeActions.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupActions.js",["805"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\n\nimport {\n  CREATE_EXPENSE_GROUP,\n  DELETE_EXPENSE_GROUP,\n  FETCH_EXPENSE_GROUP,\n  UPDATE_EXPENSE_GROUP,\n} from \"./expenseGroupConstants\";\nconst url = 'income_expense_group';\nexport function loadExpenseGroup(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_EXPENSE_GROUP,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToExpenseGroup(expenseGroups) {\n  return {\n    type: FETCH_EXPENSE_GROUP,\n    payload: expenseGroups,\n  };\n}\n\nexport function createExpenseGroup(expenseGroup) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, expenseGroup, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_EXPENSE_GROUP, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateExpenseGroup(expenseGroup) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, expenseGroup)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_EXPENSE_GROUP,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n\n}\n\nexport function deleteExpenseGroup(expenseGroupId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${expenseGroupId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_EXPENSE_GROUP, payload: expenseGroupId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemActions.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalActions.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingActions.js",["806"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport {\n  CREATE_TRAINING,\n  DELETE_TRAINING,\n  FETCH_TRAINING,\n  UPDATE_TRAINING,\n} from \"./trainingConstants\";\nconst url = \"training\";\nexport function loadTraining(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_TRAINING,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToTraining(trainings) {\n  return {\n    type: FETCH_TRAINING,\n    payload: trainings,\n  };\n}\n\nexport function createTraining(training) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, training, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_TRAINING, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateTraining(training) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, training)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_TRAINING,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteTraining(trainingId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${trainingId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_TRAINING, payload: trainingId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceActions.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillActions.js",["807"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport {\n  CREATE_SKILL,\n  DELETE_SKILL,\n  FETCH_SKILL,\n  UPDATE_SKILL,\n} from \"./skillConstants\";\nconst url = \"skill\";\n\nexport function loadSkill(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_SKILL,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToSkill(skills) {\n  return {\n    type: FETCH_SKILL,\n    payload: skills,\n  };\n}\n\nexport function createSkill(skill) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, skill, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_SKILL, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateSkill(skill) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, skill)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_SKILL,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteSkill(skillId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${skillId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_SKILL, payload: skillId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActActions.js",["808"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport {\n  CREATE_SIGN_OF_LEGAL_ACT,\n  DELETE_SIGN_OF_LEGAL_ACT,\n  FETCH_SIGN_OF_LEGAL_ACT,\n  UPDATE_SIGN_OF_LEGAL_ACT,\n} from \"./signOfLegalActConstants\";\nconst url = \"legal_act\";\n\nexport function loadSignOfLegalAct(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_SIGN_OF_LEGAL_ACT,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToSignOfLegalAct(counterparties) {\n  return {\n    type: FETCH_SIGN_OF_LEGAL_ACT,\n    payload: counterparties,\n  };\n}\n\nexport function createSignOfLegalAct(signOfLegalAct) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, signOfLegalAct, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_SIGN_OF_LEGAL_ACT, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateSignOfLegalAct(signOfLegalAct) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, signOfLegalAct)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_SIGN_OF_LEGAL_ACT,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteSignOfLegalAct(signOfLegalActId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${signOfLegalActId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_SIGN_OF_LEGAL_ACT, payload: signOfLegalActId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/productServiceConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/docConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/auth/authConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/personalConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/expenseTypeConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/referenceConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/signOfLegalActConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/departmentConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/orderSourceConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/documentTypeConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/expenseGroupConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/controlSystemConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/skillConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/dutyConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/trainingConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/serviceTypeConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/counterpartyActions.js",["809"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../../app/async/asyncReducer\";\nimport {\n  CREATE_COUNTERPARTY,\n  DELETE_COUNTERPARTY,\n  FETCH_COUNTERPARTY,\n  UPDATE_COUNTERPARTY,\n} from \"./counterpartyConstants\";\nconst url = \"contractor\";\nexport function loadCounterparty(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        dispatch({\n          type: FETCH_COUNTERPARTY,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToCounterparty(counterparties) {\n  return {\n    type: FETCH_COUNTERPARTY,\n    payload: counterparties,\n  };\n}\n\nexport function createCounterparty(counterparty) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, counterparty, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_COUNTERPARTY, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateCounterparty(counterparty) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, counterparty)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_COUNTERPARTY,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n\n}\n\nexport function deleteCounterparty(counterpartyId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${counterpartyId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_COUNTERPARTY, payload: counterpartyId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/labActions.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/expenseActions.js",["810","811","812"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataExpense } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport {\n  CREATE_EXPENSE,\n  DELETE_EXPENSE,\n  FETCH_EXPENSE,\n  UPDATE_EXPENSE,\n} from \"./expenseConstants\";\nconst url = \"expense\";\n\nexport function loadExpense(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        console.log(datas,'expense')\n        dispatch({\n          type: FETCH_EXPENSE,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToExpense(expenses) {\n  return {\n    type: FETCH_EXPENSE,\n    payload: expenses,\n  };\n}\n\nexport function createExpense(expense) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .post(`${url}/create`, expense, {\n        withCredentials: true,\n      })\n      .then((data) => {\n        dispatch({ type: CREATE_EXPENSE, payload: data.data.data });\n        dispatch(asyncActionFinish());\n        toast.success(\"Uğurla əlavə edildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function updateExpense(expense) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, expense)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_EXPENSE,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteExpense(expenseId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${expenseId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_EXPENSE, payload: expenseId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/auth/authActions.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/orderActions.js",["813","814","815"],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/serviceType/ServiceTypePageModal.jsx",["816"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createServiceType, updateServiceType } from \"./serviceTypeActions\";\n\nexport default function ServiceTypePageModal({ serviceType }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = serviceType\n    ? {\n        name: serviceType.name,\n      }\n    : {\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={serviceType ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            serviceType\n              ? await dispatch(updateServiceType({...values , id:serviceType.id}))\n              : await dispatch(createServiceType({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Xidmət növü\"\n                  label={serviceType && \"Xidmət növü\"}\n\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/training/TrainingPageModal.jsx",["817","818","819","820"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createTraining, updateTraining } from \"./trainingActions\";\nimport MySearchableSelect from \"../../../../app/common/form/MySearchableSelect\";\nimport { loadSkill } from \"../skill/skillActions\";\n\nexport default function TrainingPageModal({ training }) {\n  const dispatch = useDispatch();\n\n  const [loader, setLoader] = useState(true);\n  useEffect(async () => {\n    await dispatch(loadSkill());\n    setLoader(false);\n  }, []);\n\n  const [modal, setModal] = useState(false);\n  const { skills } = useSelector((state) => state.skills);\n  const skillIds = training && training.skill_id.map((skillIds) => skillIds.id);\n  // console.log(skillIds,'safasd');\n  const skillOptions =\n    skills &&\n    skills.map((skill) => {\n      return {\n        label: skill.name,\n        value: skill.id,\n      };\n    });\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = training\n    ? training\n    : {\n        name: \"\",\n        about: \"\",\n        skill_id: [],\n        // trainingCategory: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    about: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // skill_id: Yup.array().required(\"Mütləq doldurulmalıdır.\"),\n    // trainingCategory: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={training ? \"Redakte Et\" : \"Əlavə et\"}>\n      {loader ? (\n        <div className=\"loader text-center\">\n          {\" \"}\n          <div className=\"loader-content\">\n            <div className=\"spinner-grow align-self-center\"></div>\n          </div>\n        </div>\n      ) : (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={async (values, { setSubmitting, setErrors }) => {\n            try {\n              training\n                ? await dispatch(updateTraining({ ...values, id: training.id }))\n                : await dispatch(createTraining({ ...values }));\n              setSubmitting(false);\n              setModal(true);\n              dispatch(closeModal());\n            } catch (error) {\n              setErrors({ auth: error.message });\n              // console.log(error);\n              setSubmitting(false);\n            }\n          }}\n        >\n          {({ isSubmitting, isValid, dirty, errors, values }) => (\n            <Form id=\"emp\">\n              <div className=\"row\">\n                <div className={`col-md-12 ${training && \"mb-4\"}`}>\n                  <MyTextInput\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Təlim adı\"\n                    label={training && \"Təlim adı\"}\n                  />\n                </div>\n                <div className={`col-md-12 ${training && \"mb-4\"}`}>\n                  <MyTextInput\n                    id=\"about\"\n                    name=\"about\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Təlim haqqında\"\n                    label={training && \"Təlim haqqında\"}\n                  />\n                </div>\n                <div className=\"col-md-12\">\n                  {/* {console.log(values)} */}\n                  <MySearchableSelect\n                    id=\"\"\n                    name=\"skill_id\"\n                    options={skillOptions}\n                    // defaultValue={\n                    //   training &&\n                    //   skillOptions.filter(\n                    //     (skillOption) =>\n                    //     training.skill_id.id == skillOption.value\n                    //   )\n                    // }\n                    defaultValue={\n                      training &&\n                      skillOptions.filter((skillOption) =>\n                        skillIds.includes(parseInt(skillOption.value))\n                      )\n                    }\n                    isMulti\n                    placeholder=\"Təlimin səriştələri\"\n                    label={training && \"Təlimin səriştələri\"}\n                  />\n                </div>\n              </div>\n\n              <button\n                disabled={!isValid || !dirty || isSubmitting}\n                type=\"submit\"\n                // name=\"time\"\n                className=\"btn btn-primary float-right  btn-lg mt-3 \"\n              >\n                {isSubmitting && (\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={24}\n                    height={24}\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"feather feather-loader spin mr-2\"\n                  >\n                    <line x1={12} y1={2} x2={12} y2={6} />\n                    <line x1={12} y1={18} x2={12} y2={22} />\n                    <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                    <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                    <line x1={2} y1={12} x2={6} y2={12} />\n                    <line x1={18} y1={12} x2={22} y2={12} />\n                    <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                    <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                  </svg>\n                )}\n                Yadda saxla\n              </button>\n              <button\n                id=\"closeModal\"\n                onClick={() => {\n                  dispatch(closeModal());\n                }}\n                className=\"btn btn-lg float-right mt-3 mr-2\"\n                data-dismiss=\"modal\"\n              >\n                <i className=\"flaticon-cancel-12\" /> Ləğv et\n              </button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/signOfLegalAct/SignOfLegalActPageModal.jsx",["821","822","823"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport {\n  createSignOfLegalAct,\n  updateSignOfLegalAct,\n} from \"./signOfLegalActActions\";\n\nexport default function SignOfLegalActPageModal({ signOfLegalAct }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = signOfLegalAct\n    ? {\n        name: signOfLegalAct.name,\n      }\n    : {\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={signOfLegalAct ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            signOfLegalAct\n              ? await dispatch(\n                  updateSignOfLegalAct({ ...values, id: signOfLegalAct.id })\n                )\n              : await dispatch(createSignOfLegalAct({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Hüquqi normativ texniki aktın işarəsi\"\n                  label={\n                    signOfLegalAct && \"Hüquqi normativ texniki aktın işarəsi\"\n                  }\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/skill/SkillPageModal.jsx",["824","825","826"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createSkill, updateSkill } from \"./skillActions\";\n\nexport default function SkillPageModal({ skill }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = skill\n    ? {\n        name: skill.name && skill.name,\n        about: skill.about && skill.about\n      }\n    : {\n        name: \"\",\n        about: \"\",\n        // skillNumber: \"\",\n        // skillCategory: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    about: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // skillNumber: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // skillCategory: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={skill ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            skill\n              ? await dispatch(updateSkill({ ...values,id:skill.id}))\n              : await dispatch(createSkill({ ...values}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Səriştənin adı\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"about\"\n                  name=\"about\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Səriştə haqqında\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/reference/ReferencePageModal.jsx",["827","828","829"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createReference, updateReference } from \"./referenceActions\";\n\nexport default function ReferencePageModal({ reference }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = reference\n    ? {\n        name: reference.name && reference.name,\n      }\n    : {\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={reference ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            reference\n              ? await dispatch(updateReference({...values, id:reference.id}))\n              : await dispatch(createReference({ ...values}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Referans\"\n                  label={reference && \"Referans\"}\n\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/orderSource/OrderSourcePageModal.jsx",["830","831","832"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createOrderSource, updateOrderSource } from \"./orderSourceActions\";\n\nexport default function OrderSourcePageModal({ orderSource }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = orderSource\n    ? {\n        name: orderSource.name && orderSource.name,\n      }\n    : {\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={orderSource ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            orderSource\n              ? await dispatch(updateOrderSource({ ...values, id:orderSource.id}))\n              : await dispatch(createOrderSource({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sifariş mənbəyi\"\n                  label={orderSource && \"Sifariş mənbəyi\"}\n\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseType/ExpenseTypePageModal.jsx",["833","834"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createExpenseType, updateExpenseType } from \"./expenseTypeActions\";\nimport MySearchableSelect from \"../../../../app/common/form/MySearchableSelect\";\n\nexport default function ExpenseTypePageModal({ expenseType }) {\n  const dispatch = useDispatch();\n  const { expenseGroups } = useSelector((state) => state.expenseGroups);\n  let expenseGroupOptions =\n    expenseGroups &&\n    expenseGroups.map((expenseGroup) => {\n      return {\n        label: expenseGroup.name,\n        value: expenseGroup.id,\n      };\n    });\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = expenseType\n    ? {\n      name: expenseType.name && expenseType.name,\n      group_id: expenseType.group_id && expenseType.group_id.id ,\n    }\n    : {\n        name: \"\",\n        group_id: \"\",\n      };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    group_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={expenseType ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            expenseType\n              ? await dispatch(updateExpenseType({ ...values,id:expenseType.id}))\n              : await dispatch(createExpenseType({ ...values}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              {\" \"}\n              <div className={`col-md-12 ${expenseType && \"mb-4\"}`}>\n                <MySearchableSelect\n                  defaultValue={\n                    expenseType && {\n                      label: expenseType.group_id.name,\n                      value: expenseType.group_id.id,\n                    }\n                  }\n                  id=\"group_id\"\n                  name=\"group_id\"\n                  type=\"text\"\n                  options={expenseGroupOptions}\n                  label={expenseType && \"Gəlir-Xərc qrupu\"}\n\n                  // className=\"form-control\"\n                  placeholder=\"Gəlir-Xərc qrupu\"\n                />\n              </div>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  label={expenseType && \"Gəlir-Xərc növü\"}\n\n                  placeholder=\"Gəlir-Xərc növü\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/expenseGroup/ExpenseGroupPageModal.jsx",["835","836","837"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createExpenseGroup, updateExpenseGroup } from \"./expenseGroupActions\";\n\nexport default function ExpenseGroupPageModal({ expenseGroup }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = expenseGroup\n    ? { name: expenseGroup.name }\n    : {\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={expenseGroup ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            expenseGroup\n              ? await dispatch(updateExpenseGroup({ ...values, id:expenseGroup.id }))\n              : await dispatch(createExpenseGroup({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Gəlir-Xərc qrupu adı\"\n                  label={expenseGroup && \"Gəlir-Xərc qrupu adı\"}\n\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/documentType/DocumentTypePageModal.jsx",["838","839","840"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createDocumentType, updateDocumentType } from \"./documentTypeActions\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\n\nexport default function DocumentTypePageModal({ documentType }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = documentType\n    ? {\n      name: documentType.name && documentType.name,\n    }\n    : {\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={documentType ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            documentType\n              ? await dispatch(updateDocumentType({...values,id:documentType.id}))\n              : await dispatch(createDocumentType({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sənəd növü\"\n                  label={documentType && \"Sənəd növü\"}\n\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/counterparty/CounterpartyPageModal.jsx",["841","842","843"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\nimport { createCounterparty, updateCounterparty } from \"./counterpartyActions\";\n\nexport default function CounterpartyPageModal({ counterparty }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = counterparty ? {\n    name: counterparty.name && counterparty.name,\n    about: counterparty.name && counterparty.name,\n    contact: counterparty.name && counterparty.name,\n    // counterpartyCategory: \"\",lab.name && lab.name,\n  }: {\n    name: \"\",\n    about: \"\",\n    contact: \"\",\n    // counterpartyCategory: \"\",lab.name && lab.name,\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    about: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    contact: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={counterparty ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            counterparty\n              ? await dispatch(updateCounterparty({...values,id:counterparty.id}))\n              : await dispatch(createCounterparty({ ...values}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className={`col-md-12 ${counterparty && \"mb-4\"}`}>\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  label={counterparty && \"Kontragent adı\"}\n\n                  placeholder=\"Kontragent adı\"\n                />\n              </div>\n              <div className={`col-md-12 ${counterparty && \"mb-4\"}`}>\n                <MyTextInput\n                  id=\"about\"\n                  name=\"about\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Kontragent haqqında\"\n                  label={counterparty && \"Kontragent haqqında\"}\n\n                />\n              </div>\n              <div className={`col-md-12 ${counterparty && \"mb-4\"}`}>\n                <MyTextInput\n                  id=\"contact\"\n                  name=\"contact\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Kontragent əlaqə nömrəsi\"\n                  label={counterparty && \"Kontragent əlaqə nömrəsi\"}\n\n                />\n              </div>\n              {/* <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"counterpartyNumber\"\n                  name=\"counterpartyNumber\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Kontragent əlaqə nömrəsi\"\n                />\n              </div> */}\n              \n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/department/DepartmentPageModal.jsx",["844","845","846"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createDepartment, updateDepartment } from \"./departmentActions\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\n\nexport default function DepartmentPageModal({ department }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = department\n    ? {\n        name: department.name && department.name,\n      }\n    : {\n        name: \"\",\n      };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={department ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            department\n              ? await dispatch(updateDepartment({...values, id:department.id}))\n              : await dispatch(createDepartment({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sturuktur bölməsi\"\n                  label={department && \"Sturuktur bölməsi\"}\n\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/settings/duty/DutyPageModal.jsx",["847","848"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createDuty, updateDuty } from \"./dutyActions\";\nimport { closeModal } from \"../../../../app/modal/modalReducer\";\n\nexport default function DutyPageModal({ duty }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = duty ? {name:duty.name}: {\n    name: \"\",\n  };\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={duty ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            duty\n              ? await dispatch(updateDuty({...values,id:duty.id}))\n              : await dispatch(createDuty({ ...values, id: cuid() }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sturuktur bölməsi\"\n                  label={duty && \"Sturuktur bölməsi\"}\n\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/SelectEmployeeModal.jsx",["849","850"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport { createOrder, sendToOperation, updateOrder } from \"./orderActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\n\nexport default function SelectEmployeeModal({order}) {\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const { employees } = useSelector((state) => state.employees);\n\n  let employeeOptions = [];\n  employeeOptions =\n    employees &&\n    employees.map((employee) => {\n      return {\n        value: employee.id,\n        label: `${employee.name} ${employee.surname}`,\n      };\n    });\n  const initialValues = {\n    employee_id: \"\",\n    /////\n  };\n  const validationSchema = Yup.object({\n    employee_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-md\" header={\"İcraçı təyin et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            await dispatch(sendToOperation({ ...values,id:order.id}));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MySearchableSelect\n                  name=\"employee_id\"\n                  id=\"employee_id\"\n                  type=\"text\"\n                  options={employeeOptions}\n                  placeholder=\"İcraçı seç\"\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              İcra et\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/orderPage/OrderPageModal.jsx",["851","852","853"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createOrder, updateOrder } from \"./orderActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport moment from \"moment\";\n\nexport default function OrderPageModal({ order }) {\n  const { serviceTypes } = useSelector((state) => state.serviceTypes);\n  const { orderSources } = useSelector((state) => state.orderSources);\n  const { references } = useSelector((state) => state.references);\n  const { crms } = useSelector((state) => state.crms);\n  const { docs } = useSelector((state) => state.docs);\n  // console.log(docs);\n\n  let serviceTypeOptions = [];\n  let orderSourceOptions = [];\n  let referenceOptions = [];\n  let customerOptions = [];\n  let docOptions = [];\n\n  serviceTypeOptions =\n    serviceTypes &&\n    serviceTypes.map((serviceType) => {\n      return {\n        value: `${serviceType.id}`,\n        label: `${serviceType.name}`,\n      };\n    });\n\n  orderSourceOptions =\n    orderSources &&\n    orderSources.map((orderSource) => {\n      return {\n        value: `${orderSource.id}`,\n        label: `${orderSource.name}`,\n      };\n    });\n  referenceOptions =\n    references &&\n    references.map((reference) => {\n      return {\n        value: `${reference.id}`,\n        label: `${reference.name}`,\n      };\n    });\n  customerOptions =\n    crms &&\n    crms.map((crm) => {\n      return {\n        value: `${crm.id}`,\n        label: `${crm.customer_name}`,\n      };\n    });\n  docOptions =\n    docs &&\n    docs.map((doc) => {\n      return {\n        value: doc.document_number,\n        label: doc.document_number,\n      };\n    });\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = order\n    ? {\n        // number: order.number && order.number,\n        service_type_id: order.service_type_id && order.service_type_id.id,\n        customer_id: order.customer_id && order.customer_id.id,\n        order_source_id: order.order_source_id && order.order_source_id.id,\n        reference_id: order.reference_id && order.reference_id.id,\n        date: order.date && moment(order.date).format(\"YYYY-MM-DD\"),\n        description: order.description && order.description,\n      }\n    : {\n        number: \"\",\n        service_type_id: \"\",\n        customer_id: \"\",\n        order_source_id: \"\",\n        reference_id: \"\",\n        date: \"\",\n        description: \"\",\n\n        /////\n      };\n  const validationSchema = Yup.object({\n    // number: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    service_type_id: Yup.number().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_id: Yup.number(),\n    // order_source_id: Yup.number(),\n    // reference_id: Yup.number(),\n    // date: Yup.string(),\n    // description: \"\",\n  });\n\n  return (\n    <ModalWrapper\n      data={order && `Sifariş - OR${order.id}`}\n      size=\"modal-lg\"\n      header={order ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            order\n              ? await dispatch(\n                  updateOrder({\n                    ...values,\n                    id: order.id,\n                  })\n                )\n              : await dispatch(createOrder(values));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors, values }) => (\n          <Form id=\"emp\">\n            <div className={`row ${order && \"mb-4\"}`}>\n              {/* <div className=\"col-md-4\">\n                <MySearchableSelect\n                  id=\"number\"\n                  name=\"number\"\n                  type=\"text\"\n                  defaultValue={\n                    order && {\n                      label: order.number,\n                      value: parseInt(order.number),\n                    }\n                  }\n                  label={order && \"Sifariş Nömrəsi\"}\n\n                  options={docOptions}\n                  placeholder=\"Sifariş Nömrəsi\"\n                />\n              </div> */}\n              <div className=\"col-md-6\">\n                <MySearchableSelect\n                  id=\"service_type_id\"\n                  name=\"service_type_id\"\n                  type=\"text\"\n                  label={order && \"Xidmət Növü*\"}\n                  defaultValue={\n                    order && {\n                      label: order.service_type_id.name,\n                      value: parseInt(order.service_type_id.id),\n                    }\n                  }\n                  options={serviceTypeOptions}\n                  // getOptionLabel={ x => x.label}\n                  // getOptionValue={ x => x.value}\n                  // className=\"form-control\"\n                  placeholder=\"Xidmət Növü*\"\n                />\n              </div>\n              <div className=\"col-md-6\">\n                <MySearchableSelect\n                  defaultValue={\n                    order && {\n                      label: order.customer_id.customer_name,\n                      value: parseInt(order.customer_id.id),\n                    }\n                  }\n                  id=\"customer_id\"\n                  name=\"customer_id\"\n                  options={customerOptions}\n                  label={order && \"Müştəri\"}\n                  // className=\"form-control\"\n                  placeholder=\"Müştəri\"\n                />\n              </div>\n            </div>\n            <div className={`row ${order && \"mb-4\"}`}>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  defaultValue={\n                    order && {\n                      label: order.order_source_id.name,\n                      value: parseInt(order.order_source_id.id),\n                    }\n                  }\n                  id=\"order_source_id\"\n                  name=\"order_source_id\"\n                  type=\"text\"\n                  label={order && \"Sifariş Mənbəyi\"}\n                  options={orderSourceOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Sifariş Mənbəyi\"\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  defaultValue={\n                    order && {\n                      label: order.reference_id.name,\n                      value: parseInt(order.reference_id.id),\n                    }\n                  }\n                  name=\"reference_id\"\n                  id=\"reference_id\"\n                  type=\"text\"\n                  options={referenceOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Referans\"\n                  label={order && \"Referans\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"date\"\n                  id=\"date\"\n                  type={order ? \"date\" : \"text\"}\n                  onFocus={(e) => {\n                    e.currentTarget.type = \"date\";\n                    e.currentTarget.focus();\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Sifariş tarixi\"\n                  label={order && \"Sifariş tarixi\"}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextArea\n                  name=\"description\"\n                  id=\"description\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Sifariş Təyinatı\"\n                  label={order && \"Sifariş Təyinatı\"}\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/labPage/LabPageModal.jsx",["854","855","856","857","858","859"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport { createLab, updateLab } from \"./labActions\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport { createCounterparty } from \"../settings/counterparty/counterpartyActions\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport { loadOperation } from \"../operationPage/operationActions\";\n\nexport default function LabPageModal({ lab }) {\n  const [loader, setLoader] = useState(true);\n\n  useEffect(async () => {\n    dispatch(loadOperation());\n\n    setLoader(false);\n  }, []);\n  const { operations } = useSelector((state) => state.operations);\n  let whereIsOperation =\n    lab &&\n    operations.filter(\n      (operation) => operation.lab_id && operation.lab_id.id === lab.id\n    );\n  console.log(whereIsOperation);\n\n  const dispatch = useDispatch();\n  const { docs } = useSelector((state) => state.docs);\n  let docsOptions =\n    docs &&\n    docs.map((doc) => {\n      return {\n        label: doc.document_number,\n        value: doc.id,\n      };\n    });\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = lab\n    ? {\n        name: lab.name && lab.name,\n        document_id: lab.document_id && lab.document_id.id,\n        certificate_number: lab.certificate_number && lab.certificate_number,\n        turnover: lab.turnover && lab.turnover,\n        operations: lab.operations && lab.operations,\n        note: lab.note && lab.note,\n      }\n    : {\n        name: \"\",\n        document_id: \"\",\n        certificate_number: \"\",\n        turnover: \"\",\n        operations: \"\",\n        note: \"\",\n      };\n  const validationSchema = Yup.object({\n    // id:\"\",\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // document_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // certificate_number: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // turnover: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // operations: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // note: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      size=\"modal-lg\"\n      header={lab ? \"Redakte Et\" : \"Əlavə et\"}\n      data={lab && `Laboratoriya - LB${lab.id}`}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            lab\n              ? await dispatch(updateLab({ ...values, id: lab.id }))\n              : await dispatch(\n                  createLab({\n                    ...values,\n                  })\n                );\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className={`row ${lab && \"mb-4\"}`}>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Laboratoriya adı*\"\n                  label={lab && \"Laboratoriya adı*\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  id=\"document_id\"\n                  name=\"document_id\"\n                  // type=\"text\"\n                  defaultValue={\n                    lab && {\n                      label: lab.document_id.document_number,\n                      value: lab.document_id.id,\n                    }\n                  }\n                  options={docsOptions}\n                  // className=\"form-control\"\n                  placeholder=\"Müqavilə Nömrəsi\"\n                  label={lab && \"Müqavilə Nömrəsi\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"certificate_number\"\n                  name=\"certificate_number\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Atestat Nömrəsi\"\n                  label={lab && \"Atestat Nömrəsi\"}\n                />\n              </div>\n            </div>\n            <div className={`row ${lab && \"mb-4\"}`}>\n              <div className=\"col-md-12\">\n                <MyTextInput\n                  id=\"turnover\"\n                  name=\"turnover\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Dövriyyə\"\n                  label={lab && \"Dövriyyə\"}\n                />\n              </div>\n            </div>\n            {lab && (\n              <div className={`row ${lab && \"mb-4\"}`}>\n                <div className=\"col-md-12\">\n                  <MyTextArea\n                    id=\"operations\"\n                    name=\"operations\"\n                    type=\"text\"\n                    readOnly\n                    defaultValue={whereIsOperation && whereIsOperation.map(operation=> ` Əməliyyat: ${operation.number}`) }\n                    className=\"form-control\"\n                    placeholder=\"Əməliyyatlar\"\n                    label={lab && \"Əməliyyatlar\"}\n                  />\n                </div>\n              </div>\n            )}\n\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <MyTextArea\n                  id=\"note\"\n                  name=\"note\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Qeyd\"\n                  label={lab && \"Qeyd\"}\n                />\n              </div>\n            </div>\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/productServicePage/ProductServicePageModal.jsx",["860","861"],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/expensePage/ExpensePageModal.jsx",["862","863","864","865"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createExpense, updateExpense } from \"./expenseActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport moment from \"moment\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\n\nexport default function ExpensePageModal({ expense }) {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const { expenseGroups } = useSelector((state) => state.expenseGroups);\n  const { expenseTypes } = useSelector((state) => state.expenseTypes);\n  const { counterparties } = useSelector((state) => state.counterparties);\n  const { docs } = useSelector((state) => state.docs);\n  // OPTIONS XERC qruplari\n  const expenseGroupsOptions =\n    expenseGroups &&\n    expenseGroups.map((expenseGroup) => {\n      return {\n        label: expenseGroup.name,\n        value: expenseGroup.id,\n      };\n    });\n  // Options xerc novleri\n  const expenseTypesOptions =\n    expenseTypes &&\n    expenseTypes.map((expenseType) => {\n      return {\n        label: expenseType.name,\n        value: expenseType.id,\n        group_id: expenseType.group_id && expenseType.group_id.id,\n      };\n    });\n  console.log(expenseTypes);\n  //Options Kontragent\n  const counterpartiesOptions =\n    counterparties &&\n    counterparties.map((counterparty) => {\n      return {\n        label: counterparty.name,\n        value: counterparty.id,\n      };\n    });\n  //Options Sened\n  const docsOptions =\n    docs &&\n    docs.map((doc) => {\n      return {\n        label: doc.document_number,\n        value: doc.id,\n      };\n    });\n\n  // options əməliyyat növü\n\n  const operationTypeOptions = [\n    { label: \"Gəlir\", value: 1 },\n    { label: \"Xərc\", value: 0 },\n  ];\n\n  // options ödəniş\n  const paymentOptions = [\n    { label: \"Rəsmi\", value: 0 },\n    { label: \"Qeyri rəsmi\", value: 1 },\n  ];\n\n  // options ödəniş tipi\n  const paymentTypeOptions = [\n    { label: \"Bank\", value: 1 },\n    { label: \"Kassa\", value: 2 },\n    { label: \"Nəğd\", value: 3 },\n  ];\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = expense\n    ? {\n        income_expense_group_id:\n          expense.income_expense_group_id && expense.income_expense_group_id.id,\n        expense_type_id: expense.expense_type_id && expense.expense_type_id.id,\n        date: expense.date && moment(expense.date).format(\"YYYY-MM-DD\"),\n        contractor_id: expense.contractor_id && expense.contractor_id.id,\n        document_id: expense.document_id && expense.document_id.id,\n        // expenseInvoice: \"\",\n        operation_id: expense.operation_id && expense.operation_id,\n        payment_id: expense.payment_id && expense.payment_id,\n        payment_type_id: expense.payment_type_id && expense.payment_type_id,\n        faktura: expense.faktura && expense.faktura,\n\n        // Yeni elave edilen setirler asagidadir\n        amount: expense.amount && expense.amount,\n        edv: expense.edv && expense.edv,\n        note: expense.note && expense.note,\n      }\n    : {\n        income_expense_group_id: \"\",\n        expense_type_id: \"\",\n        date: \"\",\n        contractor_id: \"\",\n        document_id: \"\",\n        // expenseInvoice: \"\",\n        operation_id: \"\",\n        payment_id: \"\",\n        payment_type_id: \"\",\n        faktura: \"\",\n        amount: \"\",\n        edv: \"\",\n        note: \"\",\n      };\n  const validationSchema = Yup.object({\n    income_expense_group_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // expense_type_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // date: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // contractor_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // document_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // // expenseInvoice: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // operation_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // payment_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // payment_type_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // faktura: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper size=\"modal-lg\" header={expense ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            expense\n              ? await dispatch(updateExpense({ ...values, id: expense.id }))\n              : await dispatch(createExpense({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors, values }) => (\n          <Form id=\"emp\">\n            <div id=\"iconsAccordion\" className=\"accordion-icons\">\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingOne3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionOne\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionOne\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          viewBox=\"0 0 24 24\"\n                          width={24}\n                          height={24}\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          fill=\"none\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"css-i6dzq1\"\n                        >\n                          <polyline points=\"21 8 21 21 3 21 3 8\" />\n                          <rect x={1} y={3} width={22} height={5} />\n                          <line x1={10} y1={12} x2={14} y2={12} />\n                        </svg>\n                      </div>\n                      Umumi məlumatlar\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionOne\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingOne3\"\n                  data-parent=\"#iconsAccordion\"\n                  style={{}}\n                >\n                  <div className=\"card-body\">\n                    <div className={`row ${expense && \"mb-4\"}`}>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"date\"\n                          name=\"date\"\n                          type={expense ? \"date\" : \"text\"}\n                          onFocus={(e) => {\n                            e.currentTarget.type = \"date\";\n                            e.currentTarget.focus();\n                          }}\n                          className=\"form-control\"\n                          label={expense && \"Tarix\"}\n                          placeholder=\"Tarix\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"contractor_id\"\n                          id=\"contractor_id\"\n                          options={counterpartiesOptions}\n                          defaultValue={\n                            expense && {\n                              label: expense.contractor_id.name,\n                              value: expense.contractor_id.id,\n                            }\n                          }\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          label={expense && \"Kontragent\"}\n                          placeholder=\"Kontragent\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"document_id\"\n                          id=\"document_id\"\n                          // type=\"text\"\n                          defaultValue={\n                            expense && {\n                              label: expense.document_id.document_number,\n                              value: expense.document_id.id,\n                            }\n                          }\n                          options={docsOptions}\n                          // className=\"form-control\"\n                          label={expense && \"Müqavilə\"}\n                          placeholder=\"Müqavilə\"\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${expense && \"mb-4\"}`}>\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"operation_id\"\n                          id=\"operation_id\"\n                          // type=\"text\"\n                          options={operationTypeOptions}\n                          defaultValue={\n                            expense &&\n                            operationTypeOptions.filter(\n                              (operationTypeOption) =>\n                                expense.operation_id ===\n                                operationTypeOption.value\n                            )\n                          }\n                          // className=\"form-control\"\n                          label={expense && \"Əməliyyat növü\"}\n                          placeholder=\"Əməliyyat növü\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"payment_id\"\n                          id=\"payment_id\"\n                          // type=\"text\"\n                          options={paymentOptions}\n                          defaultValue={\n                            expense &&\n                            paymentOptions.filter(\n                              (paymentOption) =>\n                                expense.payment_id === paymentOption.value\n                            )\n                          }\n                          // className=\"form-control\"\n                          placeholder=\"Ödəniş\"\n                          label={expense && \"Ödəniş\"}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"payment_type_id\"\n                          id=\"payment_type_id\"\n                          // type=\"text\"\n                          options={paymentTypeOptions}\n                          defaultValue={\n                            expense &&\n                            paymentTypeOptions.filter(\n                              (paymentTypeOption) =>\n                                expense.payment_type_id ===\n                                paymentTypeOption.value\n                            )\n                          }\n                          // className=\"form-control\"\n                          placeholder=\"Ödəniş növü\"\n                          label={expense && \"Ödəniş növü\"}\n                        />\n                      </div>\n                    </div>\n\n                    <div className={`row ${expense && \"mb-4\"}`}>\n                      <div className=\"col-md-12\">\n                        <MySearchableSelect\n                          name=\"faktura\"\n                          id=\"faktura\"\n                          // type=\"text\"\n                          defaultValue={\n                            expense && {\n                              label: expense.document_id.document_number,\n                              value: expense.document_id.id,\n                            }\n                          }\n                          options={docsOptions}\n                          // className=\"form-control\"\n                          label={expense && \"Hesab faktura\"}\n                          placeholder=\"Hesab faktura\"\n                        />\n                        {/* <MyTextInput\n                          name=\"faktura\"\n                          id=\"faktura\"\n                          // type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Hesab faktura\"\n                          label={expense && \"Hesab faktura\"}\n                        /> */}\n                      </div>\n                    </div>\n\n                    <div className={`row ${expense && \"mb-4\"}`}>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"amount\"\n                          id=\"amount\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Məbləğ\"\n                          label={expense && \"Məbləğ\"}\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"edv\"\n                          id=\"edv\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"ƏDV\"\n                          value={(parseInt(values.amount) * 18) / 100}\n                          label={expense && \"ƏDV\"}\n                          readOnly\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${expense && \"mb-4\"}`}>\n                      <div className=\"col-md-12\">\n                        <MyTextArea\n                          name=\"note\"\n                          id=\"note\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Qeyd\"\n                          label={expense && \"Qeyd\"}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingOne3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionThree\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionThree\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          viewBox=\"0 0 24 24\"\n                          width={24}\n                          height={24}\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          fill=\"none\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"css-i6dzq1\"\n                        >\n                          <line x1={12} y1={1} x2={12} y2={23} />\n                          <path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n                        </svg>\n                      </div>\n                      Gəlir-Xərc üzrə təsnifatlar\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionThree\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingOne3\"\n                  data-parent=\"#iconsAccordion\"\n                  style={{}}\n                >\n                  <div className=\"card-body\">\n                    <div className={`row ${expense && \"mb-4\"}`}>\n                      <div className=\"col-md-6\">\n                        <MySearchableSelect\n                          id=\"income_expense_group_id\"\n                          name=\"income_expense_group_id\"\n                          options={expenseGroupsOptions}\n                          label={expense && \"Gəlir-Xərc qrupu\"}\n                          defaultValue={\n                            expense && {\n                              label: expense.income_expense_group_id.name,\n                              value: expense.income_expense_group_id.id,\n                            }\n                          }\n                          // type=\"text\"\n                          // className=\"form-control\"\n                          placeholder=\"Gəlir-Xərc qrupu\"\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MySearchableSelect\n                          id=\"expense_type_id\"\n                          name=\"expense_type_id\"\n                          options={\n                            values.income_expense_group_id\n                              ? expenseTypesOptions.filter(\n                                  (expenseType) =>\n                                    expenseType.group_id ===\n                                    values.income_expense_group_id\n                                )\n                              : expenseTypesOptions\n                          }\n                          defaultValue={\n                            expense && {\n                              label: expense.expense_type_id.name,\n                              value: expense.expense_type_id.id,\n                            }\n                          }\n                          type=\"text\"\n                          label={expense && \"Gəlir-Xərc Növü\"}\n                          // className=\"form-control\"\n                          placeholder=\"Gəlir-Xərc Növü\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/controlSystem/ControlSystemPageModal.jsx",["866","867","868"],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/employees/EmployeesModal.jsx",["869","870","871"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createEmployees, updateEmployees } from \"./employeesActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport { loadDuties } from \"../settings/duty/dutyActions\";\nimport { loadDepartments } from \"../settings/department/departmentActions\";\nimport moment from \"moment\";\n\nexport default function EmployeesModal({ employee }) {\n  const dispatch = useDispatch();\n\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n  useEffect(() => {\n    dispatch(loadDuties());\n    dispatch(loadDepartments());\n  }, []);\n  const { duties } = useSelector((state) => state.duties);\n  const { departments } = useSelector((state) => state.departments);\n  let dutyOptions =\n    duties &&\n    duties.map((duty) => {\n      return {\n        label: duty.name,\n        value: duty.id,\n      };\n    });\n\n  let departmentOptions =\n    departments &&\n    departments.map((department) => {\n      return {\n        label: department.name,\n        value: department.id,\n      };\n    });\n  const contractTypeOptions = [\n    { label: \"Əmək müqaviləsi\", value: 0 },\n    { label: \"Xidmət müqaviləsi\", value: 1 },\n  ];\n  const selectedContractType =\n    employee && employee.agreement_type === 1\n      ? { label: \"Xidmət müqaviləsi\", value: 1 }\n      : { label: \"Əmək müqaviləsi\", value: 0 };\n  const initialValues = employee\n    ? {\n        fin: employee.fin && employee.fin,\n        name: employee.name && employee.name,\n        surname: employee.surname && employee.surname,\n        dadname: employee.dadname && employee.dadname,\n        birthday: employee.birthday && employee.birthday,\n        address: employee.address && employee.address,\n        phone: employee.phone && employee.phone,\n\n        whatsapp: employee.whatsapp && employee.whatsapp,\n        telegram: employee.telegram && employee.telegram,\n        facebook: employee.facebook && employee.facebook,\n        linkedin: employee.linkedin && employee.linkedin,\n        twitter: employee.twitter && employee.twitter,\n        instagram: employee.instagram && employee.instagram,\n        mail: employee.mail && employee.mail,\n\n        position_id: employee.position_id && employee.position_id.id,\n        structural_section_id:\n          employee.structural_section_id && employee.structural_section_id.id,\n        date: employee.date && moment(employee.date).format(\"YYYY-MM-DD\"),\n        turnover: employee.turnover && employee.turnover,\n        bonus: employee.bonus && employee.bonus,\n        customer_satisfaction:\n          employee.customer_satisfaction && employee.customer_satisfaction,\n        performans: employee.performans && employee.performans,\n        agreement_type: employee.agreement_type && employee.agreement_type,\n      }\n    : {\n        fin: \"\",\n        name: \"\",\n        surname: \"\",\n        dadname: \"\",\n        birthday: \"\",\n        address: \"\",\n        phone: \"\",\n\n        whatsapp: \"\",\n        telegram: \"\",\n        facebook: \"\",\n        linkedin: \"\",\n        twitter: \"\",\n        instagram: \"\",\n        mail: \"\",\n\n        position_id: \"\",\n        structural_section_id: \"\",\n        date: \"\",\n        turnover: \"\",\n        bonus: \"\",\n        customer_satisfaction: \"\",\n        performans: \"\",\n        agreement_type: \"\",\n      };\n\n  const validationSchema = Yup.object({\n    fin: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    surname: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // dadname: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // birthday: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    address: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    phone: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n    // whatsapp: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // telegram: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // facebook: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // linkedin: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // twitter: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // instagram: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // mail: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n\n    // position_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // structural_section_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // date: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // turnover: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // bonus: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_satisfaction: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // performans: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // agreement_type: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n  return (\n    <ModalWrapper size=\"modal-lg\" header={employee ? \"Redakte Et\" : \"Əlavə et\"}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            employee\n              ? await dispatch(updateEmployees({ ...values, id: employee.id }))\n              : await dispatch(createEmployees({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div className={`row ${employee && \"mb-4\"}`}>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"fim\"\n                  name=\"fin\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"FİN*\"\n                  label={employee && \"FİN*\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"name\"\n                  name=\"name\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Ad*\"\n                  label={employee && \"Ad*\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"surname\"\n                  name=\"surname\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Soyad*\"\n                  label={employee && \"Soyad*\"}\n                />\n              </div>\n            </div>\n            <div className={`row ${employee && \"mb-4\"}`}>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  id=\"dadname\"\n                  name=\"dadname\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Ata adı\"\n                  label={employee && \"Ata adı\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"birthday\"\n                  id=\"birthday\"\n                  type={employee ? \"date\" : \"text\"}\n                  onFocus={(e) => {\n                    e.currentTarget.type = \"date\";\n                    e.currentTarget.focus();\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"Doğum tarixi\"\n                  label={employee && \"Doğum tarixi\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"address\"\n                  id=\"address\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Ünvan*\"\n                  label={employee && \"Ünvan*\"}\n                />\n              </div>\n            </div>\n            <div className={`row ${employee && \"mb-4\"}`}>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"phone\"\n                  id=\"phone\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Telefon*\"\n                  label={employee && \"Telefon*\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"whatsapp\"\n                  id=\"whatsapp\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Whatsapp\"\n                  label={employee && \"Whatsapp\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"telegram\"\n                  id=\"telegram\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Telegram\"\n                  label={employee && \"Telegram\"}\n                />\n              </div>\n            </div>\n            <div className={`row ${employee && \"mb-4\"}`}>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"instagram\"\n                  id=\"instagram\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Instagram\"\n                  label={employee && \"Instagram\"}\n                />\n              </div>{\" \"}\n              <div className=\"col-md-8\">\n                <MyTextInput\n                  name=\"mail\"\n                  id=\"mail\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Mail\"\n                  label={employee && \"Mail\"}\n                />\n              </div>\n            </div>\n            <div className={`row ${employee && \"mb-4\"}`}>\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"position_id\"\n                  id=\"position_id\"\n                  options={dutyOptions}\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Vəzifəsi\"\n                  label={employee && \"Vəzifəsi\"}\n                  defaultValue={\n                    employee && {\n                      label: employee.position_id.name,\n                      value: employee.position_id.id,\n                    }\n                  }\n                />\n              </div>\n              <div className=\"col-md-8\">\n                <MySearchableSelect\n                  name=\"structural_section_id\"\n                  id=\"structural_section_id\"\n                  options={departmentOptions}\n                  defaultValue={\n                    employee && {\n                      label: employee.structural_section_id.name,\n                      value: employee.structural_section_id.id,\n                    }\n                  }\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Struktur bölməsi\"\n                  label={employee && \"Struktur bölməsi\"}\n                />\n              </div>\n            </div>\n            <div className={`row ${employee && \"mb-4\"}`}>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"date\"\n                  id=\"date\"\n                  type={employee ? \"date\" : \"text\"}\n                  onFocus={(e) => {\n                    e.currentTarget.type = \"date\";\n                    e.currentTarget.focus();\n                  }}\n                  className=\"form-control\"\n                  placeholder=\"İşə qəbul tarixi\"\n                  label={employee && \"İşə qəbul tarixi\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"turnover\"\n                  id=\"turnover\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Dövriyyə\"\n                  label={employee && \"Dövriyyə\"}\n                />\n              </div>\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"bonus\"\n                  id=\"bonus\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Bonus\"\n                  label={employee && \"Bonus\"}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"customer_satisfaction\"\n                  id=\"customer_satisfaction\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  label={employee && \"Müştəri məmnuniyyəti\"}\n                  placeholder=\"Müştəri məmnuniyyəti\"\n                />\n              </div>{\" \"}\n              <div className=\"col-md-4\">\n                <MyTextInput\n                  name=\"performans\"\n                  id=\"performans\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Performans\"\n                  label={employee && \"Performans\"}\n                />\n              </div>{\" \"}\n              <div className=\"col-md-4\">\n                <MySearchableSelect\n                  name=\"agreement_type\"\n                  id=\"agreement_type\"\n                  options={contractTypeOptions}\n                  defaultValue={selectedContractType}\n                  // type=\"text\"\n                  // className=\"form-control\"\n                  placeholder=\"Müqavilə növü\"\n                  label={employee && \"Müqavilə növü\"}\n                />\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/certifications/personalPage/PersonalPageModal.jsx",["872","873","874"],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/docPage/DocPageModal.jsx",["875","876"],"/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MyTextInput.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/app/modal/ModalWrapper.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MySearchableSelect.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/app/common/form/MyTextArea.jsx",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/mockApi.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDepartments.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataCounterparty.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleData.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataCrm.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDocs.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDuties.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpense.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpenseGroups.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataDocumentTypes.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataPersonal.js",["877","878","879"],"import cuid from \"cuid\";\n\nexport const sampleDataPersonal = [\n  {\n    id: cuid(),\n    soCode: \"23\",\n    snCode: \"02\",\n    registrationNumber: \"0045\",\n    blankNumber: \"İDS 000651\",\n    accreditationNumber: \"2\",\n    certificateIssueDate: \"05.01.2018\",\n    certificateExpirationDate: \"05.01.2019\",\n    certificateExpirationDate: \"\",\n    participantName: \"\",\n    instructorName: \"\",\n    training: \"\",\n    skill: [],\n    productCode: \"\",\n    signOfDocument: \"\",\n    note: \"\",\n  },\n  {\n    id: cuid(),\n    soCode: \"23\",\n    snCode: \"02\",\n    registrationNumber: \"0045\",\n    blankNumber: \"İDS 000651\",\n    accreditationNumber: \"2\",\n    certificateIssueDate: \"05.01.2018\",\n    certificateExpirationDate: \"05.01.2019\",\n    certificateExpirationDate: \"\",\n    participantName: \"\",\n    instructorName: \"\",\n    training: \"\",\n    skill: [],\n    productCode: \"\",\n    signOfDocument: \"\",\n    note: \"\",\n\n  },\n  {\n    id: cuid(),\n    soCode: \"23\",\n    snCode: \"02\",\n    registrationNumber: \"0045\",\n    blankNumber: \"İDS 000651\",\n    accreditationNumber: \"2\",\n    certificateIssueDate: \"05.01.2018\",\n    certificateExpirationDate: \"05.01.2019\",\n    certificateExpirationDate: \"05.01.2018\",\n    participantName: \"\",\n    instructorName: \"\",\n    training: \"\",\n    skill: [],\n    productCode: \"\",\n    signOfDocument: \"\",\n    note: \"\",\n\n  },\n];\n","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataTraining.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataSkill.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataSignOfLegalAct.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataProductService.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataReference.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataServiceTypes.js",["880"],"import cuid from \"cuid\";\n\nexport const sampleDataServiceTypes = [\n  {\n    id: 0,\n    serviceTypeName: \"Personal\",\n\n  },\n  {\n    id: 1,\n    serviceTypeName: \"Məhsul Xidmət\",\n\n  },\n  {\n    id: 2,\n    serviceTypeName: \"İdarəetmə sistemləri\",\n\n  },\n];\n","/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataOrder.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataLab.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataOrderSource.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataExpenseTypes.js",[],"/Users/ict/Documents/GitHub/certus-master/src/app/api/sampleDataControlSystem.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/CrmPage.jsx",["881","882","883","884"],"import React, { useEffect, useState } from \"react\";\nimport DataTable, { defaultThemes } from \"react-data-table-component\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { openModal } from \"../../../app/modal/modalReducer\";\nimport { loadEmployees } from \"../employees/employeesActions\";\nimport { loadReference } from \"../settings/reference/referenceActions\";\n\nimport { deleteCrm, loadCrm } from \"./crmActions\";\nexport default function CrmPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadCrm());\n    //   // return () => {\n    //   //   // dispatch(loadOrder())\n    //   // }\n  }, []);\n  const [perPage, setPerPage] = useState(10);\n  const [PageNumber, setPageNumber] = useState(1);\n  const { crms, totalCount } = useSelector((state) => state.crms);\n  const [hover, sethover] = useState(false);\n  const [target, setTarget] = useState({ id: null, name: null });\n\n  const data = crms;\n  const buttonStyle = {\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginRight: \"35px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"43px\",\n    height: \"41px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonStyle1 = {\n    //   '&:hover':{\n    //     background:'#sdsdss'\n    //   },\n    padding: \"9px\",\n    background: \"#ffffff\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    // marginRight: \"2px\",\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    boxShadow: \"0px 2px 4px rgb(126 142 177 / 12%)\",\n    width: \"36px\",\n    height: \"34px\",\n    color: \"#fe0040\",\n    fill: \"rgba(232, 186, 183, 0.239)\",\n  };\n  const buttonHover = {\n    color: \"#515365\",\n    fill: \"#ffcacd\",\n  };\n  const handlePageChange = (page) => {\n    dispatch(loadCrm({ s: page, take: perPage }));\n    setPageNumber(page);\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(loadCrm({ s: page, take: newPerPage }));\n    setPerPage(newPerPage);\n  };\n\n  const actions = (\n    <svg\n      data-name=\"add\"\n      onClick={() => {\n        dispatch(\n          openModal({\n            modalType: \"CrmPageModal\",\n            modalProps: null,\n          })\n        );\n        dispatch(loadReference());\n        dispatch(loadEmployees());\n      }}\n      style={{\n        ...buttonStyle,\n        ...(hover && target.name === \"add\" && buttonHover),\n      }}\n      onMouseEnter={(e) => {\n        sethover(true);\n        setTarget({\n          ...target,\n          name: e.target.getAttribute(\"data-name\"),\n        });\n      }}\n      onMouseLeave={() => {\n        sethover(false);\n        setTarget(null);\n      }}\n      type=\"button\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth={2}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather mr-4 feather-plus icon-container\"\n      data-toggle=\"modal\"\n      data-target=\"#exampleModal\"\n    >\n      <line x1={12} y1={5} x2={12} y2={19} />\n      <line x1={5} y1={12} x2={19} y2={12} />\n    </svg>\n  );\n\n  const columns = [\n    {\n      name: \"Kurator\",\n      selector: \"curator\",\n      cell: (crm) => (\n        <p>\n          {crm.employee_id.name} {crm.employee_id.surname}{\" \"}\n        </p>\n      ),\n      sortable: true,\n    },\n    {\n      name: \"Müştəri adı\",\n      selector: \"customer_name\",\n      sortable: true,\n    },\n    {\n      name: \"VÖEN\",\n      selector: \"voen\",\n      sortable: true,\n    },\n    {\n      name: \"Tarix\",\n      selector: \"date\",\n      sortable: true,\n    },\n    {\n      name: \"Əlaqə nömrəsi\",\n      selector: \"customer_phone\",\n      sortable: true,\n    },\n    {\n      name: \"Whatsapp\",\n      selector: \"customer_whatsapp\",\n      sortable: true,\n    },\n\n    {\n      name: \"\",\n      cell: (crm) => (\n        <div className=\"action-btn\">\n          <svg\n            onClick={() => {\n              dispatch(\n                openModal({\n                  modalType: \"CrmPageModal\",\n                  modalProps: { crm },\n                })\n              );\n              dispatch(loadEmployees());\n\n              dispatch(loadReference());\n            }}\n            data-name=\"edit\"\n            id={crm.id}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${crm.id}` &&\n                target.name === \"edit\" &&\n                buttonHover),\n            }}\n            type=\"button\"\n            className=\"icon-hover btn btn-rounded btn-primary mb-2 mr-4\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModal\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-edit-2 edit\"\n          >\n            <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n          </svg>\n          <svg\n            data-name=\"delete\"\n            id={crm.id}\n            onClick={() => {\n              if (\n                prompt(`Zəhmət olmasa silmək üçün şifrəni daxil edin`) == 9519\n              ) {\n                dispatch(deleteCrm(crm.id));\n              } else {\n                toast.info(\n                  \"Silmək cəhtiniz uğursuzdur, silmək üçün düzgün şifrə daxil edin.\"\n                );\n              }\n            }}\n            onMouseEnter={(e) => {\n              sethover(true);\n              setTarget({\n                ...target,\n                id: e.target.id,\n                name: e.target.getAttribute(\"data-name\"),\n              });\n              // console.log(e.target.getAttribute('data-name'))\n            }}\n            onMouseLeave={() => {\n              sethover(false);\n              setTarget();\n            }}\n            style={{\n              ...buttonStyle1,\n              ...(hover &&\n                target.id === `${crm.id}` &&\n                target.name === \"delete\" &&\n                buttonHover),\n            }}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={24}\n            height={24}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"feather feather-user-minus delete\"\n          >\n            <path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"8.5\" cy={7} r={4} />\n            <line x1={23} y1={11} x2={17} y2={11} />\n          </svg>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* BEGIN crmPAGE CONTAINER */}\n      <div className=\"layout-px-spacing\">\n        <div className=\"row layout-top-spacing\">\n          <div className=\"col-xl-12 col-lg-12 col-sm-12  layout-spacing\">\n            <div className=\"widget-content widget-content-area br-6\">\n              <DataTable\n                // className=\"dataTables_wrapper container-fluid dt-bootstrap4 table-responsive\"\n                // selectableRows\n                title=\"Müştəri\"\n                columns={columns}\n                data={data}\n                pagination\n                paginationServer\n                paginationTotalRows={totalCount}\n                paginationDefaultPage={PageNumber}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n                highlightOnHover\n                Clicked\n                actions={actions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* END crmPAGE CONTAINER */}\n    </React.Fragment>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmReducer.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmActions.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/crmConstants.js",[],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/crmPage/CrmPageModal.jsx",["885","886","887","888","889","890","891","892"],"import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport ModalWrapper from \"../../../app/modal/ModalWrapper\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport { toast } from \"react-toastify\";\nimport cuid from \"cuid\";\nimport { Form, Formik } from \"formik\";\nimport { createCrm, updateCrm } from \"./crmActions\";\nimport { closeModal } from \"../../../app/modal/modalReducer\";\nimport MySearchableSelect from \"../../../app/common/form/MySearchableSelect\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport moment from \"moment\";\n\nexport default function CrmPageModal({ crm }) {\n  const { employees } = useSelector((state) => state.employees);\n  const { references } = useSelector((state) => state.references);\n  let employeeOptions = [];\n  let referenceOptions = [];\n  const legalStatusOptions = [\n    { label: \"Hüquqi şəxs\", value: parseInt(0) },\n    { label: \"Fiziki şəxs\", value: parseInt(1) },\n    { label: \"Qeyri vergi ödəyicisi fiziki şəxs\", value: parseInt(2) },\n  ];\n  const selectedLegalStatus =\n    crm &&\n    legalStatusOptions.filter(\n      (legalStatusOption) => crm.legal_status_id === legalStatusOption.value\n    );\n  const placeOptions = [\n    { label: \"Hüquqi ünvan\", value: 0 },\n    { label: \"Faktiki ünvan\", value: 1 },\n  ];\n  referenceOptions =\n    references &&\n    references.map((reference) => {\n      return {\n        value: parseInt(reference.id),\n        label: `${reference.name}`,\n      };\n    });\n  employeeOptions =\n    employees &&\n    employees.map((employee) => {\n      return {\n        value: parseInt(employee.id),\n        label: `${employee.name} ${employee.surname}`,\n      };\n    });\n\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  // dovriyye il uzre\n  const [circulationWithYears, setCirculationWithYears] = useState(\n    crm\n      ? JSON.parse(crm.circulationByYears)\n      : [{ circulationYear: \"\", circulation: \"\" }]\n  );\n  let mapCirculations = circulationWithYears;\n  console.log(mapCirculations);\n  const handleAddCirculationByYear = () => {\n    setCirculationWithYears([\n      ...circulationWithYears,\n      { circulationYear: \"\", circulation: \"\" },\n    ]);\n  };\n  const handleRemoveCirculationByYear = () => {\n    if (circulationWithYears.length > 1) {\n      let lastIndex = circulationWithYears.length - 1;\n      let values = [...circulationWithYears];\n      values.splice(lastIndex, 1);\n      setCirculationWithYears(values);\n    }\n  };\n  /// isciler il uzre\n\n  const [workersYears, setWorkersYears] = useState(\n    crm ? JSON.parse(crm.workersYears) : [{ workerYear: \"\", worker: \"\" }]\n  );\n  let mapWorkersYears = workersYears;\n  const handleAddWorkersYear = () => {\n    setWorkersYears([...workersYears, { workerYear: \"\", worker: \"\" }]);\n  };\n  const handleRemoveWorkersYear = () => {\n    if (workersYears.length > 1) {\n      let lastIndex = workersYears.length - 1;\n      let values = [...workersYears];\n      values.splice(lastIndex, 1);\n      setWorkersYears(values);\n    }\n  };\n\n  /// Tedbirler  uzre\n\n  const [measures, setMeasures] = useState(\n    crm ? JSON.parse(crm.measures) : [{ measureYear: \"\", measure: \"\" }]\n  );\n  let mapMeasures = measures;\n  const handleAddMeasures = () => {\n    setMeasures([...measures, { measureYear: \"\", measure: \"\" }]);\n  };\n  const handleRemoveMeasures = () => {\n    if (measures.length > 1) {\n      let lastIndex = measures.length - 1;\n      let values = [...measures];\n      values.splice(lastIndex, 1);\n      setMeasures(values);\n    }\n  };\n  useEffect(() => {\n    if (modal) {\n      $(\"#closeModal\").click();\n    }\n  });\n\n  const initialValues = crm\n    ? {\n        contact_name: crm.contact_name && crm.contact_name,\n        contact_surname: crm.contact_surname && crm.contact_surname,\n        contact_dadname: crm.contact_dadname && crm.contact_dadname,\n        contact_phone: crm.contact_phone && crm.contact_phone,\n        contact_whatsapp: crm.contact_whatsapp && crm.contact_whatsapp,\n        contact_telegram: crm.contact_telegram && crm.contact_telegram,\n        contact_facebook: crm.contact_facebook && crm.contact_facebook,\n        contact_linkedin: crm.contact_linkedin && crm.contact_linkedin,\n        contact_twitter: crm.contact_twitter && crm.contact_twitter,\n        contact_instagram: crm.contact_instagram && crm.contact_instagram,\n        contact_mail: crm.contact_instagram && crm.contact_instagram,\n\n        employee_id: crm.employee_id && crm.employee_id.id,\n        legal_status_id: crm.legal_status_id && crm.legal_status_id,\n        customer_name: crm.customer_name && crm.customer_name,\n        voen: crm.voen && crm.voen,\n        date: crm.date && moment(crm.date).format(\"YYYY-MM-DD\"),\n\n        // logo: \"\",\n        legal_adress: crm.legal_adress && crm.legal_adress,\n        actual_adress: crm.actual_adress && crm.actual_adress,\n        customer_phone: crm.customer_phone && crm.customer_phone,\n        customer_email: crm.customer_email && crm.customer_email,\n        customer_linkedin: crm.customer_linkedin && crm.customer_linkedin,\n        customer_twitter: crm.customer_twitter && crm.customer_twitter,\n        customer_instagram: crm.customer_instagram && crm.customer_instagram,\n        customer_website: crm.customer_website && crm.customer_website,\n        customer_whatsapp: crm.customer_whatsapp && crm.customer_whatsapp,\n        customer_telegram: crm.customer_telegram && crm.customer_telegram,\n        customer_facebook: crm.customer_facebook && crm.customer_facebook,\n\n        referans_id: crm.referans_id && crm.referans_id.id,\n        customer_category: crm.customer_category && crm.customer_category,\n        customer_satisfaction:\n          crm.customer_satisfaction && crm.customer_satisfaction,\n        turnover: crm.turnover && crm.turnover,\n        circulationByYears:\n          crm.circulationByYears && JSON.parse(crm.circulationByYears),\n        workersYears: crm.workersYears && JSON.parse(crm.workersYears),\n        measures: crm.measures && JSON.parse(crm.measures),\n\n        note: crm.note && crm.note,\n      }\n    : {\n        contact_name: \"\",\n        contact_surname: \"\",\n        contact_dadname: \"\",\n        contact_phone: \"\",\n        contact_whatsapp: \"\",\n        contact_telegram: \"\",\n        contact_facebook: \"\",\n        contact_linkedin: \"\",\n        contact_twitter: \"\",\n        contact_instagram: \"\",\n        contact_mail: \"\",\n\n        employee_id: \"\",\n        legal_status_id: \"\",\n        customer_name: \"\",\n        voen: \"\",\n        date: \"\",\n\n        // logo: \"\",\n        legal_adress: \"\",\n        actual_adress: \"\",\n        customer_phone: \"\",\n        customer_email: \"\",\n        customer_linkedin: \"\",\n        customer_twitter: \"\",\n        customer_instagram: \"\",\n        customer_website: \"\",\n        customer_whatsapp: \"\",\n        customer_telegram: \"\",\n        customer_facebook: \"\",\n\n        referans_id: \"\",\n        customer_category: \"\",\n        customer_satisfaction: \"\",\n        turnover: \"\",\n        circulationByYears: circulationWithYears,\n        workersYears: workersYears,\n        measures: measures,\n        note: \"\",\n      };\n  const validationSchema = Yup.object({\n    contact_name: Yup.string().required(\"Mutuel doldurulmalıdır.\"),\n    contact_surname: Yup.string().required(\"Mutuel doldurulmalıdır.\"),\n    employee_id: Yup.string().required(\"Mutuel doldurulmalıdır.\"),\n    // customerCode: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    customer_name: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    voen: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // date: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // // logo: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // legal_adress: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // actual_adress: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_phone: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_website: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // whatsapp: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // telegram: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // facebook: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // linkedin: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // twitter: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // instagram: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_email: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    referans_id: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // circulation: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_category: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // customer_satisfaction: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n    // note: Yup.string().required(\"Mütləq doldurulmalıdır.\"),\n  });\n\n  return (\n    <ModalWrapper\n      data={crm && `Müştəri - CS${crm.id}`}\n      size=\"modal-xl\"\n      header={crm ? \"Redakte Et\" : \"Əlavə et\"}\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting, setErrors }) => {\n          try {\n            crm\n              ? await dispatch(\n                  updateCrm({\n                    ...values,\n                    id: crm.id,\n                  })\n                )\n              : await dispatch(createCrm({ ...values }));\n            setSubmitting(false);\n            setModal(true);\n            dispatch(closeModal());\n          } catch (error) {\n            setErrors({ auth: error.message });\n            // console.log(error);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, isValid, dirty, errors }) => (\n          <Form id=\"emp\">\n            <div id=\"iconsAccordion\" className=\"accordion-icons\">\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingOne3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionOne\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionOne\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-user\"\n                        >\n                          <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                          <circle cx={12} cy={7} r={4} />\n                        </svg>\n                      </div>\n                      Kontakt şəxs haqqında məlumatlar\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionOne\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingOne3\"\n                  data-parent=\"#iconsAccordion\"\n                  style={{}}\n                >\n                  <div className=\"card-body\">\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"contact_name\"\n                          //  label={crm ? 'Ad' : ''}\n                          label={crm && \"Ad*\"}\n                          name=\"contact_name\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Ad*\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"contact_surname\"\n                          name=\"contact_surname\"\n                          type=\"text\"\n                          label={crm && \"Soyad*\"}\n                          className=\"form-control\"\n                          placeholder=\"Soyad*\"\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"contact_dadname\"\n                          name=\"contact_dadname\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Ata adı\"\n                          label={crm && \"Ata adı\"}\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_phone\"\n                          id=\"contact_phone\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Telefon\"\n                          label={crm && \"Telefon\"}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_whatsapp\"\n                          id=\"contact_whatsapp\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Whatsapp\"\n                          label={crm && \"Whatsapp\"}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_telegram\"\n                          id=\"contact_telegram\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Telegram\"\n                          label={crm && \"Telegram\"}\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_facebook\"\n                          id=\"contact_facebook\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Facebook\"\n                          label={crm && \"Facebook\"}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_linkedin\"\n                          id=\"contact_linkedin\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Linkedin\"\n                          label={crm && \"Linkedin\"}\n                        />\n                      </div>{\" \"}\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_twitter\"\n                          id=\"contact_twitter\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Twitter\"\n                          label={crm && \"Twitter\"}\n                        />\n                      </div>{\" \"}\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"contact_instagram\"\n                          id=\"contact_instagram\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Instagram\"\n                          label={crm && \"Instagram\"}\n                        />\n                      </div>{\" \"}\n                      <div className=\"col-md-8\">\n                        <MyTextInput\n                          name=\"contact_mail\"\n                          id=\"contact_mail\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Mail\"\n                          label={crm && \"Mail\"}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingTwo3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionTwo\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionTwo\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-box\"\n                        >\n                          <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\" />\n                          <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\" />\n                          <line x1={12} y1=\"22.08\" x2={12} y2={12} />\n                        </svg>\n                      </div>\n                      Müştəri haqqında məlumatlar\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionTwo\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingTwo3\"\n                  data-parent=\"#iconsAccordion\"\n                >\n                  <div className=\"card-body\">\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          id=\"customer_name\"\n                          name=\"customer_name\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Müştəri adı*\"\n                          label={crm && \"Müştəri adı*\"}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"employee_id\"\n                          id=\"employee_id\"\n                          type=\"text\"\n                          options={employeeOptions}\n                          // className=\"form-control\"\n                          defaultValue={\n                            crm && {\n                              label: `${crm.employee_id.name} ${crm.employee_id.surname}`,\n                              value: parseInt(crm.employee_id.id),\n                            }\n                          }\n                          placeholder=\"Kurator*\"\n                          label={crm && \"Kurator*\"}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MySearchableSelect\n                          name=\"legal_status_id\"\n                          labe\n                          id=\"legal_status_id\"\n                          type=\"text\"\n                          options={legalStatusOptions}\n                          defaultValue={crm && selectedLegalStatus[0]}\n                          // className=\"form-control\"\n                          placeholder=\"Hüquqi status\"\n                          label={crm && \"Hüquqi status\"}\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          id=\"voen\"\n                          name=\"voen\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"VÖEN*\"\n                          label={crm && \"VÖEN*\"}\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"date\"\n                          id=\"date\"\n                          type={crm ? \"date\" : \"text\"}\n                          onFocus={(e) => {\n                            e.currentTarget.type = \"date\";\n                            e.currentTarget.focus();\n                          }}\n                          className=\"form-control\"\n                          placeholder=\"Tarix\"\n                          label={crm && \"Tarix\"}\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"legal_adress\"\n                          id=\"legal_adress\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Hüquqi ünvan\"\n                          label={crm && \"Hüquqi ünvan\"}\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"actual_adress\"\n                          id=\"actual_adress\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          label={crm && \"Faktiki ünvans\"}\n                          placeholder=\"Faktiki ünvan\"\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"customer_phone\"\n                          id=\"customer_phone\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          label={crm && \"Əlaqə nömrəsi\"}\n                          placeholder=\"Əlaqə nömrəsi\"\n                        />\n                      </div>\n                      <div className=\"col-md-6\">\n                        <MyTextInput\n                          name=\"customer_email\"\n                          id=\"customer_email\"\n                          type=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"Email\"\n                          label={crm && \"Email\"}\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"customer_linkedin\"\n                          id=\"customer_linkedin\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Linkedin\"\n                          label={crm && \"Linkedin\"}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"customer_twitter\"\n                          id=\"customer_twitter\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Twitter\"\n                          label={crm && \"Twitter\"}\n                        />\n                      </div>\n                      <div className=\"col-md-4\">\n                        <MyTextInput\n                          name=\"customer_instagram\"\n                          id=\"customer_instagram\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Instagram\"\n                          label={crm && \"Instagram\"}\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_website\"\n                          id=\"customer_website\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          label={crm && \"Vebsayt\"}\n                          placeholder=\"Vebsayt\"\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_whatsapp\"\n                          id=\"customer_whatsapp\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Whatsapp\"\n                          label={crm && \"Whatsapp\"}\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_telegram\"\n                          id=\"customer_telegram\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Telegram\"\n                          label={crm && \"Telegram\"}\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_facebook\"\n                          id=\"customer_facebook\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Facebook\"\n                          label={crm && \"Facebook\"}\n                        />\n                      </div>\n                    </div>\n                    <div className={`row ${crm && \"mb-4\"}`}>\n                      <div className=\"col-md-3\">\n                        <MySearchableSelect\n                          name=\"referans_id\"\n                          id=\"referans_id\"\n                          type=\"text\"\n                          defaultValue={\n                            crm && {\n                              label: crm.referans_id.name,\n                              value: parseInt(crm.referans_id.id),\n                            }\n                          }\n                          options={referenceOptions}\n                          // className=\"form-control\"\n                          placeholder=\"Referans*\"\n                          label={crm && \"Referans*\"}\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_category\"\n                          id=\"customer_category\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Müştəri kateqoriyası\"\n                          label={crm && \"Müştəri kateqoriyası\"}\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"customer_satisfaction\"\n                          id=\"customer_satisfaction\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Müştəri məmnuniyyəti\"\n                          label={crm && \"Müştəri məmnuniyyəti\"}\n                        />\n                      </div>\n                      <div className=\"col-md-3\">\n                        <MyTextInput\n                          name=\"turnover\"\n                          id=\"turnover\"\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"Dövriyyə\"\n                          label={crm && \"Dövriyyə\"}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col-md-12\">\n                        <MyTextArea\n                          name=\"note\"\n                          id=\"note\"\n                          type=\"email\"\n                          className=\"form-control\"\n                          placeholder=\"Qeyd\"\n                          label={crm && \"Qeyd\"}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingTwo3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionThree\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionThree\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          viewBox=\"0 0 24 24\"\n                          width={24}\n                          height={24}\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          fill=\"none\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"css-i6dzq1\"\n                        >\n                          <line x1={12} y1={1} x2={12} y2={23} />\n                          <path d=\"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n                        </svg>\n                      </div>\n                      Son illərdəki dövriyyəsi\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionThree\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingTwo3\"\n                  data-parent=\"#iconsAccordion\"\n                >\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-2 offset-10 text-right\">\n                        <div className=\"icon-container\">\n                          <button\n                            type=\"button\"\n                            className=\"close\"\n                            onClick={() => handleAddCirculationByYear()}\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-plus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={12} y1={8} x2={12} y2={16} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveCirculationByYear()}\n                            className=\"close\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-minus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      {mapCirculations &&\n                        mapCirculations.map((mapCirculation, index) => (\n                          <React.Fragment key={index}>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                id=\"circulationYear\"\n                                name={`circulationByYears[${index}].circulationYear`}\n                                type=\"text\"\n                                defaultValue={\n                                  mapCirculations &&\n                                  mapCirculation.circulationYear\n                                }\n                                className=\"form-control\"\n                                placeholder=\"İl\"\n                              />\n                            </div>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                name={`circulationByYears[${index}].circulation`}\n                                defaultValue={\n                                  mapCirculations && mapCirculation.circulation\n                                }\n                                id=\"circulation\"\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Dövriyyə\"\n                              />\n                            </div>\n                          </React.Fragment>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingTwo3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionForth\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionForth\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-users\"\n                        >\n                          <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n                          <circle cx={9} cy={7} r={4} />\n                          <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n                          <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n                        </svg>\n                      </div>\n                      Son illərdəki işçi sayı\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionForth\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingTwo3\"\n                  data-parent=\"#iconsAccordion\"\n                >\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-2 offset-10 text-right\">\n                        <div className=\"icon-container\">\n                          <button\n                            type=\"button\"\n                            className=\"close\"\n                            onClick={() => handleAddWorkersYear()}\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-plus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={12} y1={8} x2={12} y2={16} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveWorkersYear()}\n                            className=\"close\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-minus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      {mapWorkersYears &&\n                        mapWorkersYears.map((mapWorkersYears, index) => (\n                          <React.Fragment key={index}>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                id={`workersYears[${index}].workerYear`}\n                                name={`workersYears[${index}]workerYear`}\n                                defaultValue={\n                                  mapWorkersYears && mapWorkersYears.workerYear\n                                }\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"İl\"\n                              />\n                            </div>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                name={`workersYears[${index}]worker`}\n                                id={`workersYears[${index}].worker`}\n                                defaultValue={\n                                  mapWorkersYears && mapWorkersYears.worker\n                                }\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"İşçilər\"\n                              />\n                            </div>\n                          </React.Fragment>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingTwo3\">\n                  <section className=\"mb-0 mt-0\">\n                    <div\n                      role=\"menu\"\n                      className=\"collapsed\"\n                      data-toggle=\"collapse\"\n                      data-target=\"#iconAccordionFive\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"iconAccordionFive\"\n                    >\n                      <div className=\"accordion-icon\">\n                        <svg\n                          viewBox=\"0 0 24 24\"\n                          width={24}\n                          height={24}\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          fill=\"none\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"css-i6dzq1\"\n                        >\n                          <rect\n                            x={3}\n                            y={4}\n                            width={18}\n                            height={18}\n                            rx={2}\n                            ry={2}\n                          />\n                          <line x1={16} y1={2} x2={16} y2={6} />\n                          <line x1={8} y1={2} x2={8} y2={6} />\n                          <line x1={3} y1={10} x2={21} y2={10} />\n                        </svg>\n                      </div>\n                      Müştəri tədbirləri\n                      <div className=\"icons\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"feather feather-chevron-down\"\n                        >\n                          <polyline points=\"6 9 12 15 18 9\" />\n                        </svg>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n                <div\n                  id=\"iconAccordionFive\"\n                  className=\"collapse\"\n                  aria-labelledby=\"headingTwo3\"\n                  data-parent=\"#iconsAccordion\"\n                >\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-2 offset-10 text-right\">\n                        <div className=\"icon-container\">\n                          <button\n                            type=\"button\"\n                            className=\"close\"\n                            onClick={() => handleAddMeasures()}\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-plus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={12} y1={8} x2={12} y2={16} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveMeasures()}\n                            className=\"close\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"feather feather-minus-circle\"\n                            >\n                              <circle cx={12} cy={12} r={10} />\n                              <line x1={8} y1={12} x2={16} y2={12} />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      {mapMeasures &&\n                        mapMeasures.map((mapMeasure, index) => (\n                          <React.Fragment key={index}>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                id={`measures[${index}].measureYear`}\n                                name={`measures[${index}]measureYear`}\n                                defaultValue={\n                                  mapMeasures && mapMeasure.measureYear\n                                }\n                                className=\"form-control\"\n                                placeholder=\"İl\"\n                                type={crm ? \"date\" : \"text\"}\n                                onFocus={(e) => {\n                                  e.currentTarget.type = \"date\";\n                                  e.currentTarget.focus();\n                                }}\n                              />\n                            </div>\n                            <div className=\"col-md-6\">\n                              <MyTextInput\n                                name={`measures[${index}]measure`}\n                                id={`measures[${index}].measure`}\n                                defaultValue={mapMeasures && mapMeasure.measure}\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Tədbir\"\n                              />\n                            </div>\n                          </React.Fragment>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <button\n              disabled={!isValid || !dirty || isSubmitting}\n              type=\"submit\"\n              // name=\"time\"\n              className=\"btn btn-primary float-right  btn-lg mt-3 \"\n            >\n              {isSubmitting && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-loader spin mr-2\"\n                >\n                  <line x1={12} y1={2} x2={12} y2={6} />\n                  <line x1={12} y1={18} x2={12} y2={22} />\n                  <line x1=\"4.93\" y1=\"4.93\" x2=\"7.76\" y2=\"7.76\" />\n                  <line x1=\"16.24\" y1=\"16.24\" x2=\"19.07\" y2=\"19.07\" />\n                  <line x1={2} y1={12} x2={6} y2={12} />\n                  <line x1={18} y1={12} x2={22} y2={12} />\n                  <line x1=\"4.93\" y1=\"19.07\" x2=\"7.76\" y2=\"16.24\" />\n                  <line x1=\"16.24\" y1=\"7.76\" x2=\"19.07\" y2=\"4.93\" />\n                </svg>\n              )}\n              Yadda saxla\n            </button>\n            <button\n              id=\"closeModal\"\n              onClick={() => {\n                dispatch(closeModal());\n              }}\n              className=\"btn btn-lg float-right mt-3 mr-2\"\n              data-dismiss=\"modal\"\n            >\n              <i className=\"flaticon-cancel-12\" /> Ləğv et\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </ModalWrapper>\n  );\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/oparationReducer.js",["893"],"\nimport {\n  CREATE_OPERATION,\n  DELETE_OPERATION,\n  FETCH_OPERATION,\n  UPDATE_OPERATION,\n} from \"./operationConstants\";\n\nconst initialState = {\n  operations: []\n};\n\nexport default function operationReducer(state = initialState, { type, payload,totalCount }) {\n  switch (type) {\n    // case CREATE_OPERATION:\n    //   return {\n    //     ...state,\n    //     operations: [...state.operations, payload],\n    //   };\n    case UPDATE_OPERATION:\n      return {\n        ...state,\n        operations: [\n          ...state.operations.filter((operation) => operation.id !== payload.id),\n          payload,\n        ],\n      };\n\n    case DELETE_OPERATION:\n      return {\n        ...state,\n        operations: [...state.operations.filter((operation) => operation.id !== payload)],\n      };\n    case FETCH_OPERATION:\n      return {\n        ...state,\n        operations: payload.filter(operation => operation.employee_id != null),\n      };\n    default:\n      return state;\n  }\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/OperationPageModal.jsx",["894","895","896","897","898","899","900","901","902"],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/OperationPage.jsx",["903","904","905","906","907"],"/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/operationActions.js",["908","909"],"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { fetchSampleDataOrder } from \"../../../app/api/mockApi\";\nimport {\n  APP_LOADED,\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../../../app/async/asyncReducer\";\nimport { delay } from \"../../../app/util/util\";\nimport {\n  CREATE_OPERATION,\n  DELETE_OPERATION,\n  FETCH_OPERATION,\n  UPDATE_OPERATION,\n} from \"./operationConstants\";\nconst url = \"operation\";\n\nexport function loadOperation(data) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    await axios\n      .get(`/${url}`, {\n        params: { ...data },\n      })\n      .then((datas) => {\n        console.log(datas,'operations')\n        dispatch({\n          type: FETCH_OPERATION,\n          payload: datas.data.data,\n          totalCount: datas.data.message,\n        });\n        dispatch(asyncActionFinish());\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi\");\n      });\n  };\n}\nexport function listenToOperation(operations) {\n  return {\n    type: FETCH_OPERATION,\n    payload: operations,\n  };\n}\n\nexport function createOperation(operation) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    try {\n      await delay(1000);\n      dispatch({ type: CREATE_OPERATION, payload: operation });\n      dispatch(asyncActionFinish());\n    } catch (error) {\n      asyncActionError(error);\n    }\n  };\n}\n\nexport function updateOperation(operation) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart);\n    await axios\n      .put(`/${url}/update`, operation)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_OPERATION,\n          payload: data.data.data,\n        });\n        dispatch(asyncActionFinish());\n        toast.success(\"Dəyişiklik uğurlar yerinə yetirildi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n\nexport function deleteOperation(operationId) {\n  return async function (dispatch) {\n    await axios\n      .delete(`/${url}/delete?id=${operationId}`)\n      .then((data) => {\n        dispatch({ type: DELETE_OPERATION, payload: operationId });\n        dispatch(asyncActionFinish());\n        toast.info(\"Uğurla silindi\");\n      })\n      .catch((err) => {\n        dispatch(asyncActionError(err.message));\n        toast.info(\"Xəta baş verdi, yenidən cəht edin.\");\n      });\n  };\n}\n","/Users/ict/Documents/GitHub/certus-master/src/features/dashboard/operationPage/operationConstants.js",[],{"ruleId":"910","severity":1,"message":"911","line":8,"column":10,"nodeType":"912","messageId":"913","endLine":8,"endColumn":23},{"ruleId":"914","replacedBy":"915"},{"ruleId":"916","replacedBy":"917"},{"ruleId":"910","severity":1,"message":"918","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":25},{"ruleId":"910","severity":1,"message":"919","line":5,"column":3,"nodeType":"912","messageId":"913","endLine":5,"endColumn":13},{"ruleId":"910","severity":1,"message":"920","line":10,"column":10,"nodeType":"912","messageId":"913","endLine":10,"endColumn":15},{"ruleId":"910","severity":1,"message":"921","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":28},{"ruleId":"914","replacedBy":"922"},{"ruleId":"916","replacedBy":"923"},{"ruleId":"910","severity":1,"message":"924","line":10,"column":10,"nodeType":"912","messageId":"913","endLine":10,"endColumn":18},{"ruleId":"910","severity":1,"message":"925","line":16,"column":11,"nodeType":"912","messageId":"913","endLine":16,"endColumn":24},{"ruleId":"926","severity":1,"message":"927","line":61,"column":6,"nodeType":"928","endLine":61,"endColumn":8,"suggestions":"929"},{"ruleId":"930","severity":1,"message":"931","line":125,"column":23,"nodeType":"932","messageId":"933","endLine":125,"endColumn":60},{"ruleId":"930","severity":1,"message":"931","line":304,"column":27,"nodeType":"932","messageId":"933","endLine":304,"endColumn":66},{"ruleId":"934","severity":1,"message":"935","line":313,"column":33,"nodeType":"936","messageId":"937","endLine":313,"endColumn":35},{"ruleId":"938","severity":1,"message":"939","line":343,"column":13,"nodeType":"940","endLine":351,"endColumn":14},{"ruleId":"941","severity":1,"message":"942","line":343,"column":13,"nodeType":"940","endLine":351,"endColumn":14},{"ruleId":"910","severity":1,"message":"943","line":3,"column":8,"nodeType":"912","messageId":"913","endLine":3,"endColumn":13},{"ruleId":"926","severity":1,"message":"927","line":12,"column":6,"nodeType":"928","endLine":12,"endColumn":8,"suggestions":"944"},{"ruleId":"910","severity":1,"message":"945","line":15,"column":9,"nodeType":"912","messageId":"913","endLine":15,"endColumn":15},{"ruleId":"910","severity":1,"message":"946","line":16,"column":9,"nodeType":"912","messageId":"913","endLine":16,"endColumn":21},{"ruleId":"910","severity":1,"message":"947","line":21,"column":9,"nodeType":"912","messageId":"913","endLine":21,"endColumn":17},{"ruleId":"938","severity":1,"message":"939","line":80,"column":9,"nodeType":"940","endLine":85,"endColumn":10},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":22,"column":6,"nodeType":"928","endLine":22,"endColumn":8,"suggestions":"949"},{"ruleId":"930","severity":1,"message":"931","line":236,"column":13,"nodeType":"932","messageId":"933","endLine":236,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":245,"column":72,"nodeType":"936","messageId":"937","endLine":245,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":16,"column":6,"nodeType":"928","endLine":16,"endColumn":8,"suggestions":"950"},{"ruleId":"930","severity":1,"message":"931","line":205,"column":13,"nodeType":"932","messageId":"933","endLine":205,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":214,"column":72,"nodeType":"936","messageId":"937","endLine":214,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":20,"column":6,"nodeType":"928","endLine":20,"endColumn":8,"suggestions":"951"},{"ruleId":"930","severity":1,"message":"931","line":217,"column":13,"nodeType":"932","messageId":"933","endLine":217,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":226,"column":72,"nodeType":"936","messageId":"937","endLine":226,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":16,"column":6,"nodeType":"928","endLine":16,"endColumn":8,"suggestions":"952"},{"ruleId":"930","severity":1,"message":"931","line":195,"column":13,"nodeType":"932","messageId":"933","endLine":195,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":204,"column":72,"nodeType":"936","messageId":"937","endLine":204,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":16,"column":6,"nodeType":"928","endLine":16,"endColumn":8,"suggestions":"953"},{"ruleId":"930","severity":1,"message":"931","line":183,"column":13,"nodeType":"932","messageId":"933","endLine":183,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":192,"column":72,"nodeType":"936","messageId":"937","endLine":192,"endColumn":74},{"ruleId":"926","severity":1,"message":"927","line":15,"column":6,"nodeType":"928","endLine":15,"endColumn":8,"suggestions":"954"},{"ruleId":"930","severity":1,"message":"931","line":174,"column":13,"nodeType":"932","messageId":"933","endLine":174,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":183,"column":72,"nodeType":"936","messageId":"937","endLine":183,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":15,"column":6,"nodeType":"928","endLine":15,"endColumn":8,"suggestions":"955"},{"ruleId":"930","severity":1,"message":"931","line":172,"column":13,"nodeType":"932","messageId":"933","endLine":172,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":181,"column":72,"nodeType":"936","messageId":"937","endLine":181,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":15,"column":6,"nodeType":"928","endLine":15,"endColumn":8,"suggestions":"956"},{"ruleId":"930","severity":1,"message":"931","line":170,"column":13,"nodeType":"932","messageId":"933","endLine":170,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":179,"column":72,"nodeType":"936","messageId":"937","endLine":179,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":17,"column":6,"nodeType":"928","endLine":17,"endColumn":8,"suggestions":"957"},{"ruleId":"930","severity":1,"message":"931","line":185,"column":13,"nodeType":"932","messageId":"933","endLine":185,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":194,"column":72,"nodeType":"936","messageId":"937","endLine":194,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":16,"column":6,"nodeType":"928","endLine":16,"endColumn":8,"suggestions":"958"},{"ruleId":"930","severity":1,"message":"931","line":174,"column":13,"nodeType":"932","messageId":"933","endLine":174,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":183,"column":72,"nodeType":"936","messageId":"937","endLine":183,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":15,"column":6,"nodeType":"928","endLine":15,"endColumn":8,"suggestions":"959"},{"ruleId":"930","severity":1,"message":"931","line":175,"column":13,"nodeType":"932","messageId":"933","endLine":175,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":184,"column":72,"nodeType":"936","messageId":"937","endLine":184,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":15,"column":6,"nodeType":"928","endLine":15,"endColumn":8,"suggestions":"960"},{"ruleId":"930","severity":1,"message":"931","line":175,"column":13,"nodeType":"932","messageId":"933","endLine":175,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":184,"column":72,"nodeType":"936","messageId":"937","endLine":184,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":15,"column":6,"nodeType":"928","endLine":15,"endColumn":8,"suggestions":"961"},{"ruleId":"930","severity":1,"message":"931","line":174,"column":13,"nodeType":"932","messageId":"933","endLine":174,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":183,"column":72,"nodeType":"936","messageId":"937","endLine":183,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":16,"column":6,"nodeType":"928","endLine":16,"endColumn":8,"suggestions":"962"},{"ruleId":"930","severity":1,"message":"931","line":173,"column":13,"nodeType":"932","messageId":"933","endLine":173,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":182,"column":72,"nodeType":"936","messageId":"937","endLine":182,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":16,"column":6,"nodeType":"928","endLine":16,"endColumn":8,"suggestions":"963"},{"ruleId":"930","severity":1,"message":"931","line":178,"column":13,"nodeType":"932","messageId":"933","endLine":178,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":187,"column":72,"nodeType":"936","messageId":"937","endLine":187,"endColumn":74},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":17,"column":6,"nodeType":"928","endLine":17,"endColumn":8,"suggestions":"964"},{"ruleId":"930","severity":1,"message":"931","line":174,"column":13,"nodeType":"932","messageId":"933","endLine":174,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":183,"column":72,"nodeType":"936","messageId":"937","endLine":183,"endColumn":74},{"ruleId":"926","severity":1,"message":"927","line":20,"column":6,"nodeType":"928","endLine":20,"endColumn":8,"suggestions":"965"},{"ruleId":"930","severity":1,"message":"931","line":202,"column":13,"nodeType":"932","messageId":"933","endLine":202,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":211,"column":72,"nodeType":"936","messageId":"937","endLine":211,"endColumn":74},{"ruleId":"926","severity":1,"message":"927","line":17,"column":6,"nodeType":"928","endLine":17,"endColumn":8,"suggestions":"966"},{"ruleId":"930","severity":1,"message":"931","line":235,"column":13,"nodeType":"932","messageId":"933","endLine":235,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":244,"column":72,"nodeType":"936","messageId":"937","endLine":244,"endColumn":74},{"ruleId":"926","severity":1,"message":"927","line":13,"column":6,"nodeType":"928","endLine":13,"endColumn":8,"suggestions":"967"},{"ruleId":"934","severity":1,"message":"935","line":204,"column":72,"nodeType":"936","messageId":"937","endLine":204,"endColumn":74},{"ruleId":"910","severity":1,"message":"968","line":1,"column":10,"nodeType":"912","messageId":"913","endLine":1,"endColumn":27},{"ruleId":"910","severity":1,"message":"969","line":1,"column":10,"nodeType":"912","messageId":"913","endLine":1,"endColumn":25},{"ruleId":"910","severity":1,"message":"970","line":1,"column":10,"nodeType":"912","messageId":"913","endLine":1,"endColumn":20},{"ruleId":"910","severity":1,"message":"971","line":1,"column":10,"nodeType":"912","messageId":"913","endLine":1,"endColumn":23},{"ruleId":"910","severity":1,"message":"972","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":36},{"ruleId":"910","severity":1,"message":"919","line":6,"column":3,"nodeType":"912","messageId":"913","endLine":6,"endColumn":13},{"ruleId":"910","severity":1,"message":"920","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":15},{"ruleId":"910","severity":1,"message":"973","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":31},{"ruleId":"910","severity":1,"message":"919","line":6,"column":3,"nodeType":"912","messageId":"913","endLine":6,"endColumn":13},{"ruleId":"910","severity":1,"message":"920","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":15},{"ruleId":"910","severity":1,"message":"974","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":34},{"ruleId":"910","severity":1,"message":"919","line":6,"column":3,"nodeType":"912","messageId":"913","endLine":6,"endColumn":13},{"ruleId":"910","severity":1,"message":"920","line":11,"column":10,"nodeType":"912","messageId":"913","endLine":11,"endColumn":15},{"ruleId":"910","severity":1,"message":"975","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":29},{"ruleId":"910","severity":1,"message":"919","line":5,"column":3,"nodeType":"912","messageId":"913","endLine":5,"endColumn":13},{"ruleId":"910","severity":1,"message":"920","line":10,"column":10,"nodeType":"912","messageId":"913","endLine":10,"endColumn":15},{"ruleId":"910","severity":1,"message":"919","line":5,"column":3,"nodeType":"912","messageId":"913","endLine":5,"endColumn":13},{"ruleId":"910","severity":1,"message":"919","line":4,"column":3,"nodeType":"912","messageId":"913","endLine":4,"endColumn":13},{"ruleId":"910","severity":1,"message":"919","line":4,"column":3,"nodeType":"912","messageId":"913","endLine":4,"endColumn":13},{"ruleId":"910","severity":1,"message":"919","line":4,"column":3,"nodeType":"912","messageId":"913","endLine":4,"endColumn":13},{"ruleId":"910","severity":1,"message":"919","line":5,"column":3,"nodeType":"912","messageId":"913","endLine":5,"endColumn":13},{"ruleId":"910","severity":1,"message":"919","line":4,"column":3,"nodeType":"912","messageId":"913","endLine":4,"endColumn":13},{"ruleId":"910","severity":1,"message":"919","line":5,"column":3,"nodeType":"912","messageId":"913","endLine":5,"endColumn":13},{"ruleId":"910","severity":1,"message":"919","line":4,"column":3,"nodeType":"912","messageId":"913","endLine":4,"endColumn":13},{"ruleId":"910","severity":1,"message":"976","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":32},{"ruleId":"910","severity":1,"message":"919","line":5,"column":3,"nodeType":"912","messageId":"913","endLine":5,"endColumn":13},{"ruleId":"910","severity":1,"message":"920","line":10,"column":10,"nodeType":"912","messageId":"913","endLine":10,"endColumn":15},{"ruleId":"910","severity":1,"message":"977","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":30},{"ruleId":"910","severity":1,"message":"919","line":5,"column":3,"nodeType":"912","messageId":"913","endLine":5,"endColumn":13},{"ruleId":"910","severity":1,"message":"920","line":10,"column":10,"nodeType":"912","messageId":"913","endLine":10,"endColumn":15},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"926","severity":1,"message":"981","line":21,"column":13,"nodeType":"982","endLine":24,"endColumn":4},{"ruleId":"926","severity":1,"message":"927","line":24,"column":6,"nodeType":"928","endLine":24,"endColumn":8,"suggestions":"983"},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"978","line":6,"column":23,"nodeType":"912","messageId":"913","endLine":6,"endColumn":34},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"984","line":7,"column":10,"nodeType":"912","messageId":"913","endLine":7,"endColumn":21},{"ruleId":"910","severity":1,"message":"985","line":7,"column":40,"nodeType":"912","messageId":"913","endLine":7,"endColumn":51},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"986","line":65,"column":3,"nodeType":"912","messageId":"913","endLine":65,"endColumn":13},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"921","line":15,"column":10,"nodeType":"912","messageId":"913","endLine":15,"endColumn":28},{"ruleId":"910","severity":1,"message":"987","line":20,"column":10,"nodeType":"912","messageId":"913","endLine":20,"endColumn":16},{"ruleId":"926","severity":1,"message":"981","line":22,"column":13,"nodeType":"982","endLine":26,"endColumn":4},{"ruleId":"926","severity":1,"message":"927","line":26,"column":6,"nodeType":"928","endLine":26,"endColumn":8,"suggestions":"988"},{"ruleId":"926","severity":1,"message":"981","line":25,"column":13,"nodeType":"982","endLine":32,"endColumn":4},{"ruleId":"926","severity":1,"message":"927","line":32,"column":6,"nodeType":"928","endLine":32,"endColumn":8,"suggestions":"989"},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"941","severity":1,"message":"990","line":162,"column":21,"nodeType":"940","endLine":169,"endColumn":22},{"ruleId":"941","severity":1,"message":"990","line":394,"column":21,"nodeType":"940","endLine":401,"endColumn":22},{"ruleId":"926","severity":1,"message":"981","line":24,"column":13,"nodeType":"982","endLine":30,"endColumn":4},{"ruleId":"926","severity":1,"message":"927","line":30,"column":6,"nodeType":"928","endLine":30,"endColumn":8,"suggestions":"991"},{"ruleId":"930","severity":1,"message":"931","line":450,"column":21,"nodeType":"932","messageId":"933","endLine":450,"endColumn":33},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"926","severity":1,"message":"927","line":30,"column":6,"nodeType":"928","endLine":30,"endColumn":8,"suggestions":"992"},{"ruleId":"926","severity":1,"message":"981","line":21,"column":13,"nodeType":"982","endLine":28,"endColumn":4},{"ruleId":"926","severity":1,"message":"927","line":28,"column":6,"nodeType":"928","endLine":28,"endColumn":8,"suggestions":"993"},{"ruleId":"930","severity":1,"message":"931","line":352,"column":21,"nodeType":"932","messageId":"933","endLine":352,"endColumn":33},{"ruleId":"910","severity":1,"message":"979","line":10,"column":10,"nodeType":"912","messageId":"913","endLine":10,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":11,"column":8,"nodeType":"912","messageId":"913","endLine":11,"endColumn":12},{"ruleId":"994","severity":1,"message":"995","line":13,"column":5,"nodeType":"996","messageId":"937","endLine":13,"endColumn":30},{"ruleId":"994","severity":1,"message":"995","line":31,"column":5,"nodeType":"996","messageId":"937","endLine":31,"endColumn":30},{"ruleId":"994","severity":1,"message":"995","line":50,"column":5,"nodeType":"996","messageId":"937","endLine":50,"endColumn":30},{"ruleId":"910","severity":1,"message":"980","line":1,"column":8,"nodeType":"912","messageId":"913","endLine":1,"endColumn":12},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":18,"column":6,"nodeType":"928","endLine":18,"endColumn":8,"suggestions":"997"},{"ruleId":"930","severity":1,"message":"931","line":204,"column":13,"nodeType":"932","messageId":"933","endLine":204,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":213,"column":72,"nodeType":"936","messageId":"937","endLine":213,"endColumn":74},{"ruleId":"910","severity":1,"message":"979","line":9,"column":10,"nodeType":"912","messageId":"913","endLine":9,"endColumn":15},{"ruleId":"910","severity":1,"message":"980","line":10,"column":8,"nodeType":"912","messageId":"913","endLine":10,"endColumn":12},{"ruleId":"910","severity":1,"message":"998","line":33,"column":9,"nodeType":"912","messageId":"913","endLine":33,"endColumn":21},{"ruleId":"941","severity":1,"message":"990","line":267,"column":21,"nodeType":"940","endLine":274,"endColumn":22},{"ruleId":"941","severity":1,"message":"990","line":446,"column":21,"nodeType":"940","endLine":453,"endColumn":22},{"ruleId":"941","severity":1,"message":"990","line":752,"column":21,"nodeType":"940","endLine":759,"endColumn":22},{"ruleId":"941","severity":1,"message":"990","line":891,"column":21,"nodeType":"940","endLine":898,"endColumn":22},{"ruleId":"941","severity":1,"message":"990","line":1031,"column":21,"nodeType":"940","endLine":1038,"endColumn":22},{"ruleId":"910","severity":1,"message":"999","line":3,"column":3,"nodeType":"912","messageId":"913","endLine":3,"endColumn":19},{"ruleId":"910","severity":1,"message":"1000","line":17,"column":10,"nodeType":"912","messageId":"913","endLine":17,"endColumn":27},{"ruleId":"910","severity":1,"message":"1001","line":28,"column":9,"nodeType":"912","messageId":"913","endLine":28,"endColumn":15},{"ruleId":"910","severity":1,"message":"1002","line":29,"column":9,"nodeType":"912","messageId":"913","endLine":29,"endColumn":19},{"ruleId":"910","severity":1,"message":"1003","line":30,"column":9,"nodeType":"912","messageId":"913","endLine":30,"endColumn":12},{"ruleId":"926","severity":1,"message":"981","line":39,"column":13,"nodeType":"982","endLine":50,"endColumn":4},{"ruleId":"926","severity":1,"message":"927","line":50,"column":6,"nodeType":"928","endLine":50,"endColumn":8,"suggestions":"1004"},{"ruleId":"941","severity":1,"message":"990","line":324,"column":23,"nodeType":"940","endLine":331,"endColumn":24},{"ruleId":"941","severity":1,"message":"990","line":660,"column":23,"nodeType":"940","endLine":667,"endColumn":24},{"ruleId":"941","severity":1,"message":"990","line":845,"column":23,"nodeType":"940","endLine":852,"endColumn":24},{"ruleId":"910","severity":1,"message":"948","line":2,"column":21,"nodeType":"912","messageId":"913","endLine":2,"endColumn":34},{"ruleId":"926","severity":1,"message":"927","line":16,"column":6,"nodeType":"928","endLine":16,"endColumn":8,"suggestions":"1005"},{"ruleId":"910","severity":1,"message":"1006","line":24,"column":9,"nodeType":"912","messageId":"913","endLine":24,"endColumn":20},{"ruleId":"930","severity":1,"message":"931","line":318,"column":13,"nodeType":"932","messageId":"933","endLine":318,"endColumn":52},{"ruleId":"934","severity":1,"message":"935","line":327,"column":72,"nodeType":"936","messageId":"937","endLine":327,"endColumn":74},{"ruleId":"910","severity":1,"message":"977","line":3,"column":10,"nodeType":"912","messageId":"913","endLine":3,"endColumn":30},{"ruleId":"910","severity":1,"message":"919","line":5,"column":3,"nodeType":"912","messageId":"913","endLine":5,"endColumn":13},"no-unused-vars","'loadEmployees' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1007"],"no-negated-in-lhs",["1008"],"'fetchSampleData' is defined but never used.","'APP_LOADED' is defined but never used.","'delay' is defined but never used.","'createCounterparty' is defined but never used.",["1007"],["1008"],"'Redirect' is defined but never used.","'authenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1009"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","'Chart' is defined but never used.",["1010"],"'series' is assigned a value but never used.","'chartOptions' is assigned a value but never used.","'basicBar' is assigned a value but never used.","'defaultThemes' is defined but never used.",["1011"],["1012"],["1013"],["1014"],["1015"],["1016"],["1017"],["1018"],["1019"],["1020"],["1021"],["1022"],["1023"],["1024"],["1025"],["1026"],["1027"],["1028"],["1029"],"'sampleDataExpense' is defined but never used.","'sampleDataOrder' is defined but never used.","'sampleData' is defined but never used.","'sampleDataLab' is defined but never used.","'fetchSampleDataDepartments' is defined but never used.","'fethcSampleDataDuties' is defined but never used.","'fetchSampleDataReference' is defined but never used.","'fethcSampleDataDocs' is defined but never used.","'fetchSampleDataExpense' is defined but never used.","'fetchSampleDataOrder' is defined but never used.","'useSelector' is defined but never used.","'toast' is defined but never used.","'cuid' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["1030"],"'createOrder' is defined but never used.","'updateOrder' is defined but never used.","'docOptions' is assigned a value but never used.","'loader' is assigned a value but never used.",["1031"],["1032"],"The attribute aria-expanded is not supported by the role menu.",["1033"],["1034"],["1035"],"no-dupe-keys","Duplicate key 'certificateExpirationDate'.","ObjectExpression",["1036"],"'placeOptions' is assigned a value but never used.","'CREATE_OPERATION' is defined but never used.","'loadDocumentTypes' is defined but never used.","'taxRef' is assigned a value but never used.","'onTaxEvent' is assigned a value but never used.","'tax' is assigned a value but never used.",["1037"],["1038"],"'buttonStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1039","fix":"1040"},{"desc":"1039","fix":"1041"},{"desc":"1039","fix":"1042"},{"desc":"1039","fix":"1043"},{"desc":"1039","fix":"1044"},{"desc":"1039","fix":"1045"},{"desc":"1039","fix":"1046"},{"desc":"1039","fix":"1047"},{"desc":"1039","fix":"1048"},{"desc":"1039","fix":"1049"},{"desc":"1039","fix":"1050"},{"desc":"1039","fix":"1051"},{"desc":"1039","fix":"1052"},{"desc":"1039","fix":"1053"},{"desc":"1039","fix":"1054"},{"desc":"1039","fix":"1055"},{"desc":"1039","fix":"1056"},{"desc":"1039","fix":"1057"},{"desc":"1039","fix":"1058"},{"desc":"1039","fix":"1059"},{"desc":"1039","fix":"1060"},{"desc":"1039","fix":"1061"},{"desc":"1039","fix":"1062"},{"desc":"1039","fix":"1063"},{"desc":"1039","fix":"1064"},{"desc":"1039","fix":"1065"},{"desc":"1039","fix":"1066"},{"desc":"1039","fix":"1067"},{"desc":"1039","fix":"1068"},{"desc":"1039","fix":"1069"},"Update the dependencies array to be: [dispatch]",{"range":"1070","text":"1071"},{"range":"1072","text":"1071"},{"range":"1073","text":"1071"},{"range":"1074","text":"1071"},{"range":"1075","text":"1071"},{"range":"1076","text":"1071"},{"range":"1077","text":"1071"},{"range":"1078","text":"1071"},{"range":"1079","text":"1071"},{"range":"1080","text":"1071"},{"range":"1081","text":"1071"},{"range":"1082","text":"1071"},{"range":"1083","text":"1071"},{"range":"1084","text":"1071"},{"range":"1085","text":"1071"},{"range":"1086","text":"1071"},{"range":"1087","text":"1071"},{"range":"1088","text":"1071"},{"range":"1089","text":"1071"},{"range":"1090","text":"1071"},{"range":"1091","text":"1071"},{"range":"1092","text":"1071"},{"range":"1093","text":"1071"},{"range":"1094","text":"1071"},{"range":"1095","text":"1071"},{"range":"1096","text":"1071"},{"range":"1097","text":"1071"},{"range":"1098","text":"1071"},{"range":"1099","text":"1071"},{"range":"1100","text":"1071"},[2110,2112],"[dispatch]",[355,357],[933,935],[583,585],[843,845],[616,618],[620,622],[562,564],[544,546],[572,574],[647,649],[632,634],[575,577],[575,577],[580,582],[566,568],[647,649],[579,581],[578,580],[614,616],[487,489],[887,889],[976,978],[1220,1222],[1219,1221],[1067,1069],[1246,1248],[668,670],[2098,2100],[563,565]]